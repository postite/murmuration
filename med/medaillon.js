// Generated by Haxe 3.3.0
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) {
		return undefined;
	}
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(len == null) {
		len = s.length;
	} else if(len < 0) {
		if(pos == 0) {
			len = s.length + len;
		} else {
			return "";
		}
	}
	return s.substr(pos,len);
};
HxOverrides.remove = function(a,obj) {
	var i = a.indexOf(obj);
	if(i == -1) {
		return false;
	}
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = ["Lambda"];
Lambda.array = function(it) {
	var a = [];
	var tmp = $iterator(it)();
	while(tmp.hasNext()) a.push(tmp.next());
	return a;
};
Lambda.has = function(it,elt) {
	var tmp = $iterator(it)();
	while(tmp.hasNext()) if(tmp.next() == elt) {
		return true;
	}
	return false;
};
Lambda.count = function(it,pred) {
	var n = 0;
	if(pred == null) {
		var tmp = $iterator(it)();
		while(tmp.hasNext()) {
			tmp.next();
			++n;
		}
	} else {
		var tmp1 = $iterator(it)();
		while(tmp1.hasNext()) if(pred(tmp1.next())) {
			++n;
		}
	}
	return n;
};
Math.__name__ = ["Math"];
var Reflect = function() { };
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	if(typeof(f) == "function") {
		return !(f.__name__ || f.__ename__);
	} else {
		return false;
	}
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) {
		return false;
	}
	delete(o[field]);
	return true;
};
var Std = function() { };
Std.__name__ = ["Std"];
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringBuf = function() {
	this.b = "";
};
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	__class__: StringBuf
};
var StringTools = function() { };
StringTools.__name__ = ["StringTools"];
StringTools.hex = function(n,digits) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var Type = function() { };
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) {
		return null;
	}
	return a.join(".");
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	case 9:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8]);
	case 10:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9]);
	case 11:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10]);
	case 12:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11]);
	case 13:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12]);
	case 14:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7],args[8],args[9],args[10],args[11],args[12],args[13]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
};
var de_polygonal_Printf = function() { };
de_polygonal_Printf.__name__ = ["de","polygonal","Printf"];
de_polygonal_Printf.init = function() {
	de_polygonal_Printf.dataTypeMap = de_polygonal_Printf.makeDataTypeMap();
	de_polygonal_Printf.formatIntFuncHash = new haxe_ds_IntMap();
	de_polygonal_Printf.formatIntFuncHash.h[1] = de_polygonal_Printf.formatSignedDecimal;
	de_polygonal_Printf.formatIntFuncHash.h[2] = de_polygonal_Printf.formatUnsignedDecimal;
	de_polygonal_Printf.formatIntFuncHash.h[0] = de_polygonal_Printf.formatCharacter;
	de_polygonal_Printf.formatIntFuncHash.h[4] = de_polygonal_Printf.formatHexadecimal;
	de_polygonal_Printf.formatIntFuncHash.h[3] = de_polygonal_Printf.formatOctal;
	de_polygonal_Printf.formatIntFuncHash.h[5] = de_polygonal_Printf.formatBinary;
	de_polygonal_Printf.formatFloatFuncHash = new haxe_ds_IntMap();
	de_polygonal_Printf.formatFloatFuncHash.h[0] = de_polygonal_Printf.formatNormalFloat;
	de_polygonal_Printf.formatFloatFuncHash.h[1] = de_polygonal_Printf.formatScientific;
	de_polygonal_Printf.formatFloatFuncHash.h[2] = de_polygonal_Printf.formatNaturalFloat;
	de_polygonal_Printf.formatStringFuncHash = new haxe_ds_IntMap();
	de_polygonal_Printf.formatStringFuncHash.h[2] = de_polygonal_Printf.formatString;
};
de_polygonal_Printf.makeDataTypeMap = function() {
	var hash = new haxe_ds_IntMap();
	var value = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.ISignedDecimal);
	hash.h[105] = value;
	var value1 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.ISignedDecimal);
	hash.h[100] = value1;
	var value2 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.IUnsignedDecimal);
	hash.h[117] = value2;
	var value3 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.ICharacter);
	hash.h[99] = value3;
	var value4 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.IHex);
	hash.h[120] = value4;
	var value5 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.IHex);
	hash.h[88] = value5;
	var value6 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.IOctal);
	hash.h[111] = value6;
	var value7 = de_polygonal__$Printf_FormatDataType.FmtInteger(de_polygonal__$Printf_IntegerType.IBin);
	hash.h[98] = value7;
	var value8 = de_polygonal__$Printf_FormatDataType.FmtFloat(de_polygonal__$Printf_FloatType.FNormal);
	hash.h[102] = value8;
	var value9 = de_polygonal__$Printf_FormatDataType.FmtFloat(de_polygonal__$Printf_FloatType.FScientific);
	hash.h[101] = value9;
	var value10 = de_polygonal__$Printf_FormatDataType.FmtFloat(de_polygonal__$Printf_FloatType.FScientific);
	hash.h[69] = value10;
	var value11 = de_polygonal__$Printf_FormatDataType.FmtFloat(de_polygonal__$Printf_FloatType.FNatural);
	hash.h[103] = value11;
	var value12 = de_polygonal__$Printf_FormatDataType.FmtFloat(de_polygonal__$Printf_FloatType.FNatural);
	hash.h[71] = value12;
	hash.h[115] = de_polygonal__$Printf_FormatDataType.FmtString;
	hash.h[112] = de_polygonal__$Printf_FormatDataType.FmtPointer;
	hash.h[110] = de_polygonal__$Printf_FormatDataType.FmtNothing;
	return hash;
};
de_polygonal_Printf.format = function(fmt,args) {
	if(!de_polygonal_Printf._initialized) {
		de_polygonal_Printf._initialized = true;
		de_polygonal_Printf.init();
	}
	var _g1 = 0;
	var _g = args.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(args[i] == null) {
			args[i] = "null";
		}
	}
	var output = "";
	var argIndex = 0;
	var tokens = de_polygonal_Printf.tokenize(fmt);
	var _g2 = 0;
	while(_g2 < tokens.length) {
		var token = tokens[_g2];
		++_g2;
		switch(token[1]) {
		case 0:
			output += token[2];
			break;
		case 1:
			var tagArgs = token[3];
			var type = token[2];
			tagArgs.width = tagArgs.width != null?tagArgs.width:js_Boot.__cast(args[argIndex++] , Int);
			tagArgs.precision = tagArgs.precision != null?tagArgs.precision:js_Boot.__cast(args[argIndex++] , Int);
			var value = args[argIndex++];
			var formatFunction;
			switch(type[1]) {
			case 0:
				formatFunction = de_polygonal_Printf.formatIntFuncHash.h[type[2][1]];
				break;
			case 1:
				formatFunction = de_polygonal_Printf.formatFloatFuncHash.h[type[2][1]];
				break;
			case 2:
				formatFunction = de_polygonal_Printf.formatStringFuncHash.h[2];
				break;
			case 3:
				throw new js__$Boot_HaxeError("specifier 'p' is not supported");
				break;
			case 4:
				throw new js__$Boot_HaxeError("specifier 'n' is not supported");
				break;
			}
			output += formatFunction(value,tagArgs);
			break;
		case 2:
			var name = token[2];
			if(!Object.prototype.hasOwnProperty.call(args[0],name)) {
				throw new js__$Boot_HaxeError("no field named " + name);
			}
			output += Std.string(Reflect.field(args[0],name));
			break;
		case 3:
			throw new js__$Boot_HaxeError("invalid format specifier");
			break;
		}
	}
	return output;
};
de_polygonal_Printf.tokenize = function(fmt) {
	var length = fmt.length;
	var lastStr = new StringBuf();
	var i = 0;
	var tokens = [];
	while(i < length) {
		var c = fmt.charCodeAt(i++);
		if(c == 37) {
			c = fmt.charCodeAt(i++);
			if(c == 37) {
				lastStr.b += String.fromCharCode(c);
			} else {
				if(lastStr.b.length > 0) {
					tokens.push(de_polygonal__$Printf_FormatToken.BareString(lastStr.b));
					lastStr = new StringBuf();
				}
				var token;
				if(c == 40) {
					var endPos = fmt.indexOf(")",i);
					if(endPos == -1) {
						token = de_polygonal__$Printf_FormatToken.Unknown("named param",i);
					} else {
						var paramName = HxOverrides.substr(fmt,i,endPos - i);
						i = endPos + 1;
						token = de_polygonal__$Printf_FormatToken.Property(paramName);
					}
				} else {
					var params = { flags : 0, pos : -1, width : -1, precision : -1};
					while(c == 45 || c == 43 || c == 35 || c == 48 || c == 32) {
						if(c == 45) {
							params.flags |= 1;
						} else if(c == 43) {
							params.flags |= 2;
						} else if(c == 35) {
							params.flags |= 8;
						} else if(c == 48) {
							params.flags |= 16;
						} else if(c == 32) {
							params.flags |= 4;
						}
						c = fmt.charCodeAt(i++);
					}
					if((params.flags & 1) != 0 && (params.flags & 16) != 0) {
						params.flags &= 268435439;
					}
					if((params.flags & 4) != 0 && (params.flags & 2) != 0) {
						params.flags &= 268435451;
					}
					if(c == 42) {
						params.width = null;
						c = fmt.charCodeAt(i++);
					} else if(c >= 48 && c <= 57) {
						params.width = 0;
						while(c >= 48 && c <= 57) {
							params.width = c - 48 + params.width * 10;
							c = fmt.charCodeAt(i++);
						}
						if(c == 36) {
							params.pos = params.width - 1;
							params.width = -1;
							c = fmt.charCodeAt(i++);
							if(c == 42) {
								params.width = null;
								c = fmt.charCodeAt(i++);
							} else if(c >= 48 && c <= 57) {
								params.width = 0;
								while(c >= 48 && c <= 57) {
									params.width = c - 48 + params.width * 10;
									c = fmt.charCodeAt(i++);
								}
							}
						}
					}
					if(c == 46) {
						c = fmt.charCodeAt(i++);
						if(c == 42) {
							params.precision = null;
							c = fmt.charCodeAt(i++);
						} else if(c >= 48 && c <= 57) {
							params.precision = 0;
							while(c >= 48 && c <= 57) {
								params.precision = c - 48 + params.precision * 10;
								c = fmt.charCodeAt(i++);
							}
						} else {
							params.precision = 0;
						}
					}
					while(c == 104 || c == 108 || c == 76) {
						switch(c) {
						case 76:
							params.flags |= 64;
							break;
						case 104:
							params.flags |= 32;
							break;
						case 108:
							params.flags |= 128;
							break;
						}
						c = fmt.charCodeAt(i++);
					}
					if(c == 69 || c == 71 || c == 88) {
						params.flags |= 256;
					}
					var type = de_polygonal_Printf.dataTypeMap.h[c];
					if(type == null) {
						token = de_polygonal__$Printf_FormatToken.Unknown(String.fromCharCode(c),i);
					} else {
						token = de_polygonal__$Printf_FormatToken.Tag(type,params);
					}
				}
				tokens.push(token);
			}
		} else {
			lastStr.b += String.fromCharCode(c);
		}
	}
	if(lastStr.b.length > 0) {
		tokens.push(de_polygonal__$Printf_FormatToken.BareString(lastStr.b));
	}
	return tokens;
};
de_polygonal_Printf.formatBinary = function(value,args) {
	var output = "";
	var flags = args.flags;
	var precision = args.precision;
	var width = args.width;
	if(precision == -1) {
		precision = 1;
	}
	if(value != 0) {
		if((flags & 32) != 0) {
			value &= 65535;
		}
		var i = value;
		while(true) {
			output = ((i & 1) > 0?"1":"0") + output;
			i >>>= 1;
			if(!(i > 0)) {
				break;
			}
		}
		if(precision > 1) {
			if(precision > output.length) {
				output = de_polygonal_Printf.lpad(output,"0",precision);
			}
			if((flags & 8) != 0) {
				output = "b" + output;
			}
		}
	}
	if((flags & 1) != 0) {
		if(width > output.length) {
			return de_polygonal_Printf.rpad(output," ",width);
		} else {
			return output;
		}
	} else if(width > output.length) {
		return de_polygonal_Printf.lpad(output,(flags & 16) != 0?"0":" ",width);
	} else {
		return output;
	}
};
de_polygonal_Printf.formatOctal = function(value,args) {
	var output = "";
	var flags = args.flags;
	var precision = args.precision;
	var width = args.width;
	if(precision == -1) {
		precision = 1;
	}
	if(value != 0) {
		if((flags & 32) != 0) {
			value &= 65535;
		}
		output = de_polygonal_Printf.toOct(value);
		if((flags & 8) != 0) {
			output = "0" + output;
		}
		if(precision > 1 && output.length < precision) {
			output = de_polygonal_Printf.lpad(output,"0",precision);
		}
	}
	if((flags & 1) != 0) {
		if(width > output.length) {
			return de_polygonal_Printf.rpad(output," ",width);
		} else {
			return output;
		}
	} else if(width > output.length) {
		return de_polygonal_Printf.lpad(output,(flags & 16) != 0?"0":" ",width);
	} else {
		return output;
	}
};
de_polygonal_Printf.formatHexadecimal = function(value,args) {
	var output = "";
	var flags = args.flags;
	var precision = args.precision;
	var width = args.width;
	if(precision == -1) {
		precision = 1;
	}
	if(value != 0) {
		if((flags & 32) != 0) {
			value &= 65535;
		}
		var x = value;
		var s = "";
		while(true) {
			s = "0123456789ABCDEF".charAt(x & 15) + s;
			x >>>= 4;
			if(!(x > 0)) {
				break;
			}
		}
		output = s;
		if(precision > 1 && output.length < precision) {
			output = de_polygonal_Printf.lpad(output,"0",precision);
		}
		if((flags & 8) != 0 && value != 0) {
			output = "0x" + output;
		}
		if((flags & 256) != 0) {
			output = output.toUpperCase();
		} else {
			output = output.toLowerCase();
		}
	}
	if((flags & 1) != 0) {
		if(width > output.length) {
			return de_polygonal_Printf.rpad(output," ",width);
		} else {
			return output;
		}
	} else if(width > output.length) {
		return de_polygonal_Printf.lpad(output,(flags & 16) != 0?"0":" ",width);
	} else {
		return output;
	}
};
de_polygonal_Printf.formatUnsignedDecimal = function(value,args) {
	var output;
	var precision = args.precision;
	if(value >= 0) {
		output = de_polygonal_Printf.formatSignedDecimal(value,args);
	} else {
		output = haxe__$Int64_Int64_$Impl_$.toString(new haxe__$Int64__$_$_$Int64(0,value));
		if(precision > 1 && output.length < precision) {
			output = de_polygonal_Printf.lpad(output,"0",precision);
		}
		output = de_polygonal_Printf.padNumber(output,value,args.flags,args.width);
	}
	return output;
};
de_polygonal_Printf.formatNaturalFloat = function(value,args) {
	args.precision = 0;
	var formatedFloat = de_polygonal_Printf.formatNormalFloat(value,args);
	var formatedScientific = de_polygonal_Printf.formatScientific(value,args);
	if((args.flags & 8) != 0) {
		if(formatedFloat.indexOf(".") != -1) {
			var pos = formatedFloat.length - 1;
			while(formatedFloat.charCodeAt(pos) == 48) --pos;
			formatedFloat = HxOverrides.substr(formatedFloat,0,pos);
		}
	}
	if(formatedFloat.length <= formatedScientific.length) {
		return formatedFloat;
	} else {
		return formatedScientific;
	}
};
de_polygonal_Printf.formatScientific = function(value,args) {
	var output = "";
	var flags = args.flags;
	var precision = args.precision;
	if(precision == -1) {
		precision = 6;
	}
	var sign;
	var exponent;
	if(value == 0) {
		sign = 0;
		exponent = 0;
		output = "0";
		if(precision > 0) {
			output = "0" + ".";
			var _g1 = 0;
			var _g = precision;
			while(_g1 < _g) {
				++_g1;
				output += "0";
			}
		}
	} else {
		if(value > 0.) {
			sign = 1;
		} else if(value < 0.) {
			sign = -1;
		} else {
			sign = 0;
		}
		value = Math.abs(value);
		exponent = Math.floor(Math.log(value) / 2.302585092994046);
		value /= Math.pow(10,exponent);
		var p = Math.pow(0.1,precision);
		value = Math.round(value / p) * p;
	}
	output += sign < 0?"-":(flags & 2) != 0?"+":"";
	if(value != 0) {
		output += de_polygonal_Printf.rpad(HxOverrides.substr(de_polygonal_Printf.str(value),0,precision + 2),"0",precision + 2);
	}
	output += (flags & 256) != 0?"E":"e";
	output += exponent >= 0?"+":"-";
	if(exponent < 10) {
		output += "00";
	} else if(exponent < 100) {
		output += "0";
	}
	output += de_polygonal_Printf.str(de_polygonal_Printf.iabs(exponent));
	return output;
};
de_polygonal_Printf.formatSignedDecimal = function(value,args) {
	var output;
	var flags = args.flags;
	var precision = args.precision;
	var width = args.width;
	if(precision == 0 && value == 0) {
		output = "";
	} else {
		if((flags & 32) != 0) {
			value &= 65535;
		}
		output = de_polygonal_Printf.str(de_polygonal_Printf.iabs(value));
		if(precision > 1 && output.length < precision) {
			output = de_polygonal_Printf.lpad(output,"0",precision);
		}
		if((flags & 16) != 0) {
			output = de_polygonal_Printf.lpad(output,"0",value < 0?width - 1:width);
		}
		if(value < 0) {
			output = "-" + output;
		}
	}
	if(value >= 0) {
		if((flags & 2) != 0) {
			output = "+" + output;
		} else if((flags & 4) != 0) {
			output = " " + output;
		}
	}
	if((flags & 1) != 0) {
		output = de_polygonal_Printf.rpad(output," ",args.width);
	} else {
		output = de_polygonal_Printf.lpad(output," ",args.width);
	}
	return output;
};
de_polygonal_Printf.formatString = function(x,args) {
	var output = x;
	var precision = args.precision;
	var width = args.width;
	if(precision > 0) {
		output = HxOverrides.substr(x,0,precision);
	}
	var k = output.length;
	if(width > 0 && k < width) {
		if((args.flags & 1) != 0) {
			output = de_polygonal_Printf.rpad(output," ",width);
		} else {
			output = de_polygonal_Printf.lpad(output," ",width);
		}
	}
	return output;
};
de_polygonal_Printf.formatNormalFloat = function(value,args) {
	var output;
	var flags = args.flags;
	var precision = args.precision;
	var width = args.width;
	if(precision == -1) {
		precision = 6;
	}
	if(precision == 0) {
		output = de_polygonal_Printf.str(de_polygonal_Printf.iabs(Math.round(value)));
		if((flags & 8) != 0) {
			output += ".";
		}
	} else {
		var y = Math.pow(.1,precision);
		value = Math.round(value / y) * y;
		var decimalPlaces = precision;
		if(isNaN(value)) {
			output = "NaN";
		} else {
			var t = Math.pow(10,decimalPlaces) | 0;
			output = de_polygonal_Printf.str((value * t | 0) / t);
			var i = output.indexOf(".");
			if(i != -1) {
				var _g1 = HxOverrides.substr(output,i + 1,null).length;
				while(_g1 < decimalPlaces) {
					++_g1;
					output += "0";
				}
			} else {
				output += ".";
				var _g11 = 0;
				while(_g11 < decimalPlaces) {
					++_g11;
					output += "0";
				}
			}
		}
	}
	if((flags & 2) != 0 && value >= 0) {
		output = "+" + output;
	} else if((flags & 4) != 0 && value >= 0) {
		output = " " + output;
	}
	if((flags & 16) != 0) {
		output = de_polygonal_Printf.lpad(output,"0",value < 0?width - 1:width);
	}
	if((flags & 1) != 0) {
		output = de_polygonal_Printf.rpad(output," ",width);
	} else {
		output = de_polygonal_Printf.lpad(output," ",width);
	}
	return output;
};
de_polygonal_Printf.formatCharacter = function(x,args) {
	var output = String.fromCharCode(x);
	if(args.width > 1) {
		if((args.flags & 1) != 0) {
			output = de_polygonal_Printf.rpad(output," ",args.width);
		} else {
			output = de_polygonal_Printf.lpad(output," ",args.width);
		}
	}
	return output;
};
de_polygonal_Printf.padNumber = function(x,n,flags,width) {
	var k = x.length;
	if(width > 0 && k < width) {
		if((flags & 1) != 0) {
			x = de_polygonal_Printf.rpad(x," ",width);
		} else if(n >= 0) {
			x = de_polygonal_Printf.lpad(x,(flags & 16) != 0?"0":" ",width);
		} else if((flags & 16) != 0) {
			x = "-" + de_polygonal_Printf.lpad(HxOverrides.substr(x,1,null),"0",width);
		} else {
			x = de_polygonal_Printf.lpad(x," ",width);
		}
	}
	return x;
};
de_polygonal_Printf.lpad = function(s,c,l) {
	if(c.length <= 0) {
		throw new js__$Boot_HaxeError("c.length <= 0");
	}
	while(s.length < l) s = c + s;
	return s;
};
de_polygonal_Printf.rpad = function(s,c,l) {
	if(c.length <= 0) {
		throw new js__$Boot_HaxeError("c.length <= 0");
	}
	while(s.length < l) s += c;
	return s;
};
de_polygonal_Printf.toHex = function(x) {
	var s = "";
	while(true) {
		s = "0123456789ABCDEF".charAt(x & 15) + s;
		x >>>= 4;
		if(!(x > 0)) {
			break;
		}
	}
	return s;
};
de_polygonal_Printf.toOct = function(x) {
	var s = "";
	var t = x;
	while(true) {
		s = (t & 7) + s;
		t >>>= 3;
		if(!(t > 0)) {
			break;
		}
	}
	return s;
};
de_polygonal_Printf.iabs = function(x) {
	return Math.abs(x) | 0;
};
de_polygonal_Printf.str = function(x) {
	return Std.string(x);
};
de_polygonal_Printf.codeAt = function(x,i) {
	return x.charCodeAt(i);
};
de_polygonal_Printf.isDigit = function(x) {
	if(x >= 48) {
		return x <= 57;
	} else {
		return false;
	}
};
de_polygonal_Printf.roundTo = function(x,y) {
	return Math.round(x / y) * y;
};
var de_polygonal__$Printf_FormatFlags = { __ename__ : true, __constructs__ : ["Minus","Plus","Space","Sharp","Zero","LengthH","LengthL","Lengthl","UpperCase"] };
de_polygonal__$Printf_FormatFlags.Minus = ["Minus",0];
de_polygonal__$Printf_FormatFlags.Minus.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.Plus = ["Plus",1];
de_polygonal__$Printf_FormatFlags.Plus.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.Space = ["Space",2];
de_polygonal__$Printf_FormatFlags.Space.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.Sharp = ["Sharp",3];
de_polygonal__$Printf_FormatFlags.Sharp.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.Zero = ["Zero",4];
de_polygonal__$Printf_FormatFlags.Zero.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.LengthH = ["LengthH",5];
de_polygonal__$Printf_FormatFlags.LengthH.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.LengthL = ["LengthL",6];
de_polygonal__$Printf_FormatFlags.LengthL.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.Lengthl = ["Lengthl",7];
de_polygonal__$Printf_FormatFlags.Lengthl.__enum__ = de_polygonal__$Printf_FormatFlags;
de_polygonal__$Printf_FormatFlags.UpperCase = ["UpperCase",8];
de_polygonal__$Printf_FormatFlags.UpperCase.__enum__ = de_polygonal__$Printf_FormatFlags;
var de_polygonal__$Printf_FormatToken = { __ename__ : true, __constructs__ : ["BareString","Tag","Property","Unknown"] };
de_polygonal__$Printf_FormatToken.BareString = function(str) { var $x = ["BareString",0,str]; $x.__enum__ = de_polygonal__$Printf_FormatToken; return $x; };
de_polygonal__$Printf_FormatToken.Tag = function(type,args) { var $x = ["Tag",1,type,args]; $x.__enum__ = de_polygonal__$Printf_FormatToken; return $x; };
de_polygonal__$Printf_FormatToken.Property = function(name) { var $x = ["Property",2,name]; $x.__enum__ = de_polygonal__$Printf_FormatToken; return $x; };
de_polygonal__$Printf_FormatToken.Unknown = function(str,pos) { var $x = ["Unknown",3,str,pos]; $x.__enum__ = de_polygonal__$Printf_FormatToken; return $x; };
var de_polygonal__$Printf_FormatDataType = { __ename__ : true, __constructs__ : ["FmtInteger","FmtFloat","FmtString","FmtPointer","FmtNothing"] };
de_polygonal__$Printf_FormatDataType.FmtInteger = function(integerType) { var $x = ["FmtInteger",0,integerType]; $x.__enum__ = de_polygonal__$Printf_FormatDataType; return $x; };
de_polygonal__$Printf_FormatDataType.FmtFloat = function(floatType) { var $x = ["FmtFloat",1,floatType]; $x.__enum__ = de_polygonal__$Printf_FormatDataType; return $x; };
de_polygonal__$Printf_FormatDataType.FmtString = ["FmtString",2];
de_polygonal__$Printf_FormatDataType.FmtString.__enum__ = de_polygonal__$Printf_FormatDataType;
de_polygonal__$Printf_FormatDataType.FmtPointer = ["FmtPointer",3];
de_polygonal__$Printf_FormatDataType.FmtPointer.__enum__ = de_polygonal__$Printf_FormatDataType;
de_polygonal__$Printf_FormatDataType.FmtNothing = ["FmtNothing",4];
de_polygonal__$Printf_FormatDataType.FmtNothing.__enum__ = de_polygonal__$Printf_FormatDataType;
var de_polygonal__$Printf_IntegerType = { __ename__ : true, __constructs__ : ["ICharacter","ISignedDecimal","IUnsignedDecimal","IOctal","IHex","IBin"] };
de_polygonal__$Printf_IntegerType.ICharacter = ["ICharacter",0];
de_polygonal__$Printf_IntegerType.ICharacter.__enum__ = de_polygonal__$Printf_IntegerType;
de_polygonal__$Printf_IntegerType.ISignedDecimal = ["ISignedDecimal",1];
de_polygonal__$Printf_IntegerType.ISignedDecimal.__enum__ = de_polygonal__$Printf_IntegerType;
de_polygonal__$Printf_IntegerType.IUnsignedDecimal = ["IUnsignedDecimal",2];
de_polygonal__$Printf_IntegerType.IUnsignedDecimal.__enum__ = de_polygonal__$Printf_IntegerType;
de_polygonal__$Printf_IntegerType.IOctal = ["IOctal",3];
de_polygonal__$Printf_IntegerType.IOctal.__enum__ = de_polygonal__$Printf_IntegerType;
de_polygonal__$Printf_IntegerType.IHex = ["IHex",4];
de_polygonal__$Printf_IntegerType.IHex.__enum__ = de_polygonal__$Printf_IntegerType;
de_polygonal__$Printf_IntegerType.IBin = ["IBin",5];
de_polygonal__$Printf_IntegerType.IBin.__enum__ = de_polygonal__$Printf_IntegerType;
var de_polygonal__$Printf_FloatType = { __ename__ : true, __constructs__ : ["FNormal","FScientific","FNatural"] };
de_polygonal__$Printf_FloatType.FNormal = ["FNormal",0];
de_polygonal__$Printf_FloatType.FNormal.__enum__ = de_polygonal__$Printf_FloatType;
de_polygonal__$Printf_FloatType.FScientific = ["FScientific",1];
de_polygonal__$Printf_FloatType.FScientific.__enum__ = de_polygonal__$Printf_FloatType;
de_polygonal__$Printf_FloatType.FNatural = ["FNatural",2];
de_polygonal__$Printf_FloatType.FNatural.__enum__ = de_polygonal__$Printf_FloatType;
var de_polygonal_ds_ArrayUtil = function() { };
de_polygonal_ds_ArrayUtil.__name__ = ["de","polygonal","ds","ArrayUtil"];
de_polygonal_ds_ArrayUtil.alloc = function(x) {
	var a = new Array(x);
	return a;
};
de_polygonal_ds_ArrayUtil.trim = function(a,len) {
	if(a.length > len) {
		a.length = len;
		return a;
	} else {
		return a;
	}
};
de_polygonal_ds_ArrayUtil.shrink = function(a,x) {
	if(a.length > x) {
		a.length = x;
	}
	return a;
};
de_polygonal_ds_ArrayUtil.copy = function(src,dst,min,max) {
	if(max == null) {
		max = -1;
	}
	if(min == null) {
		min = 0;
	}
	if(max == -1) {
		max = src.length;
	}
	var j = 0;
	var _g1 = min;
	var _g = max;
	while(_g1 < _g) dst[j++] = src[_g1++];
	return dst;
};
de_polygonal_ds_ArrayUtil.fill = function(dst,x,k) {
	if(k == null) {
		k = -1;
	}
	if(k == -1) {
		k = dst.length;
	}
	var _g1 = 0;
	var _g = k;
	while(_g1 < _g) dst[_g1++] = x;
};
de_polygonal_ds_ArrayUtil.assign = function(dst,C,args,k) {
	if(k == null) {
		k = -1;
	}
	if(k == -1) {
		k = dst.length;
	}
	if(args == null) {
		args = [];
	}
	var _g1 = 0;
	var _g = k;
	while(_g1 < _g) dst[_g1++] = Type.createInstance(C,args);
};
de_polygonal_ds_ArrayUtil.memmove = function(a,destination,source,n) {
	if(source == destination) {
		return;
	} else if(source <= destination) {
		var i = source + n;
		var j = destination + n;
		var _g1 = 0;
		while(_g1 < n) {
			++_g1;
			--i;
			--j;
			a[j] = a[i];
		}
	} else {
		var i1 = source;
		var j1 = destination;
		var _g11 = 0;
		while(_g11 < n) {
			++_g11;
			a[j1] = a[i1];
			++i1;
			++j1;
		}
	}
};
de_polygonal_ds_ArrayUtil.bsearchComparator = function(a,x,min,max,comparator) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(comparator(a[m],x) < 0) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && comparator(a[l],x) == 0) {
		return l;
	} else {
		return ~l;
	}
};
de_polygonal_ds_ArrayUtil.bsearchInt = function(a,x,min,max) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < x) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && a[l] == x) {
		return l;
	} else {
		return ~l;
	}
};
de_polygonal_ds_ArrayUtil.bsearchFloat = function(a,x,min,max) {
	var l = min;
	var m;
	var h = max + 1;
	while(l < h) {
		m = l + (h - l >> 1);
		if(a[m] < x) {
			l = m + 1;
		} else {
			h = m;
		}
	}
	if(l <= max && a[l] == x) {
		return l;
	} else {
		return ~l;
	}
};
de_polygonal_ds_ArrayUtil.shuffle = function(a,rval) {
	var s = a.length;
	if(rval == null) {
		var m = Math;
		while(--s > 1) {
			var i = m.random() * s | 0;
			var t = a[s];
			a[s] = a[i];
			a[i] = t;
		}
	} else {
		var j = 0;
		while(--s > 1) {
			var i1 = rval[j++] * s | 0;
			var t1 = a[s];
			a[s] = a[i1];
			a[i1] = t1;
		}
	}
};
de_polygonal_ds_ArrayUtil.sortRange = function(a,compare,useInsertionSort,first,count) {
	if(a.length > 1) {
		if(useInsertionSort) {
			de_polygonal_ds_ArrayUtil._insertionSort(a,first,count,compare);
		} else {
			de_polygonal_ds_ArrayUtil._quickSort(a,first,count,compare);
		}
	}
};
de_polygonal_ds_ArrayUtil.quickPerm = function(n) {
	var results = [];
	var a = [];
	var p = [];
	var i;
	var j;
	var tmp;
	var _g1 = 0;
	while(_g1 < n) {
		var i1 = _g1++;
		a[i1] = i1 + 1;
		p[i1] = 0;
	}
	results.push(a.slice());
	i = 1;
	while(i < n) if(p[i] < i) {
		j = i % 2 * p[i];
		tmp = a[j];
		a[j] = a[i];
		a[i] = tmp;
		results.push(a.slice());
		p[i]++;
		i = 1;
	} else {
		p[i] = 0;
		++i;
	}
	return results;
};
de_polygonal_ds_ArrayUtil.equals = function(a,b) {
	if(a.length != b.length) {
		return false;
	}
	var _g1 = 0;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(a[i] != b[i]) {
			return false;
		}
	}
	return true;
};
de_polygonal_ds_ArrayUtil.split = function(a,n,k) {
	var output = [];
	var b = null;
	var _g1 = 0;
	while(_g1 < n) {
		var i = _g1++;
		if(i % k == 0) {
			var tmp = i / k | 0;
			b = [];
			output[tmp] = b;
		}
		b.push(a[i]);
	}
	return output;
};
de_polygonal_ds_ArrayUtil._insertionSort = function(a,first,k,cmp) {
	var _g1 = first + 1;
	var _g = first + k;
	while(_g1 < _g) {
		var i = _g1++;
		var x = a[i];
		var j = i;
		while(j > first) {
			var y = a[j - 1];
			if(cmp(y,x) > 0) {
				a[j] = y;
				--j;
			} else {
				break;
			}
		}
		a[j] = x;
	}
};
de_polygonal_ds_ArrayUtil._quickSort = function(a,first,k,cmp) {
	var last = first + k - 1;
	var lo = first;
	var hi = last;
	if(k > 1) {
		var i1 = first + (k >> 1);
		var i2 = first + k - 1;
		var t0 = a[first];
		var t1 = a[i1];
		var t2 = a[i2];
		var mid;
		var t = cmp(t0,t2);
		if(t < 0 && cmp(t0,t1) < 0) {
			if(cmp(t1,t2) < 0) {
				mid = i1;
			} else {
				mid = i2;
			}
		} else if(cmp(t1,t0) < 0 && cmp(t1,t2) < 0) {
			if(t < 0) {
				mid = first;
			} else {
				mid = i2;
			}
		} else if(cmp(t2,t0) < 0) {
			mid = i1;
		} else {
			mid = first;
		}
		var pivot = a[mid];
		a[mid] = a[first];
		while(lo < hi) {
			while(cmp(pivot,a[hi]) < 0 && lo < hi) --hi;
			if(hi != lo) {
				a[lo] = a[hi];
				++lo;
			}
			while(cmp(pivot,a[lo]) > 0 && lo < hi) ++lo;
			if(hi != lo) {
				a[hi] = a[lo];
				--hi;
			}
		}
		a[lo] = pivot;
		de_polygonal_ds_ArrayUtil._quickSort(a,first,lo - first,cmp);
		de_polygonal_ds_ArrayUtil._quickSort(a,lo + 1,last - lo,cmp);
	}
};
var de_polygonal_ds_Cloneable = function() { };
de_polygonal_ds_Cloneable.__name__ = ["de","polygonal","ds","Cloneable"];
de_polygonal_ds_Cloneable.prototype = {
	__class__: de_polygonal_ds_Cloneable
};
var de_polygonal_ds_Hashable = function() { };
de_polygonal_ds_Hashable.__name__ = ["de","polygonal","ds","Hashable"];
de_polygonal_ds_Hashable.prototype = {
	__class__: de_polygonal_ds_Hashable
};
var de_polygonal_ds_Collection = function() { };
de_polygonal_ds_Collection.__name__ = ["de","polygonal","ds","Collection"];
de_polygonal_ds_Collection.__interfaces__ = [de_polygonal_ds_Hashable];
de_polygonal_ds_Collection.prototype = {
	__class__: de_polygonal_ds_Collection
};
var de_polygonal_ds_Comparable = function() { };
de_polygonal_ds_Comparable.__name__ = ["de","polygonal","ds","Comparable"];
de_polygonal_ds_Comparable.prototype = {
	__class__: de_polygonal_ds_Comparable
};
var de_polygonal_ds_DA = function(reservedSize,maxSize) {
	if(maxSize == null) {
		maxSize = -1;
	}
	if(reservedSize == null) {
		reservedSize = 0;
	}
	this._size = 0;
	this._iterator = null;
	this.maxSize = -1;
	if(reservedSize > 0) {
		this._a = new Array(reservedSize);
	} else {
		this._a = [];
	}
	this.key = de_polygonal_ds_HashKey._counter++;
	this.reuseIterator = false;
};
de_polygonal_ds_DA.__name__ = ["de","polygonal","ds","DA"];
de_polygonal_ds_DA.__interfaces__ = [de_polygonal_ds_Collection];
de_polygonal_ds_DA.prototype = {
	pack: function() {
		if(this._a.length == this._size) {
			return;
		}
		var tmp = this._a;
		var x = this._size;
		this._a = new Array(x);
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			this._a[i] = tmp[i];
		}
		var _g11 = this._size;
		var _g2 = tmp.length;
		while(_g11 < _g2) tmp[_g11++] = null;
	}
	,reserve: function(x) {
		if(this._size == x) {
			return;
		}
		var tmp = this._a;
		this._a = new Array(x);
		if(this._size < x) {
			var _g1 = 0;
			var _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				this._a[i] = tmp[i];
			}
		}
	}
	,trim: function(x) {
		this._size = x;
	}
	,get: function(i) {
		return this._a[i];
	}
	,getNext: function(i) {
		return this._a[i + 1 == this._size?0:i + 1];
	}
	,getPrev: function(i) {
		return this._a[i - 1 == -1?this._size - 1:i - 1];
	}
	,set: function(i,x) {
		this._a[i] = x;
		if(i >= this._size) {
			this._size++;
		}
	}
	,swp: function(i,j) {
		var tmp = this._a[i];
		this._a[i] = this._a[j];
		if(i >= this._size) {
			this._size++;
		}
		this._a[j] = tmp;
		if(j >= this._size) {
			this._size++;
		}
	}
	,cpy: function(i,j) {
		this._a[i] = this._a[j];
		if(i >= this._size) {
			this._size++;
		}
	}
	,front: function() {
		return this._a[0];
	}
	,back: function() {
		return this._a[this._size - 1];
	}
	,popBack: function() {
		var x = this._a[this._size - 1];
		this._size--;
		return x;
	}
	,pushBack: function(x) {
		var i = this._size;
		this._a[i] = x;
		if(i >= this._size) {
			this._size++;
		}
	}
	,popFront: function() {
		var x = this._a[0];
		var k = this._size - 1;
		var p = 0;
		while(p < k) this._a[p++] = this._a[p];
		this._size--;
		return x;
	}
	,pushFront: function(x) {
		var p = this._size;
		while(p > 0) this._a[p--] = this._a[p];
		this._a[0] = x;
		this._size++;
	}
	,insertAt: function(i,x) {
		var p = this._size;
		while(p > i) this._a[p--] = this._a[p];
		this._a[i] = x;
		this._size++;
	}
	,removeAt: function(i) {
		var x = this._a[i];
		var k = this._size - 1;
		var p = i;
		while(p < k) this._a[p++] = this._a[p];
		this._size--;
		return x;
	}
	,swapPop: function(i) {
		this._a[i] = this._a[--this._size];
	}
	,removeRange: function(i,n,output) {
		if(output == null) {
			var s = this._size;
			var p = i + n;
			while(p < s) {
				this._a[p - n] = this._a[p];
				++p;
			}
		} else {
			var s1 = this._size;
			var p1 = i + n;
			var e;
			var j;
			while(p1 < s1) {
				j = p1 - n;
				e = this._a[j];
				var i1 = output._size;
				output._a[i1] = e;
				if(i1 >= output._size) {
					output._size++;
				}
				this._a[j] = this._a[p1++];
			}
		}
		this._size -= n;
		return output;
	}
	,concat: function(x,copy) {
		if(copy == null) {
			copy = false;
		}
		if(copy) {
			var copy1 = new de_polygonal_ds_DA();
			copy1._size = this._size + x._size;
			var _g1 = 0;
			var _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				copy1._a[i] = this._a[i];
				if(i >= copy1._size) {
					copy1._size++;
				}
			}
			var _g11 = this._size;
			var _g2 = this._size + x._size;
			while(_g11 < _g2) {
				var i1 = _g11++;
				copy1._a[i1] = x._a[i1 - this._size];
				if(i1 >= copy1._size) {
					copy1._size++;
				}
			}
			return copy1;
		} else {
			var j = this._size;
			this._size += x._size;
			var _g12 = 0;
			var _g3 = x._size;
			while(_g12 < _g3) this._a[j++] = x._a[_g12++];
			return this;
		}
	}
	,indexOf: function(x,from,binarySearch,comparator) {
		if(binarySearch == null) {
			binarySearch = false;
		}
		if(from == null) {
			from = 0;
		}
		if(this._size == 0) {
			return -1;
		} else if(binarySearch) {
			if(comparator != null) {
				return de_polygonal_ds_ArrayUtil.bsearchComparator(this._a,x,from,this._size - 1,comparator);
			} else {
				var k = this._size;
				var l = from;
				var m;
				var h = k;
				while(l < h) {
					m = l + (h - l >> 1);
					if((js_Boot.__cast(this._a[m] , de_polygonal_ds_Comparable)).compare(x) < 0) {
						l = m + 1;
					} else {
						h = m;
					}
				}
				if(l <= k && (js_Boot.__cast(this._a[l] , de_polygonal_ds_Comparable)).compare(x) == 0) {
					return l;
				} else {
					return -l;
				}
			}
		} else {
			var i = from;
			var j = -1;
			var k1 = this._size - 1;
			while(true) {
				if(this._a[i] == x) {
					j = i;
					break;
				}
				if(!(i++ < k1)) {
					break;
				}
			}
			return j;
		}
	}
	,lastIndexOf: function(x,from) {
		if(from == null) {
			from = -1;
		}
		if(this._size == 0) {
			return -1;
		} else {
			if(from < 0) {
				from = this._size + from;
			}
			var j = -1;
			var i = from;
			while(true) {
				if(this._a[i] == x) {
					j = i;
					break;
				}
				if(!(i-- > 0)) {
					break;
				}
			}
			return j;
		}
	}
	,reverse: function() {
		if(this._a.length > this._size) {
			var a = this._a;
			var x = this._size;
			if(a.length > x) {
				a.length = x;
			}
			this._a = a;
		}
		this._a.reverse();
	}
	,assign: function(C,args,n) {
		if(n == null) {
			n = 0;
		}
		if(n > 0) {
			this._size = n;
		} else {
			n = this._size;
		}
		if(args == null) {
			args = [];
		}
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) this._a[_g1++] = Type.createInstance(C,args);
	}
	,fill: function(x,n) {
		if(n == null) {
			n = 0;
		}
		if(n > 0) {
			this._size = n;
		} else {
			n = this._size;
		}
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) this._a[_g1++] = x;
		return this;
	}
	,memmove: function(destination,source,n) {
		if(source == destination) {
			return;
		} else if(source <= destination) {
			var i = source + n;
			var j = destination + n;
			var _g1 = 0;
			while(_g1 < n) {
				++_g1;
				--i;
				--j;
				this._a[j] = this._a[i];
			}
		} else {
			var i1 = source;
			var j1 = destination;
			var _g11 = 0;
			while(_g11 < n) {
				++_g11;
				this._a[j1] = this._a[i1];
				++i1;
				++j1;
			}
		}
	}
	,join: function(x) {
		if(this._size == 0) {
			return "";
		}
		if(this._size == 1) {
			return Std.string(this._a[0]);
		}
		var s = Std.string(this._a[0]) + x;
		var _g1 = 1;
		var _g = this._size - 1;
		while(_g1 < _g) {
			s += Std.string(this._a[_g1++]);
			s += x;
		}
		s += Std.string(this._a[this._size - 1]);
		return s;
	}
	,sort: function(compare,useInsertionSort,first,count) {
		if(count == null) {
			count = -1;
		}
		if(first == null) {
			first = 0;
		}
		if(useInsertionSort == null) {
			useInsertionSort = false;
		}
		if(this._size > 1) {
			if(count == -1) {
				count = this._size - first;
			}
			if(compare == null) {
				if(useInsertionSort) {
					this._insertionSortComparable(first,count);
				} else {
					this._quickSortComparable(first,count);
				}
			} else if(useInsertionSort) {
				this._insertionSort(first,count,compare);
			} else if(first == 0 && count == this._size) {
				var a = this._a;
				var x = this._size;
				if(a.length > x) {
					a.length = x;
				}
				this._a.sort(compare);
			} else {
				this._quickSort(first,count,compare);
			}
		}
	}
	,inRange: function(i) {
		if(i >= 0) {
			return i < this._size;
		} else {
			return false;
		}
	}
	,getArray: function() {
		return this._a;
	}
	,free: function() {
		var _g1 = 0;
		var _g = this._a.length;
		while(_g1 < _g) this._a[_g1++] = null;
		this._a = null;
		this._iterator = null;
	}
	,contains: function(x) {
		var found = false;
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) if(this._a[_g1++] == x) {
			found = true;
			break;
		}
		return found;
	}
	,remove: function(x) {
		if(this._size == 0) {
			return false;
		}
		var i = 0;
		var s = this._size;
		while(i < s) {
			if(this._a[i] == x) {
				--s;
				var p = i;
				while(p < s) {
					this._a[p] = this._a[p + 1];
					++p;
				}
				continue;
			}
			++i;
		}
		var found = this._size - s != 0;
		this._size = s;
		return found;
	}
	,clear: function(purge) {
		if(purge == null) {
			purge = false;
		}
		if(purge) {
			var _g1 = 0;
			var _g = this._a.length;
			while(_g1 < _g) this._a[_g1++] = null;
		}
		this._size = 0;
	}
	,iterator: function() {
		if(this.reuseIterator) {
			if(this._iterator == null) {
				this._iterator = new de_polygonal_ds_DAIterator(this);
			} else {
				var _this = this._iterator;
				_this._a = _this._f._a;
				_this._s = _this._f._size;
				_this._i = 0;
			}
			return this._iterator;
		} else {
			return new de_polygonal_ds_DAIterator(this);
		}
	}
	,size: function() {
		return this._size;
	}
	,isEmpty: function() {
		return this._size == 0;
	}
	,toArray: function() {
		var x = this._size;
		var a = new Array(x);
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			a[i] = this._a[i];
		}
		return a;
	}
	,clone: function(assign,copier) {
		if(assign == null) {
			assign = true;
		}
		var copy = new de_polygonal_ds_DA(this._size,this.maxSize);
		copy._size = this._size;
		if(assign) {
			var _g1 = 0;
			var _g = this._size;
			while(_g1 < _g) {
				var i = _g1++;
				copy._a[i] = this._a[i];
			}
		} else if(copier == null) {
			var c = null;
			var _g11 = 0;
			var _g2 = this._size;
			while(_g11 < _g2) {
				var i1 = _g11++;
				c = js_Boot.__cast(this._a[i1] , de_polygonal_ds_Cloneable);
				copy._a[i1] = c.clone();
			}
		} else {
			var _g12 = 0;
			var _g3 = this._size;
			while(_g12 < _g3) {
				var i2 = _g12++;
				copy._a[i2] = copier(this._a[i2]);
			}
		}
		return copy;
	}
	,shuffle: function(rval) {
		var s = this._size;
		if(rval == null) {
			var m = Math;
			while(--s > 1) {
				var i = m.random() * s | 0;
				var t = this._a[s];
				this._a[s] = this._a[i];
				this._a[i] = t;
			}
		} else {
			var j = 0;
			while(--s > 1) {
				var i1 = rval._a[j++] * s | 0;
				var t1 = this._a[s];
				this._a[s] = this._a[i1];
				this._a[i1] = t1;
			}
		}
	}
	,toString: function() {
		var s = "{ DA size: " + this._size + " }";
		if(this._size == 0) {
			return s;
		}
		s += "\n[\n";
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			var i = _g1++;
			s += de_polygonal_Printf.format("  %4d -> %s\n",[i,Std.string(this._a[i])]);
		}
		s += "]";
		return s;
	}
	,_quickSort: function(first,k,cmp) {
		var last = first + k - 1;
		var lo = first;
		var hi = last;
		if(k > 1) {
			var i1 = first + (k >> 1);
			var i2 = first + k - 1;
			var t0 = this._a[first];
			var t1 = this._a[i1];
			var t2 = this._a[i2];
			var mid;
			var t = cmp(t0,t2);
			if(t < 0 && cmp(t0,t1) < 0) {
				if(cmp(t1,t2) < 0) {
					mid = i1;
				} else {
					mid = i2;
				}
			} else if(cmp(t1,t0) < 0 && cmp(t1,t2) < 0) {
				if(t < 0) {
					mid = first;
				} else {
					mid = i2;
				}
			} else if(cmp(t2,t0) < 0) {
				mid = i1;
			} else {
				mid = first;
			}
			var pivot = this._a[mid];
			this._a[mid] = this._a[first];
			while(lo < hi) {
				while(cmp(pivot,this._a[hi]) < 0 && lo < hi) --hi;
				if(hi != lo) {
					this._a[lo] = this._a[hi];
					++lo;
				}
				while(cmp(pivot,this._a[lo]) > 0 && lo < hi) ++lo;
				if(hi != lo) {
					this._a[hi] = this._a[lo];
					--hi;
				}
			}
			this._a[lo] = pivot;
			this._quickSort(first,lo - first,cmp);
			this._quickSort(lo + 1,last - lo,cmp);
		}
	}
	,_quickSortComparable: function(first,k) {
		var last = first + k - 1;
		var lo = first;
		var hi = last;
		if(k > 1) {
			var i1 = first + (k >> 1);
			var i2 = first + k - 1;
			var t0 = js_Boot.__cast(this._a[first] , de_polygonal_ds_Comparable);
			var t1 = js_Boot.__cast(this._a[i1] , de_polygonal_ds_Comparable);
			var t2 = js_Boot.__cast(this._a[i2] , de_polygonal_ds_Comparable);
			var mid;
			var t = t0.compare(t2);
			if(t < 0 && t0.compare(t1) < 0) {
				if(t1.compare(t2) < 0) {
					mid = i1;
				} else {
					mid = i2;
				}
			} else if(t0.compare(t1) < 0 && t1.compare(t2) < 0) {
				if(t < 0) {
					mid = first;
				} else {
					mid = i2;
				}
			} else if(t2.compare(t0) < 0) {
				mid = i1;
			} else {
				mid = first;
			}
			var pivot = js_Boot.__cast(this._a[mid] , de_polygonal_ds_Comparable);
			this._a[mid] = this._a[first];
			while(lo < hi) {
				while(pivot.compare(js_Boot.__cast(this._a[hi] , de_polygonal_ds_Comparable)) < 0 && lo < hi) --hi;
				if(hi != lo) {
					this._a[lo] = this._a[hi];
					++lo;
				}
				while(pivot.compare(js_Boot.__cast(this._a[lo] , de_polygonal_ds_Comparable)) > 0 && lo < hi) ++lo;
				if(hi != lo) {
					this._a[hi] = this._a[lo];
					--hi;
				}
			}
			this._a[lo] = pivot;
			this._quickSortComparable(first,lo - first);
			this._quickSortComparable(lo + 1,last - lo);
		}
	}
	,_insertionSort: function(first,k,cmp) {
		var _g1 = first + 1;
		var _g = first + k;
		while(_g1 < _g) {
			var i = _g1++;
			var x = this._a[i];
			var j = i;
			while(j > first) {
				var y = this._a[j - 1];
				if(cmp(y,x) > 0) {
					this._a[j] = y;
					--j;
				} else {
					break;
				}
			}
			this._a[j] = x;
		}
	}
	,_insertionSortComparable: function(first,k) {
		var _g1 = first + 1;
		var _g = first + k;
		while(_g1 < _g) {
			var i = _g1++;
			var x = this._a[i];
			var j = i;
			while(j > first) {
				var y = this._a[j - 1];
				if((js_Boot.__cast(y , de_polygonal_ds_Comparable)).compare(x) > 0) {
					this._a[j] = y;
					--j;
				} else {
					break;
				}
			}
			this._a[j] = x;
		}
	}
	,__get: function(i) {
		return this._a[i];
	}
	,__set: function(i,x) {
		this._a[i] = x;
	}
	,__cpy: function(i,j) {
		this._a[i] = this._a[j];
	}
	,__class__: de_polygonal_ds_DA
};
var de_polygonal_ds_Itr = function() { };
de_polygonal_ds_Itr.__name__ = ["de","polygonal","ds","Itr"];
de_polygonal_ds_Itr.prototype = {
	__class__: de_polygonal_ds_Itr
};
var de_polygonal_ds_DAIterator = function(f) {
	this._f = f;
	this._a = this._f._a;
	this._s = this._f._size;
	this._i = 0;
};
de_polygonal_ds_DAIterator.__name__ = ["de","polygonal","ds","DAIterator"];
de_polygonal_ds_DAIterator.__interfaces__ = [de_polygonal_ds_Itr];
de_polygonal_ds_DAIterator.prototype = {
	reset: function() {
		this._a = this._f._a;
		this._s = this._f._size;
		this._i = 0;
		return this;
	}
	,hasNext: function() {
		return this._i < this._s;
	}
	,next: function() {
		return this._a[this._i++];
	}
	,remove: function() {
		var _this = this._f;
		var i = --this._i;
		var k = _this._size - 1;
		var p = i;
		while(p < k) _this._a[p++] = _this._a[p];
		_this._size--;
		this._s--;
	}
	,__a: function(f) {
		return f._a;
	}
	,__size: function(f) {
		return f._size;
	}
	,__class__: de_polygonal_ds_DAIterator
};
var de_polygonal_ds_DLL = function(reservedSize,maxSize) {
	if(maxSize == null) {
		maxSize = -1;
	}
	if(reservedSize == null) {
		reservedSize = 0;
	}
	this.maxSize = -1;
	this._reservedSize = reservedSize;
	this._size = 0;
	this._poolSize = 0;
	this._circular = false;
	this._iterator = null;
	if(reservedSize > 0) {
		this._headPool = this._tailPool = new de_polygonal_ds_DLLNode(null,this);
	}
	this.head = this.tail = null;
	this.key = de_polygonal_ds_HashKey._counter++;
	this.reuseIterator = false;
};
de_polygonal_ds_DLL.__name__ = ["de","polygonal","ds","DLL"];
de_polygonal_ds_DLL.__interfaces__ = [de_polygonal_ds_Collection];
de_polygonal_ds_DLL.prototype = {
	isCircular: function() {
		return this._circular;
	}
	,close: function() {
		if(this._circular) {
			return;
		}
		this._circular = true;
		if(this.head != null) {
			this.tail.next = this.head;
			this.head.prev = this.tail;
		}
	}
	,open: function() {
		if(!this._circular) {
			return;
		}
		this._circular = false;
		if(this.head != null) {
			this.tail.next = null;
			this.head.prev = null;
		}
	}
	,createNode: function(x) {
		return new de_polygonal_ds_DLLNode(x,this);
	}
	,append: function(x) {
		var node;
		if(this._reservedSize == 0 || this._poolSize == 0) {
			node = new de_polygonal_ds_DLLNode(x,this);
		} else {
			var n = this._headPool;
			this._headPool = this._headPool.next;
			this._poolSize--;
			n.next = null;
			n.val = x;
			node = n;
		}
		if(this.tail != null) {
			this.tail.next = node;
			node.prev = this.tail;
		} else {
			this.head = node;
		}
		this.tail = node;
		if(this._circular) {
			this.tail.next = this.head;
			this.head.prev = this.tail;
		}
		this._size++;
		return node;
	}
	,appendNode: function(x) {
		if(this.tail != null) {
			this.tail.next = x;
			x.prev = this.tail;
		} else {
			this.head = x;
		}
		this.tail = x;
		if(this._circular) {
			this.tail.next = this.head;
			this.head.prev = this.tail;
		}
		this._size++;
	}
	,prepend: function(x) {
		var node;
		if(this._reservedSize == 0 || this._poolSize == 0) {
			node = new de_polygonal_ds_DLLNode(x,this);
		} else {
			var n = this._headPool;
			this._headPool = this._headPool.next;
			this._poolSize--;
			n.next = null;
			n.val = x;
			node = n;
		}
		node.next = this.head;
		if(this.head != null) {
			this.head.prev = node;
		} else {
			this.tail = node;
		}
		this.head = node;
		if(this._circular) {
			this.tail.next = this.head;
			this.head.prev = this.tail;
		}
		this._size++;
		return node;
	}
	,prependNode: function(x) {
		x.next = this.head;
		if(this.head != null) {
			this.head.prev = x;
		} else {
			this.tail = x;
		}
		this.head = x;
		if(this._circular) {
			this.tail.next = this.head;
			this.head.prev = this.tail;
		}
		this._size++;
	}
	,insertAfter: function(node,x) {
		var t;
		if(this._reservedSize == 0 || this._poolSize == 0) {
			t = new de_polygonal_ds_DLLNode(x,this);
		} else {
			var n = this._headPool;
			this._headPool = this._headPool.next;
			this._poolSize--;
			n.next = null;
			n.val = x;
			t = n;
		}
		node._insertAfter(t);
		if(node == this.tail) {
			this.tail = t;
			if(this._circular) {
				this.tail.next = this.head;
			}
		}
		this._size++;
		return t;
	}
	,insertBefore: function(node,x) {
		var t;
		if(this._reservedSize == 0 || this._poolSize == 0) {
			t = new de_polygonal_ds_DLLNode(x,this);
		} else {
			var n = this._headPool;
			this._headPool = this._headPool.next;
			this._poolSize--;
			n.next = null;
			n.val = x;
			t = n;
		}
		node._insertBefore(t);
		if(node == this.head) {
			this.head = t;
			if(this._circular) {
				this.head.prev = this.tail;
			}
		}
		this._size++;
		return t;
	}
	,unlink: function(node) {
		var hook = node.next;
		if(node == this.head) {
			this.head = this.head.next;
			if(this._circular) {
				if(this.head == this.tail) {
					this.head = null;
				} else {
					this.tail.next = this.head;
				}
			}
			if(this.head == null) {
				this.tail = null;
			}
		} else if(node == this.tail) {
			this.tail = this.tail.prev;
			if(this._circular) {
				this.head.prev = this.tail;
			}
			if(this.tail == null) {
				this.head = null;
			}
		}
		node._unlink();
		if(this._reservedSize > 0 && this._poolSize < this._reservedSize) {
			this._tailPool = this._tailPool.next = node;
			node.val = null;
			this._poolSize++;
		} else {
			node._list = null;
		}
		this._size--;
		return hook;
	}
	,getNodeAt: function(i) {
		var node = this.head;
		var _g1 = 0;
		while(_g1 < i) {
			++_g1;
			node = node.next;
		}
		return node;
	}
	,removeHead: function() {
		var node = this.head;
		if(this.head == this.tail) {
			this.head = this.tail = null;
		} else {
			this.head = this.head.next;
			node.next = null;
			if(this._circular) {
				this.head.prev = this.tail;
				this.tail.next = this.head;
			} else {
				this.head.prev = null;
			}
		}
		this._size--;
		var val = node.val;
		if(this._reservedSize > 0 && this._poolSize < this._reservedSize) {
			this._tailPool = this._tailPool.next = node;
			node.val = null;
			this._poolSize++;
		} else {
			node._list = null;
		}
		return val;
	}
	,removeTail: function() {
		var node = this.tail;
		if(this.head == this.tail) {
			this.head = this.tail = null;
		} else {
			this.tail = this.tail.prev;
			node.prev = null;
			if(this._circular) {
				this.tail.next = this.head;
				this.head.prev = this.tail;
			} else {
				this.tail.next = null;
			}
		}
		this._size--;
		var val = node.val;
		if(this._reservedSize > 0 && this._poolSize < this._reservedSize) {
			this._tailPool = this._tailPool.next = node;
			node.val = null;
			this._poolSize++;
		} else {
			node._list = null;
		}
		return val;
	}
	,shiftUp: function() {
		if(this._size > 1) {
			var t = this.head;
			if(this.head.next == this.tail) {
				this.head = this.tail;
				this.head.prev = null;
				this.tail = t;
				this.tail.next = null;
				this.head.next = this.tail;
				this.tail.prev = this.head;
			} else {
				this.head = this.head.next;
				this.head.prev = null;
				this.tail.next = t;
				t.next = null;
				t.prev = this.tail;
				this.tail = t;
			}
			if(this._circular) {
				this.tail.next = this.head;
				this.head.prev = this.tail;
			}
		}
	}
	,popDown: function() {
		if(this._size > 1) {
			var t = this.tail;
			if(this.tail.prev == this.head) {
				this.tail = this.head;
				this.tail.next = null;
				this.head = t;
				this.head.prev = null;
				this.head.next = this.tail;
				this.tail.prev = this.head;
			} else {
				this.tail = this.tail.prev;
				this.tail.next = null;
				this.head.prev = t;
				t.prev = null;
				t.next = this.head;
				this.head = t;
			}
			if(this._circular) {
				this.tail.next = this.head;
				this.head.prev = this.tail;
			}
		}
	}
	,nodeOf: function(x,from) {
		var node = from == null?this.head:from;
		if(this._circular) {
			while(node != this.tail) {
				if(node.val == x) {
					return node;
				}
				node = node.next;
			}
			if(node.val == x) {
				return node;
			}
		} else {
			while(node != null) {
				if(node.val == x) {
					return node;
				}
				node = node.next;
			}
		}
		return null;
	}
	,lastNodeOf: function(x,from) {
		var node = from == null?this.tail:from;
		if(this._circular) {
			while(node != this.head) {
				if(node.val == x) {
					return node;
				}
				node = node.prev;
			}
			if(node.val == x) {
				return node;
			}
		} else {
			while(node != null) {
				if(node.val == x) {
					return node;
				}
				node = node.prev;
			}
		}
		return null;
	}
	,sort: function(compare,useInsertionSort) {
		if(useInsertionSort == null) {
			useInsertionSort = false;
		}
		if(this._size > 1) {
			if(this._circular) {
				this.tail.next = null;
				this.head.prev = null;
			}
			if(compare == null) {
				this.head = useInsertionSort?this._insertionSortComparable(this.head):this._mergeSortComparable(this.head);
			} else {
				this.head = useInsertionSort?this._insertionSort(this.head,compare):this._mergeSort(this.head,compare);
			}
			if(this._circular) {
				this.tail.next = this.head;
				this.head.prev = this.tail;
			}
		}
	}
	,merge: function(x) {
		if(x.head != null) {
			var node = x.head;
			var _g1 = 0;
			var _g = x._size;
			while(_g1 < _g) {
				++_g1;
				node._list = this;
				node = node.next;
			}
			if(this.head != null) {
				this.tail.next = x.head;
				x.head.prev = this.tail;
				this.tail = x.tail;
			} else {
				this.head = x.head;
				this.tail = x.tail;
			}
			this._size += x._size;
			if(this._circular) {
				this.tail.next = this.head;
				this.head.prev = this.tail;
			}
		}
	}
	,concat: function(x) {
		var c = new de_polygonal_ds_DLL();
		var k = x._size;
		if(k > 0) {
			var node = x.tail;
			var t = c.tail = new de_polygonal_ds_DLLNode(node.val,c);
			node = node.prev;
			var i = k - 1;
			while(i-- > 0) {
				var copy = new de_polygonal_ds_DLLNode(node.val,c);
				copy.next = t;
				t.prev = copy;
				t = copy;
				node = node.prev;
			}
			c.head = t;
			c._size = k;
			if(this._size > 0) {
				var node1 = this.tail;
				var i1 = this._size;
				while(i1-- > 0) {
					var copy1 = new de_polygonal_ds_DLLNode(node1.val,c);
					copy1.next = t;
					t.prev = copy1;
					t = copy1;
					node1 = node1.prev;
				}
				c.head = t;
				c._size += this._size;
			}
		} else if(this._size > 0) {
			var node2 = this.tail;
			var t1 = c.tail = new de_polygonal_ds_DLLNode(node2.val,this);
			node2 = node2.prev;
			var i2 = this._size - 1;
			while(i2-- > 0) {
				var copy2 = new de_polygonal_ds_DLLNode(node2.val,this);
				copy2.next = t1;
				t1.prev = copy2;
				t1 = copy2;
				node2 = node2.prev;
			}
			c.head = t1;
			c._size = this._size;
		}
		return c;
	}
	,reverse: function() {
		if(this._size <= 1) {
			return;
		} else if(this._size <= 3) {
			var t = this.head.val;
			this.head.val = this.tail.val;
			this.tail.val = t;
		} else {
			var head = this.head;
			var tail = this.tail;
			var _g1 = 0;
			var _g = this._size >> 1;
			while(_g1 < _g) {
				++_g1;
				var t1 = head.val;
				head.val = tail.val;
				tail.val = t1;
				head = head.next;
				tail = tail.prev;
			}
		}
	}
	,join: function(x) {
		var s = "";
		if(this._size > 0) {
			var node = this.head;
			var _g1 = 0;
			var _g = this._size - 1;
			while(_g1 < _g) {
				++_g1;
				s += Std.string(node.val) + x;
				node = node.next;
			}
			s += Std.string(node.val);
		}
		return s;
	}
	,assign: function(C,args,n) {
		if(n == null) {
			n = 0;
		}
		if(n <= 0) {
			n = this._size;
		}
		if(args == null) {
			args = [];
		}
		var node = this.head;
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			++_g1;
			node.val = Type.createInstance(C,args);
			node = node.next;
		}
	}
	,fill: function(x,args,n) {
		if(n == null) {
			n = 0;
		}
		if(n <= 0) {
			n = this._size;
		}
		var node = this.head;
		var _g1 = 0;
		var _g = n;
		while(_g1 < _g) {
			++_g1;
			node.val = x;
			node = node.next;
		}
		return this;
	}
	,shuffle: function(rval) {
		var s = this._size;
		if(rval == null) {
			var m = Math;
			while(s > 1) {
				--s;
				var i = m.random() * s | 0;
				var node1 = this.head;
				var _g1 = 0;
				var _g = s;
				while(_g1 < _g) {
					++_g1;
					node1 = node1.next;
				}
				var t = node1.val;
				var node2 = this.head;
				var _g11 = 0;
				while(_g11 < i) {
					++_g11;
					node2 = node2.next;
				}
				node1.val = node2.val;
				node2.val = t;
			}
		} else {
			var j = 0;
			while(s > 1) {
				--s;
				var i1 = rval._a[j++] * s | 0;
				var node11 = this.head;
				var _g12 = 0;
				var _g2 = s;
				while(_g12 < _g2) {
					++_g12;
					node11 = node11.next;
				}
				var t1 = node11.val;
				var node21 = this.head;
				var _g13 = 0;
				while(_g13 < i1) {
					++_g13;
					node21 = node21.next;
				}
				node11.val = node21.val;
				node21.val = t1;
			}
		}
		if(this._circular) {
			this.tail.next = this.head;
			this.head.prev = this.tail;
		}
	}
	,toString: function() {
		var s = "{ DLL size: " + this._size + ", circular: " + Std.string(this.isCircular()) + " }";
		if(this._size == 0) {
			return s;
		}
		s += "\n[ head \n";
		var node = this.head;
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			++_g1;
			s += "  " + Std.string(node.val) + "\n";
			node = node.next;
		}
		s += "] tail";
		return s;
	}
	,free: function() {
		var node = this.head;
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			++_g1;
			var next = node.next;
			node.free();
			node = next;
		}
		this.head = this.tail = null;
		var node1 = this._headPool;
		while(node1 != null) {
			var next1 = node1.next;
			node1.free();
			node1 = next1;
		}
		this._headPool = this._tailPool = null;
		this._iterator = null;
	}
	,contains: function(x) {
		var node = this.head;
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			++_g1;
			if(node.val == x) {
				return true;
			}
			node = node.next;
		}
		return false;
	}
	,remove: function(x) {
		var s = this._size;
		if(s == 0) {
			return false;
		}
		var node = this.head;
		while(node != null) if(node.val == x) {
			node = this.unlink(node);
		} else {
			node = node.next;
		}
		return this._size < s;
	}
	,clear: function(purge) {
		if(purge == null) {
			purge = false;
		}
		if(purge || this._reservedSize > 0) {
			var node = this.head;
			var _g1 = 0;
			var _g = this._size;
			while(_g1 < _g) {
				++_g1;
				var next = node.next;
				node.prev = null;
				node.next = null;
				if(this._reservedSize > 0 && this._poolSize < this._reservedSize) {
					this._tailPool = this._tailPool.next = node;
					node.val = null;
					this._poolSize++;
				} else {
					node._list = null;
				}
				node = next;
			}
		}
		this.head = this.tail = null;
		this._size = 0;
	}
	,iterator: function() {
		if(this.reuseIterator) {
			if(this._iterator == null) {
				if(this._circular) {
					return new de_polygonal_ds_CircularDLLIterator(this);
				} else {
					return new de_polygonal_ds_DLLIterator(this);
				}
			} else {
				this._iterator.reset();
			}
			return this._iterator;
		} else if(this._circular) {
			return new de_polygonal_ds_CircularDLLIterator(this);
		} else {
			return new de_polygonal_ds_DLLIterator(this);
		}
	}
	,size: function() {
		return this._size;
	}
	,isEmpty: function() {
		return this._size == 0;
	}
	,toArray: function() {
		var x = this._size;
		var a = new Array(x);
		var node = this.head;
		var _g1 = 0;
		var _g = this._size;
		while(_g1 < _g) {
			a[_g1++] = node.val;
			node = node.next;
		}
		return a;
	}
	,clone: function(assign,copier) {
		if(assign == null) {
			assign = true;
		}
		if(this._size == 0) {
			var copy = new de_polygonal_ds_DLL(this._reservedSize,this.maxSize);
			if(this._circular) {
				copy._circular = true;
			}
			return copy;
		}
		var copy1 = new de_polygonal_ds_DLL();
		copy1._size = this._size;
		if(assign) {
			var srcNode = this.head;
			var dstNode = copy1.head = new de_polygonal_ds_DLLNode(this.head.val,copy1);
			if(this._size == 1) {
				copy1.tail = copy1.head;
				if(this._circular) {
					copy1.tail.next = copy1.head;
				}
				return copy1;
			}
			var dstNode0;
			srcNode = srcNode.next;
			var _g1 = 1;
			var _g = this._size - 1;
			while(_g1 < _g) {
				++_g1;
				dstNode0 = dstNode;
				var srcNode0 = srcNode;
				dstNode = dstNode.next = new de_polygonal_ds_DLLNode(srcNode.val,copy1);
				dstNode.prev = dstNode0;
				srcNode0 = srcNode;
				srcNode = srcNode0.next;
			}
			dstNode0 = dstNode;
			copy1.tail = dstNode.next = new de_polygonal_ds_DLLNode(srcNode.val,copy1);
			copy1.tail.prev = dstNode0;
		} else if(copier == null) {
			var srcNode1 = this.head;
			var c = js_Boot.__cast(this.head.val , de_polygonal_ds_Cloneable);
			var dstNode1 = copy1.head = new de_polygonal_ds_DLLNode(c.clone(),copy1);
			if(this._size == 1) {
				copy1.tail = copy1.head;
				if(this._circular) {
					copy1.tail.next = copy1.head;
				}
				return copy1;
			}
			var dstNode01;
			srcNode1 = srcNode1.next;
			var _g11 = 1;
			var _g2 = this._size - 1;
			while(_g11 < _g2) {
				++_g11;
				dstNode01 = dstNode1;
				var srcNode01 = srcNode1;
				c = js_Boot.__cast(srcNode1.val , de_polygonal_ds_Cloneable);
				dstNode1 = dstNode1.next = new de_polygonal_ds_DLLNode(c.clone(),copy1);
				dstNode1.prev = dstNode01;
				srcNode01 = srcNode1;
				srcNode1 = srcNode01.next;
			}
			c = js_Boot.__cast(srcNode1.val , de_polygonal_ds_Cloneable);
			dstNode01 = dstNode1;
			copy1.tail = dstNode1.next = new de_polygonal_ds_DLLNode(c.clone(),copy1);
			copy1.tail.prev = dstNode01;
		} else {
			var srcNode2 = this.head;
			var dstNode2 = copy1.head = new de_polygonal_ds_DLLNode(copier(this.head.val),copy1);
			if(this._size == 1) {
				copy1.tail = copy1.head;
				if(this._circular) {
					copy1.tail.next = copy1.head;
				}
				return copy1;
			}
			var dstNode02;
			srcNode2 = srcNode2.next;
			var _g12 = 1;
			var _g3 = this._size - 1;
			while(_g12 < _g3) {
				++_g12;
				dstNode02 = dstNode2;
				var srcNode02 = srcNode2;
				dstNode2 = dstNode2.next = new de_polygonal_ds_DLLNode(copier(srcNode2.val),copy1);
				dstNode2.prev = dstNode02;
				srcNode02 = srcNode2;
				srcNode2 = srcNode02.next;
			}
			dstNode02 = dstNode2;
			copy1.tail = dstNode2.next = new de_polygonal_ds_DLLNode(copier(srcNode2.val),copy1);
			copy1.tail.prev = dstNode02;
		}
		if(this._circular) {
			copy1.tail.next = copy1.head;
		}
		return copy1;
	}
	,_mergeSortComparable: function(node) {
		var h = node;
		var p;
		var q;
		var e;
		var tail = null;
		var insize = 1;
		var nmerges;
		var psize;
		var qsize;
		while(true) {
			p = h;
			tail = null;
			h = tail;
			nmerges = 0;
			while(p != null) {
				++nmerges;
				psize = 0;
				q = p;
				var _g1 = 0;
				var _g = insize;
				while(_g1 < _g) {
					++_g1;
					++psize;
					q = q.next;
					if(q == null) {
						break;
					}
				}
				qsize = insize;
				while(psize > 0 || qsize > 0 && q != null) {
					if(psize == 0) {
						e = q;
						q = q.next;
						--qsize;
					} else if(qsize == 0 || q == null) {
						e = p;
						p = p.next;
						--psize;
					} else if((js_Boot.__cast(p.val , de_polygonal_ds_Comparable)).compare(q.val) >= 0) {
						e = p;
						p = p.next;
						--psize;
					} else {
						e = q;
						q = q.next;
						--qsize;
					}
					if(tail != null) {
						tail.next = e;
					} else {
						h = e;
					}
					e.prev = tail;
					tail = e;
				}
				p = q;
			}
			tail.next = null;
			if(nmerges <= 1) {
				break;
			}
			insize <<= 1;
		}
		h.prev = null;
		this.tail = tail;
		return h;
	}
	,_mergeSort: function(node,cmp) {
		var h = node;
		var p;
		var q;
		var e;
		var tail = null;
		var insize = 1;
		var nmerges;
		var psize;
		var qsize;
		while(true) {
			p = h;
			tail = null;
			h = tail;
			nmerges = 0;
			while(p != null) {
				++nmerges;
				psize = 0;
				q = p;
				var _g1 = 0;
				var _g = insize;
				while(_g1 < _g) {
					++_g1;
					++psize;
					q = q.next;
					if(q == null) {
						break;
					}
				}
				qsize = insize;
				while(psize > 0 || qsize > 0 && q != null) {
					if(psize == 0) {
						e = q;
						q = q.next;
						--qsize;
					} else if(qsize == 0 || q == null) {
						e = p;
						p = p.next;
						--psize;
					} else if(cmp(q.val,p.val) >= 0) {
						e = p;
						p = p.next;
						--psize;
					} else {
						e = q;
						q = q.next;
						--qsize;
					}
					if(tail != null) {
						tail.next = e;
					} else {
						h = e;
					}
					e.prev = tail;
					tail = e;
				}
				p = q;
			}
			tail.next = null;
			if(nmerges <= 1) {
				break;
			}
			insize <<= 1;
		}
		h.prev = null;
		this.tail = tail;
		return h;
	}
	,_insertionSortComparable: function(node) {
		var h = node;
		var n = node.next;
		while(n != null) {
			var m = n.next;
			var p = n.prev;
			var v = n.val;
			if((js_Boot.__cast(p.val , de_polygonal_ds_Comparable)).compare(v) < 0) {
				var i = p;
				while(i.prev != null) if((js_Boot.__cast(i.prev.val , de_polygonal_ds_Comparable)).compare(v) < 0) {
					i = i.prev;
				} else {
					break;
				}
				if(m != null) {
					p.next = m;
					m.prev = p;
				} else {
					p.next = null;
					this.tail = p;
				}
				if(i == h) {
					n.prev = null;
					n.next = i;
					i.prev = n;
					h = n;
				} else {
					n.prev = i.prev;
					i.prev.next = n;
					n.next = i;
					i.prev = n;
				}
			}
			n = m;
		}
		return h;
	}
	,_insertionSort: function(node,cmp) {
		var h = node;
		var n = node.next;
		while(n != null) {
			var m = n.next;
			var p = n.prev;
			var v = n.val;
			if(cmp(v,p.val) < 0) {
				var i = p;
				while(i.prev != null) if(cmp(v,i.prev.val) < 0) {
					i = i.prev;
				} else {
					break;
				}
				if(m != null) {
					p.next = m;
					m.prev = p;
				} else {
					p.next = null;
					this.tail = p;
				}
				if(i == h) {
					n.prev = null;
					n.next = i;
					i.prev = n;
					h = n;
				} else {
					n.prev = i.prev;
					i.prev.next = n;
					n.next = i;
					i.prev = n;
				}
			}
			n = m;
		}
		return h;
	}
	,_valid: function(node) {
		return node != null;
	}
	,_getNode: function(x) {
		if(this._reservedSize == 0 || this._poolSize == 0) {
			return new de_polygonal_ds_DLLNode(x,this);
		} else {
			var n = this._headPool;
			this._headPool = this._headPool.next;
			this._poolSize--;
			n.next = null;
			n.val = x;
			return n;
		}
	}
	,_putNode: function(x) {
		var val = x.val;
		if(this._reservedSize > 0 && this._poolSize < this._reservedSize) {
			this._tailPool = this._tailPool.next = x;
			x.val = null;
			this._poolSize++;
		} else {
			x._list = null;
		}
		return val;
	}
	,__insertAfter: function(f,x) {
		f._insertAfter(x);
	}
	,__insertBefore: function(f,x) {
		f._insertBefore(x);
	}
	,__unlink: function(f) {
		f._unlink();
	}
	,__list: function(f,x) {
		f._list = x;
	}
	,__class__: de_polygonal_ds_DLL
};
var de_polygonal_ds_DLLIterator = function(f) {
	this._f = f;
	this._walker = this._f.head;
	this._hook = null;
};
de_polygonal_ds_DLLIterator.__name__ = ["de","polygonal","ds","DLLIterator"];
de_polygonal_ds_DLLIterator.__interfaces__ = [de_polygonal_ds_Itr];
de_polygonal_ds_DLLIterator.prototype = {
	reset: function() {
		this._walker = this._f.head;
		this._hook = null;
		return this;
	}
	,hasNext: function() {
		return this._walker != null;
	}
	,next: function() {
		var x = this._walker.val;
		this._hook = this._walker;
		this._walker = this._walker.next;
		return x;
	}
	,remove: function() {
		this._f.unlink(this._hook);
	}
	,__class__: de_polygonal_ds_DLLIterator
};
var de_polygonal_ds_CircularDLLIterator = function(f) {
	this._f = f;
	this._walker = this._f.head;
	this._s = this._f._size;
	this._i = 0;
	this._hook = null;
};
de_polygonal_ds_CircularDLLIterator.__name__ = ["de","polygonal","ds","CircularDLLIterator"];
de_polygonal_ds_CircularDLLIterator.__interfaces__ = [de_polygonal_ds_Itr];
de_polygonal_ds_CircularDLLIterator.prototype = {
	reset: function() {
		this._walker = this._f.head;
		this._s = this._f._size;
		this._i = 0;
		this._hook = null;
		return this;
	}
	,hasNext: function() {
		return this._i < this._s;
	}
	,next: function() {
		var x = this._walker.val;
		this._hook = this._walker;
		this._walker = this._walker.next;
		this._i++;
		return x;
	}
	,remove: function() {
		this._f.unlink(this._hook);
		this._i--;
		this._s--;
	}
	,__class__: de_polygonal_ds_CircularDLLIterator
};
var de_polygonal_ds_DLLNode = function(x,list) {
	this.val = x;
	this._list = list;
};
de_polygonal_ds_DLLNode.__name__ = ["de","polygonal","ds","DLLNode"];
de_polygonal_ds_DLLNode.prototype = {
	free: function() {
		this.val = null;
		this.next = this.prev = null;
		this._list = null;
	}
	,isHead: function() {
		return this == this._list.head;
	}
	,isTail: function() {
		return this == this._list.tail;
	}
	,hasNext: function() {
		return this.next != null;
	}
	,hasPrev: function() {
		return this.prev != null;
	}
	,nextVal: function() {
		return this.next.val;
	}
	,prevVal: function() {
		return this.prev.val;
	}
	,getList: function() {
		return this._list;
	}
	,unlink: function() {
		return this._list.unlink(this);
	}
	,prepend: function(node) {
		node.next = this;
		this.prev = node;
		return node;
	}
	,append: function(node) {
		this.next = node;
		node.prev = this;
		return node;
	}
	,prependTo: function(node) {
		this.next = node;
		if(node != null) {
			node.prev = this;
		}
		return this;
	}
	,appendTo: function(node) {
		this.prev = node;
		if(node != null) {
			node.next = this;
		}
		return this;
	}
	,toString: function() {
		return "{ DLLNode " + Std.string(this.val) + " }";
	}
	,_unlink: function() {
		var t = this.next;
		if(this.prev != null) {
			this.prev.next = this.next;
		}
		if(this.next != null) {
			this.next.prev = this.prev;
		}
		this.next = this.prev = null;
		return t;
	}
	,_insertAfter: function(node) {
		node.next = this.next;
		node.prev = this;
		if(this.next != null) {
			this.next.prev = node;
		}
		this.next = node;
	}
	,_insertBefore: function(node) {
		node.next = this;
		node.prev = this.prev;
		if(this.prev != null) {
			this.prev.next = node;
		}
		this.prev = node;
	}
	,__class__: de_polygonal_ds_DLLNode
};
var de_polygonal_ds_HashKey = function() { };
de_polygonal_ds_HashKey.__name__ = ["de","polygonal","ds","HashKey"];
de_polygonal_ds_HashKey.next = function() {
	return de_polygonal_ds_HashKey._counter++;
};
var de_polygonal_ds_error_Assert = function() { };
de_polygonal_ds_error_Assert.__name__ = ["de","polygonal","ds","error","Assert"];
var haxe_IMap = function() { };
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe__$Int32_Int32_$Impl_$ = {};
haxe__$Int32_Int32_$Impl_$.__name__ = ["haxe","_Int32","Int32_Impl_"];
haxe__$Int32_Int32_$Impl_$.mul = function(a,b) {
	return a * (b & 65535) + (a * (b >>> 16) << 16 | 0) | 0;
};
haxe__$Int32_Int32_$Impl_$.ucompare = function(a,b) {
	if(a < 0) {
		if(b < 0) {
			return ~b - ~a | 0;
		} else {
			return 1;
		}
	}
	if(b < 0) {
		return -1;
	} else {
		return a - b | 0;
	}
};
var haxe__$Int64_Int64_$Impl_$ = {};
haxe__$Int64_Int64_$Impl_$.__name__ = ["haxe","_Int64","Int64_Impl_"];
haxe__$Int64_Int64_$Impl_$.toString = function(this1) {
	var i = this1;
	var b = new haxe__$Int64__$_$_$Int64(0,0);
	if(i.high == b.high && i.low == b.low) {
		return "0";
	}
	var str = "";
	var neg = false;
	if(i.high < 0) {
		neg = true;
	}
	var ten = new haxe__$Int64__$_$_$Int64(0,10);
	while(true) {
		var b1 = new haxe__$Int64__$_$_$Int64(0,0);
		if(!(i.high != b1.high || i.low != b1.low)) {
			break;
		}
		var r = haxe__$Int64_Int64_$Impl_$.divMod(i,ten);
		if(r.modulus.high < 0) {
			var x = r.modulus;
			var high = ~x.high;
			var low = -x.low;
			if(low == 0) {
				++high;
				high = high | 0;
			}
			str = new haxe__$Int64__$_$_$Int64(high,low).low + str;
			var x1 = r.quotient;
			var high1 = ~x1.high;
			var low1 = -x1.low;
			if(low1 == 0) {
				++high1;
				high1 = high1 | 0;
			}
			i = new haxe__$Int64__$_$_$Int64(high1,low1);
		} else {
			str = r.modulus.low + str;
			i = r.quotient;
		}
	}
	if(neg) {
		str = "-" + str;
	}
	return str;
};
haxe__$Int64_Int64_$Impl_$.divMod = function(dividend,divisor) {
	if(divisor.high == 0) {
		switch(divisor.low) {
		case 0:
			throw new js__$Boot_HaxeError("divide by zero");
			break;
		case 1:
			return { quotient : new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low), modulus : new haxe__$Int64__$_$_$Int64(0,0)};
		}
	}
	var divSign = dividend.high < 0 != divisor.high < 0;
	var modulus;
	if(dividend.high < 0) {
		var high = ~dividend.high;
		var low = -dividend.low;
		if(low == 0) {
			++high;
			high = high | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high,low);
	} else {
		modulus = new haxe__$Int64__$_$_$Int64(dividend.high,dividend.low);
	}
	if(divisor.high < 0) {
		var high1 = ~divisor.high;
		var low1 = -divisor.low;
		if(low1 == 0) {
			++high1;
			high1 = high1 | 0;
		}
		divisor = new haxe__$Int64__$_$_$Int64(high1,low1);
	} else {
		divisor = divisor;
	}
	var quotient = new haxe__$Int64__$_$_$Int64(0,0);
	var mask = new haxe__$Int64__$_$_$Int64(0,1);
	while(!(divisor.high < 0)) {
		var v = haxe__$Int32_Int32_$Impl_$.ucompare(divisor.high,modulus.high);
		var cmp = v != 0?v:haxe__$Int32_Int32_$Impl_$.ucompare(divisor.low,modulus.low);
		divisor = new haxe__$Int64__$_$_$Int64(divisor.high << 1 | divisor.low >>> 31,divisor.low << 1);
		mask = new haxe__$Int64__$_$_$Int64(mask.high << 1 | mask.low >>> 31,mask.low << 1);
		if(cmp >= 0) {
			break;
		}
	}
	while(true) {
		var b = new haxe__$Int64__$_$_$Int64(0,0);
		if(!(mask.high != b.high || mask.low != b.low)) {
			break;
		}
		var v1 = haxe__$Int32_Int32_$Impl_$.ucompare(modulus.high,divisor.high);
		if((v1 != 0?v1:haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low)) >= 0) {
			quotient = new haxe__$Int64__$_$_$Int64(quotient.high | mask.high,quotient.low | mask.low);
			var high2 = modulus.high - divisor.high | 0;
			var low2 = modulus.low - divisor.low | 0;
			if(haxe__$Int32_Int32_$Impl_$.ucompare(modulus.low,divisor.low) < 0) {
				--high2;
				high2 = high2 | 0;
			}
			modulus = new haxe__$Int64__$_$_$Int64(high2,low2);
		}
		mask = new haxe__$Int64__$_$_$Int64(mask.high >>> 1,mask.high << 31 | mask.low >>> 1);
		divisor = new haxe__$Int64__$_$_$Int64(divisor.high >>> 1,divisor.high << 31 | divisor.low >>> 1);
	}
	if(divSign) {
		var high3 = ~quotient.high;
		var low3 = -quotient.low;
		if(low3 == 0) {
			++high3;
			high3 = high3 | 0;
		}
		quotient = new haxe__$Int64__$_$_$Int64(high3,low3);
	}
	if(dividend.high < 0) {
		var high4 = ~modulus.high;
		var low4 = -modulus.low;
		if(low4 == 0) {
			++high4;
			high4 = high4 | 0;
		}
		modulus = new haxe__$Int64__$_$_$Int64(high4,low4);
	}
	return { quotient : quotient, modulus : modulus};
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.prototype = {
	stop: function() {
		if(this.id == null) {
			return;
		}
		clearInterval(this.id);
		this.id = null;
	}
	,run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_ds_IntMap = function() {
	this.h = { };
};
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	__class__: haxe_ds_IntMap
};
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,__class__: haxe_ds_ObjectMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = ["js","Boot"];
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = intf[_g1++];
			if(i == cl || js_Boot.__interfLoop(i,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class && o.__name__ != null) {
			return true;
		}
		if(cl == Enum && o.__ename__ != null) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var murmur_Medaille = function() {
	var images = this.populateTab();
	this.container = window.document.createElement("div");
	window.document.body.appendChild(this.container);
	this.container.style.position = "relative";
	this.container.style.margin = "0 auto";
	this.container.style.marginTop = "200px";
	this.container.style.width = "600px";
	this.current = images.head;
	this.masque();
	console.log(this.current.toString());
	this.affiche(this.current);
	this.timer = new haxe_Timer(10000);
	this.timer.run = $bind(this,this.next);
};
murmur_Medaille.__name__ = ["murmur","Medaille"];
murmur_Medaille.main = function() {
	new murmur_Medaille();
};
murmur_Medaille.prototype = {
	masque: function() {
		window.document.body.style.backgroundColor = "black";
		var canvas = window.document.createElement("canvas");
		canvas.width = 600;
		canvas.height = 600;
		canvas.style.position = "absolute";
		this.container.appendChild(canvas);
		var ctx = canvas.getContext("2d",null);
		ctx.beginPath();
		ctx.fillStyle = "#FFFFFF";
		ctx.arc(300,300,300,0,2 * Math.PI,false);
		ctx.fill();
		ctx.save();
	}
	,next: function() {
		var f = $bind(this,this.diminue);
		var it = this.current.val;
		tweenx909_TweenX.tweenFunc1(function(a1) {
			f(it,a1);
		},1,0,null,null,null,null,null,null,null,null,{ fileName : "Medaille.hx", lineNumber : 57, className : "murmur.Medaille", methodName : "next"}).time(30);
		this.current = this.current.next;
		this.affiche(this.current);
		var f1 = $bind(this,this.augmente);
		var it1 = this.current.val;
		tweenx909_TweenX.tweenFunc1(function(a11) {
			f1(it1,a11);
		},0,1,null,null,null,null,null,null,null,null,{ fileName : "Medaille.hx", lineNumber : 60, className : "murmur.Medaille", methodName : "next"}).time(3);
	}
	,populateTab: function() {
		this.images = new de_polygonal_ds_DLL();
		var _g = 1;
		while(_g < 6) {
			var a = _g++;
			var img = new Image();
			img.style.position = "absolute";
			img.src = "./medaille/Calque_" + a + ".png";
			this.images.append(img);
		}
		this.images.close();
		console.log(this.images.toString());
		console.log(this.images.isCircular());
		return this.images;
	}
	,affiche: function(c) {
		this.container.appendChild(c.val);
	}
	,diminue: function(it,val) {
		it.style.opacity = "" + val;
	}
	,augmente: function(it,val) {
		it.style.opacity = "" + val;
	}
	,__class__: murmur_Medaille
};
var tweenx909_ChainX = function() { };
tweenx909_ChainX.__name__ = ["tweenx909","ChainX"];
tweenx909_ChainX.alpha = function(tween,alpha) {
	var t = tween;
	t._setTo("alpha",alpha);
	return tween;
};
tweenx909_ChainX._alpha = function(tween,alpha) {
	var t = tween;
	t._setRelativeTo("alpha",alpha);
	return tween;
};
tweenx909_ChainX.__alpha = function(tween,alpha) {
	var t = tween;
	t._setRelativeTo2("alpha",alpha);
	return tween;
};
tweenx909_ChainX.x = function(tween,x) {
	var t = tween;
	t._setTo("x",x);
	return tween;
};
tweenx909_ChainX._x = function(tween,x) {
	var t = tween;
	t._setRelativeTo("x",x);
	return tween;
};
tweenx909_ChainX.__x = function(tween,x) {
	var t = tween;
	t._setRelativeTo2("x",x);
	return tween;
};
tweenx909_ChainX.y = function(tween,y) {
	var t = tween;
	t._setTo("y",y);
	return tween;
};
tweenx909_ChainX._y = function(tween,y) {
	var t = tween;
	t._setRelativeTo("y",y);
	return tween;
};
tweenx909_ChainX.__y = function(tween,y) {
	var t = tween;
	t._setRelativeTo2("y",y);
	return tween;
};
tweenx909_ChainX.z = function(tween,z) {
	var t = tween;
	t._setTo("z",z);
	return tween;
};
tweenx909_ChainX._z = function(tween,z) {
	var t = tween;
	t._setRelativeTo("z",z);
	return tween;
};
tweenx909_ChainX.__z = function(tween,z) {
	var t = tween;
	t._setRelativeTo2("z",z);
	return tween;
};
tweenx909_ChainX.scaleX = function(tween,scaleX) {
	var t = tween;
	t._setTo("scaleX",scaleX);
	return tween;
};
tweenx909_ChainX._scaleX = function(tween,scaleX) {
	var t = tween;
	t._setRelativeTo("scaleX",scaleX);
	return tween;
};
tweenx909_ChainX.__scaleX = function(tween,scaleX) {
	var t = tween;
	t._setRelativeTo2("scaleX",scaleX);
	return tween;
};
tweenx909_ChainX.scaleY = function(tween,scaleY) {
	var t = tween;
	t._setTo("scaleY",scaleY);
	return tween;
};
tweenx909_ChainX._scaleY = function(tween,scaleY) {
	var t = tween;
	t._setRelativeTo("scaleY",scaleY);
	return tween;
};
tweenx909_ChainX.__scaleY = function(tween,scaleY) {
	var t = tween;
	t._setRelativeTo2("scaleY",scaleY);
	return tween;
};
tweenx909_ChainX.scaleZ = function(tween,scaleZ) {
	var t = tween;
	t._setTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ChainX._scaleZ = function(tween,scaleZ) {
	var t = tween;
	t._setRelativeTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ChainX.__scaleZ = function(tween,scaleZ) {
	var t = tween;
	t._setRelativeTo2("scaleZ",scaleZ);
	return tween;
};
tweenx909_ChainX.rotation = function(tween,rotation) {
	var t = tween;
	t._setTo("rotation",rotation);
	return tween;
};
tweenx909_ChainX._rotation = function(tween,rotation) {
	var t = tween;
	t._setRelativeTo("rotation",rotation);
	return tween;
};
tweenx909_ChainX.__rotation = function(tween,rotation) {
	var t = tween;
	t._setRelativeTo2("rotation",rotation);
	return tween;
};
tweenx909_ChainX.rotationX = function(tween,rotationX) {
	var t = tween;
	t._setTo("rotationX",rotationX);
	return tween;
};
tweenx909_ChainX._rotationX = function(tween,rotationX) {
	var t = tween;
	t._setRelativeTo("rotationX",rotationX);
	return tween;
};
tweenx909_ChainX.__rotationX = function(tween,rotationX) {
	var t = tween;
	t._setRelativeTo2("rotationX",rotationX);
	return tween;
};
tweenx909_ChainX.rotationY = function(tween,rotationY) {
	var t = tween;
	t._setTo("rotationY",rotationY);
	return tween;
};
tweenx909_ChainX._rotationY = function(tween,rotationY) {
	var t = tween;
	t._setRelativeTo("rotationY",rotationY);
	return tween;
};
tweenx909_ChainX.__rotationY = function(tween,rotationY) {
	var t = tween;
	t._setRelativeTo2("rotationY",rotationY);
	return tween;
};
tweenx909_ChainX.rotationZ = function(tween,rotationZ) {
	var t = tween;
	t._setTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ChainX._rotationZ = function(tween,rotationZ) {
	var t = tween;
	t._setRelativeTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ChainX.__rotationZ = function(tween,rotationZ) {
	var t = tween;
	t._setRelativeTo2("rotationZ",rotationZ);
	return tween;
};
tweenx909_ChainX.a = function(tween,a) {
	var t = tween;
	t._setTo("a",a);
	return tween;
};
tweenx909_ChainX._a = function(tween,a) {
	var t = tween;
	t._setRelativeTo("a",a);
	return tween;
};
tweenx909_ChainX.__a = function(tween,a) {
	var t = tween;
	t._setRelativeTo2("a",a);
	return tween;
};
tweenx909_ChainX.b = function(tween,b) {
	var t = tween;
	t._setTo("b",b);
	return tween;
};
tweenx909_ChainX._b = function(tween,b) {
	var t = tween;
	t._setRelativeTo("b",b);
	return tween;
};
tweenx909_ChainX.__b = function(tween,b) {
	var t = tween;
	t._setRelativeTo2("b",b);
	return tween;
};
tweenx909_ChainX.c = function(tween,c) {
	var t = tween;
	t._setTo("c",c);
	return tween;
};
tweenx909_ChainX._c = function(tween,c) {
	var t = tween;
	t._setRelativeTo("c",c);
	return tween;
};
tweenx909_ChainX.__c = function(tween,c) {
	var t = tween;
	t._setRelativeTo2("c",c);
	return tween;
};
tweenx909_ChainX.d = function(tween,d) {
	var t = tween;
	t._setTo("d",d);
	return tween;
};
tweenx909_ChainX._d = function(tween,d) {
	var t = tween;
	t._setRelativeTo("d",d);
	return tween;
};
tweenx909_ChainX.__d = function(tween,d) {
	var t = tween;
	t._setRelativeTo2("d",d);
	return tween;
};
tweenx909_ChainX.tx = function(tween,tx) {
	var t = tween;
	t._setTo("tx",tx);
	return tween;
};
tweenx909_ChainX._tx = function(tween,tx) {
	var t = tween;
	t._setRelativeTo("tx",tx);
	return tween;
};
tweenx909_ChainX.__tx = function(tween,tx) {
	var t = tween;
	t._setRelativeTo2("tx",tx);
	return tween;
};
tweenx909_ChainX.ty = function(tween,ty) {
	var t = tween;
	t._setTo("ty",ty);
	return tween;
};
tweenx909_ChainX._ty = function(tween,ty) {
	var t = tween;
	t._setRelativeTo("ty",ty);
	return tween;
};
tweenx909_ChainX.__ty = function(tween,ty) {
	var t = tween;
	t._setRelativeTo2("ty",ty);
	return tween;
};
tweenx909_ChainX.top = function(tween,top) {
	var t = tween;
	t._setTo("top",top);
	return tween;
};
tweenx909_ChainX._top = function(tween,top) {
	var t = tween;
	t._setRelativeTo("top",top);
	return tween;
};
tweenx909_ChainX.__top = function(tween,top) {
	var t = tween;
	t._setRelativeTo2("top",top);
	return tween;
};
tweenx909_ChainX.left = function(tween,left) {
	var t = tween;
	t._setTo("left",left);
	return tween;
};
tweenx909_ChainX._left = function(tween,left) {
	var t = tween;
	t._setRelativeTo("left",left);
	return tween;
};
tweenx909_ChainX.__left = function(tween,left) {
	var t = tween;
	t._setRelativeTo2("left",left);
	return tween;
};
tweenx909_ChainX.right = function(tween,right) {
	var t = tween;
	t._setTo("right",right);
	return tween;
};
tweenx909_ChainX._right = function(tween,right) {
	var t = tween;
	t._setRelativeTo("right",right);
	return tween;
};
tweenx909_ChainX.__right = function(tween,right) {
	var t = tween;
	t._setRelativeTo2("right",right);
	return tween;
};
tweenx909_ChainX.bottom = function(tween,bottom) {
	var t = tween;
	t._setTo("bottom",bottom);
	return tween;
};
tweenx909_ChainX._bottom = function(tween,bottom) {
	var t = tween;
	t._setRelativeTo("bottom",bottom);
	return tween;
};
tweenx909_ChainX.__bottom = function(tween,bottom) {
	var t = tween;
	t._setRelativeTo2("bottom",bottom);
	return tween;
};
tweenx909_ChainX.width = function(tween,width) {
	var t = tween;
	t._setTo("width",width);
	return tween;
};
tweenx909_ChainX._width = function(tween,width) {
	var t = tween;
	t._setRelativeTo("width",width);
	return tween;
};
tweenx909_ChainX.__width = function(tween,width) {
	var t = tween;
	t._setRelativeTo2("width",width);
	return tween;
};
tweenx909_ChainX.height = function(tween,height) {
	var t = tween;
	t._setTo("height",height);
	return tween;
};
tweenx909_ChainX._height = function(tween,height) {
	var t = tween;
	t._setRelativeTo("height",height);
	return tween;
};
tweenx909_ChainX.__height = function(tween,height) {
	var t = tween;
	t._setRelativeTo2("height",height);
	return tween;
};
tweenx909_ChainX.alphaOffset = function(tween,alphaOffset) {
	var t = tween;
	t._setTo("alphaOffset",alphaOffset);
	return tween;
};
tweenx909_ChainX._alphaOffset = function(tween,alphaOffset) {
	var t = tween;
	t._setRelativeTo("alphaOffset",alphaOffset);
	return tween;
};
tweenx909_ChainX.__alphaOffset = function(tween,alphaOffset) {
	var t = tween;
	t._setRelativeTo2("alphaOffset",alphaOffset);
	return tween;
};
tweenx909_ChainX.alphaMultiplier = function(tween,alphaMultiplier) {
	var t = tween;
	t._setTo("alphaMultiplier",alphaMultiplier);
	return tween;
};
tweenx909_ChainX._alphaMultiplier = function(tween,alphaMultiplier) {
	var t = tween;
	t._setRelativeTo("alphaMultiplier",alphaMultiplier);
	return tween;
};
tweenx909_ChainX.__alphaMultiplier = function(tween,alphaMultiplier) {
	var t = tween;
	t._setRelativeTo2("alphaMultiplier",alphaMultiplier);
	return tween;
};
tweenx909_ChainX.redOffset = function(tween,redOffset) {
	var t = tween;
	t._setTo("redOffset",redOffset);
	return tween;
};
tweenx909_ChainX._redOffset = function(tween,redOffset) {
	var t = tween;
	t._setRelativeTo("redOffset",redOffset);
	return tween;
};
tweenx909_ChainX.__redOffset = function(tween,redOffset) {
	var t = tween;
	t._setRelativeTo2("redOffset",redOffset);
	return tween;
};
tweenx909_ChainX.redMultiplier = function(tween,redMultiplier) {
	var t = tween;
	t._setTo("redMultiplier",redMultiplier);
	return tween;
};
tweenx909_ChainX._redMultiplier = function(tween,redMultiplier) {
	var t = tween;
	t._setRelativeTo("redMultiplier",redMultiplier);
	return tween;
};
tweenx909_ChainX.__redMultiplier = function(tween,redMultiplier) {
	var t = tween;
	t._setRelativeTo2("redMultiplier",redMultiplier);
	return tween;
};
tweenx909_ChainX.greenOffset = function(tween,greenOffset) {
	var t = tween;
	t._setTo("greenOffset",greenOffset);
	return tween;
};
tweenx909_ChainX._greenOffset = function(tween,greenOffset) {
	var t = tween;
	t._setRelativeTo("greenOffset",greenOffset);
	return tween;
};
tweenx909_ChainX.__greenOffset = function(tween,greenOffset) {
	var t = tween;
	t._setRelativeTo2("greenOffset",greenOffset);
	return tween;
};
tweenx909_ChainX.greenMultiplier = function(tween,greenMultiplier) {
	var t = tween;
	t._setTo("greenMultiplier",greenMultiplier);
	return tween;
};
tweenx909_ChainX._greenMultiplier = function(tween,greenMultiplier) {
	var t = tween;
	t._setRelativeTo("greenMultiplier",greenMultiplier);
	return tween;
};
tweenx909_ChainX.__greenMultiplier = function(tween,greenMultiplier) {
	var t = tween;
	t._setRelativeTo2("greenMultiplier",greenMultiplier);
	return tween;
};
tweenx909_ChainX.blueOffset = function(tween,blueOffset) {
	var t = tween;
	t._setTo("blueOffset",blueOffset);
	return tween;
};
tweenx909_ChainX._blueOffset = function(tween,blueOffset) {
	var t = tween;
	t._setRelativeTo("blueOffset",blueOffset);
	return tween;
};
tweenx909_ChainX.__blueOffset = function(tween,blueOffset) {
	var t = tween;
	t._setRelativeTo2("blueOffset",blueOffset);
	return tween;
};
tweenx909_ChainX.blueMultiplier = function(tween,blueMultiplier) {
	var t = tween;
	t._setTo("blueMultiplier",blueMultiplier);
	return tween;
};
tweenx909_ChainX._blueMultiplier = function(tween,blueMultiplier) {
	var t = tween;
	t._setRelativeTo("blueMultiplier",blueMultiplier);
	return tween;
};
tweenx909_ChainX.__blueMultiplier = function(tween,blueMultiplier) {
	var t = tween;
	t._setRelativeTo2("blueMultiplier",blueMultiplier);
	return tween;
};
tweenx909_ChainX.blurX = function(tween,blurX) {
	var t = tween;
	t._setTo("blurX",blurX);
	return tween;
};
tweenx909_ChainX._blurX = function(tween,blurX) {
	var t = tween;
	t._setRelativeTo("blurX",blurX);
	return tween;
};
tweenx909_ChainX.__blurX = function(tween,blurX) {
	var t = tween;
	t._setRelativeTo2("blurX",blurX);
	return tween;
};
tweenx909_ChainX.blurY = function(tween,blurY) {
	var t = tween;
	t._setTo("blurY",blurY);
	return tween;
};
tweenx909_ChainX._blurY = function(tween,blurY) {
	var t = tween;
	t._setRelativeTo("blurY",blurY);
	return tween;
};
tweenx909_ChainX.__blurY = function(tween,blurY) {
	var t = tween;
	t._setRelativeTo2("blurY",blurY);
	return tween;
};
tweenx909_ChainX.highlightAlpha = function(tween,highlightAlpha) {
	var t = tween;
	t._setTo("highlightAlpha",highlightAlpha);
	return tween;
};
tweenx909_ChainX._highlightAlpha = function(tween,highlightAlpha) {
	var t = tween;
	t._setRelativeTo("highlightAlpha",highlightAlpha);
	return tween;
};
tweenx909_ChainX.__highlightAlpha = function(tween,highlightAlpha) {
	var t = tween;
	t._setRelativeTo2("highlightAlpha",highlightAlpha);
	return tween;
};
tweenx909_ChainX.highlightColor = function(tween,highlightColor) {
	var t = tween;
	t._setTo("highlightColor",highlightColor);
	return tween;
};
tweenx909_ChainX.shadowAlpha = function(tween,shadowAlpha) {
	var t = tween;
	t._setTo("shadowAlpha",shadowAlpha);
	return tween;
};
tweenx909_ChainX._shadowAlpha = function(tween,shadowAlpha) {
	var t = tween;
	t._setRelativeTo("shadowAlpha",shadowAlpha);
	return tween;
};
tweenx909_ChainX.__shadowAlpha = function(tween,shadowAlpha) {
	var t = tween;
	t._setRelativeTo2("shadowAlpha",shadowAlpha);
	return tween;
};
tweenx909_ChainX.shadowColor = function(tween,shadowColor) {
	var t = tween;
	t._setTo("shadowColor",shadowColor);
	return tween;
};
tweenx909_ChainX.strength = function(tween,strength) {
	var t = tween;
	t._setTo("strength",strength);
	return tween;
};
tweenx909_ChainX._strength = function(tween,strength) {
	var t = tween;
	t._setRelativeTo("strength",strength);
	return tween;
};
tweenx909_ChainX.__strength = function(tween,strength) {
	var t = tween;
	t._setRelativeTo2("strength",strength);
	return tween;
};
tweenx909_ChainX.quality = function(tween,quality) {
	var t = tween;
	t._setTo("quality",quality);
	return tween;
};
tweenx909_ChainX._quality = function(tween,quality) {
	var t = tween;
	t._setRelativeTo("quality",quality);
	return tween;
};
tweenx909_ChainX.__quality = function(tween,quality) {
	var t = tween;
	t._setRelativeTo2("quality",quality);
	return tween;
};
tweenx909_ChainX.color = function(tween,color) {
	var t = tween;
	t._setTo("color",color);
	return tween;
};
tweenx909_ChainX.angle = function(tween,angle) {
	var t = tween;
	t._setTo("angle",angle);
	return tween;
};
tweenx909_ChainX._angle = function(tween,angle) {
	var t = tween;
	t._setRelativeTo("angle",angle);
	return tween;
};
tweenx909_ChainX.__angle = function(tween,angle) {
	var t = tween;
	t._setRelativeTo2("angle",angle);
	return tween;
};
tweenx909_ChainX.distance = function(tween,distance) {
	var t = tween;
	t._setTo("distance",distance);
	return tween;
};
tweenx909_ChainX._distance = function(tween,distance) {
	var t = tween;
	t._setRelativeTo("distance",distance);
	return tween;
};
tweenx909_ChainX.__distance = function(tween,distance) {
	var t = tween;
	t._setRelativeTo2("distance",distance);
	return tween;
};
tweenx909_ChainX.bias = function(tween,bias) {
	var t = tween;
	t._setTo("bias",bias);
	return tween;
};
tweenx909_ChainX._bias = function(tween,bias) {
	var t = tween;
	t._setRelativeTo("bias",bias);
	return tween;
};
tweenx909_ChainX.__bias = function(tween,bias) {
	var t = tween;
	t._setRelativeTo2("bias",bias);
	return tween;
};
tweenx909_ChainX.bitmapData = function(tween,bitmapData) {
	var t = tween;
	t._setTo("bitmapData",bitmapData);
	return tween;
};
tweenx909_ChainX.alphas = function(tween,alphas) {
	var t = tween;
	t._setTo("alphas",alphas);
	return tween;
};
tweenx909_ChainX.colors = function(tween,colors) {
	var t = tween;
	t._setTo("colors",colors);
	return tween;
};
tweenx909_ChainX.ratios = function(tween,ratios) {
	var t = tween;
	t._setTo("ratios",ratios);
	return tween;
};
tweenx909_ChainX.visible = function(tween,visible) {
	var t = tween;
	t._setTo("visible",visible);
	return tween;
};
tweenx909_ChainX.knockout = function(tween,knockout) {
	var t = tween;
	t._setTo("knockout",knockout);
	return tween;
};
tweenx909_ChainX.buttonEnabled = function(tween,buttonEnabled) {
	var t = tween;
	t._setTo("buttonEnabled",buttonEnabled);
	return tween;
};
tweenx909_ChainX.buttonChildren = function(tween,buttonChildren) {
	var t = tween;
	t._setTo("buttonChildren",buttonChildren);
	return tween;
};
tweenx909_ChainX.inner = function(tween,inner) {
	var t = tween;
	t._setTo("inner",inner);
	return tween;
};
tweenx909_ChainX.xy = function(tween,x,y) {
	var t = tween;
	t._setTo("x",x);
	t._setTo("y",y);
	return tween;
};
tweenx909_ChainX._xy = function(tween,x,y) {
	var t = tween;
	t._setRelativeTo("x",x);
	t._setRelativeTo("y",y);
	return tween;
};
tweenx909_ChainX.__xy = function(tween,x,y) {
	var t = tween;
	t._setRelativeTo2("x",x);
	t._setRelativeTo2("y",y);
	return tween;
};
tweenx909_ChainX.scaleXY = function(tween,scaleX,scaleY) {
	var t = tween;
	t._setTo("scaleX",scaleX);
	t._setTo("scaleY",scaleY);
	return tween;
};
tweenx909_ChainX._scaleXY = function(tween,scaleX,scaleY) {
	var t = tween;
	t._setRelativeTo("scaleX",scaleX);
	t._setRelativeTo("scaleY",scaleY);
	return tween;
};
tweenx909_ChainX.__scaleXY = function(tween,scaleX,scaleY) {
	var t = tween;
	t._setRelativeTo2("scaleX",scaleX);
	t._setRelativeTo2("scaleY",scaleY);
	return tween;
};
tweenx909_ChainX.rotationXY = function(tween,rotationX,rotationY) {
	var t = tween;
	t._setTo("rotationX",rotationX);
	t._setTo("rotationY",rotationY);
	return tween;
};
tweenx909_ChainX._rotationXY = function(tween,rotationX,rotationY) {
	var t = tween;
	t._setRelativeTo("rotationX",rotationX);
	t._setRelativeTo("rotationY",rotationY);
	return tween;
};
tweenx909_ChainX.__rotationXY = function(tween,rotationX,rotationY) {
	var t = tween;
	t._setRelativeTo2("rotationX",rotationX);
	t._setRelativeTo2("rotationY",rotationY);
	return tween;
};
tweenx909_ChainX.xyz = function(tween,x,y,z) {
	var t = tween;
	t._setTo("x",x);
	t._setTo("y",y);
	t._setTo("z",z);
	return tween;
};
tweenx909_ChainX._xyz = function(tween,x,y,z) {
	var t = tween;
	t._setRelativeTo("x",x);
	t._setRelativeTo("y",y);
	t._setRelativeTo("z",z);
	return tween;
};
tweenx909_ChainX.__xyz = function(tween,x,y,z) {
	var t = tween;
	t._setRelativeTo2("x",x);
	t._setRelativeTo2("y",y);
	t._setRelativeTo2("z",z);
	return tween;
};
tweenx909_ChainX.scaleXYZ = function(tween,scaleX,scaleY,scaleZ) {
	var t = tween;
	t._setTo("scaleX",scaleX);
	t._setTo("scaleY",scaleY);
	t._setTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ChainX._scaleXYZ = function(tween,scaleX,scaleY,scaleZ) {
	var t = tween;
	t._setRelativeTo("scaleX",scaleX);
	t._setRelativeTo("scaleY",scaleY);
	t._setRelativeTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ChainX.__scaleXYZ = function(tween,scaleX,scaleY,scaleZ) {
	var t = tween;
	t._setRelativeTo2("scaleX",scaleX);
	t._setRelativeTo2("scaleY",scaleY);
	t._setRelativeTo2("scaleZ",scaleZ);
	return tween;
};
tweenx909_ChainX.rotationXYZ = function(tween,rotationX,rotationY,rotationZ) {
	var t = tween;
	t._setTo("rotationX",rotationX);
	t._setTo("rotationY",rotationY);
	t._setTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ChainX._rotationXYZ = function(tween,rotationX,rotationY,rotationZ) {
	var t = tween;
	t._setRelativeTo("rotationX",rotationX);
	t._setRelativeTo("rotationY",rotationY);
	t._setRelativeTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ChainX.__rotationXYZ = function(tween,rotationX,rotationY,rotationZ) {
	var t = tween;
	t._setRelativeTo2("rotationX",rotationX);
	t._setRelativeTo2("rotationY",rotationY);
	t._setRelativeTo2("rotationZ",rotationZ);
	return tween;
};
var tweenx909_ArrayChainX = function() { };
tweenx909_ArrayChainX.__name__ = ["tweenx909","ArrayChainX"];
tweenx909_ArrayChainX.alpha = function(tween,alpha) {
	var t = tween;
	t._setTo("alpha",alpha);
	return tween;
};
tweenx909_ArrayChainX._alpha = function(tween,alpha) {
	var t = tween;
	t._setRelativeTo("alpha",alpha);
	return tween;
};
tweenx909_ArrayChainX.__alpha = function(tween,alpha) {
	var t = tween;
	t._setRelativeTo2("alpha",alpha);
	return tween;
};
tweenx909_ArrayChainX.x = function(tween,x) {
	var t = tween;
	t._setTo("x",x);
	return tween;
};
tweenx909_ArrayChainX._x = function(tween,x) {
	var t = tween;
	t._setRelativeTo("x",x);
	return tween;
};
tweenx909_ArrayChainX.__x = function(tween,x) {
	var t = tween;
	t._setRelativeTo2("x",x);
	return tween;
};
tweenx909_ArrayChainX.y = function(tween,y) {
	var t = tween;
	t._setTo("y",y);
	return tween;
};
tweenx909_ArrayChainX._y = function(tween,y) {
	var t = tween;
	t._setRelativeTo("y",y);
	return tween;
};
tweenx909_ArrayChainX.__y = function(tween,y) {
	var t = tween;
	t._setRelativeTo2("y",y);
	return tween;
};
tweenx909_ArrayChainX.z = function(tween,z) {
	var t = tween;
	t._setTo("z",z);
	return tween;
};
tweenx909_ArrayChainX._z = function(tween,z) {
	var t = tween;
	t._setRelativeTo("z",z);
	return tween;
};
tweenx909_ArrayChainX.__z = function(tween,z) {
	var t = tween;
	t._setRelativeTo2("z",z);
	return tween;
};
tweenx909_ArrayChainX.scaleX = function(tween,scaleX) {
	var t = tween;
	t._setTo("scaleX",scaleX);
	return tween;
};
tweenx909_ArrayChainX._scaleX = function(tween,scaleX) {
	var t = tween;
	t._setRelativeTo("scaleX",scaleX);
	return tween;
};
tweenx909_ArrayChainX.__scaleX = function(tween,scaleX) {
	var t = tween;
	t._setRelativeTo2("scaleX",scaleX);
	return tween;
};
tweenx909_ArrayChainX.scaleY = function(tween,scaleY) {
	var t = tween;
	t._setTo("scaleY",scaleY);
	return tween;
};
tweenx909_ArrayChainX._scaleY = function(tween,scaleY) {
	var t = tween;
	t._setRelativeTo("scaleY",scaleY);
	return tween;
};
tweenx909_ArrayChainX.__scaleY = function(tween,scaleY) {
	var t = tween;
	t._setRelativeTo2("scaleY",scaleY);
	return tween;
};
tweenx909_ArrayChainX.scaleZ = function(tween,scaleZ) {
	var t = tween;
	t._setTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ArrayChainX._scaleZ = function(tween,scaleZ) {
	var t = tween;
	t._setRelativeTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ArrayChainX.__scaleZ = function(tween,scaleZ) {
	var t = tween;
	t._setRelativeTo2("scaleZ",scaleZ);
	return tween;
};
tweenx909_ArrayChainX.rotation = function(tween,rotation) {
	var t = tween;
	t._setTo("rotation",rotation);
	return tween;
};
tweenx909_ArrayChainX._rotation = function(tween,rotation) {
	var t = tween;
	t._setRelativeTo("rotation",rotation);
	return tween;
};
tweenx909_ArrayChainX.__rotation = function(tween,rotation) {
	var t = tween;
	t._setRelativeTo2("rotation",rotation);
	return tween;
};
tweenx909_ArrayChainX.rotationX = function(tween,rotationX) {
	var t = tween;
	t._setTo("rotationX",rotationX);
	return tween;
};
tweenx909_ArrayChainX._rotationX = function(tween,rotationX) {
	var t = tween;
	t._setRelativeTo("rotationX",rotationX);
	return tween;
};
tweenx909_ArrayChainX.__rotationX = function(tween,rotationX) {
	var t = tween;
	t._setRelativeTo2("rotationX",rotationX);
	return tween;
};
tweenx909_ArrayChainX.rotationY = function(tween,rotationY) {
	var t = tween;
	t._setTo("rotationY",rotationY);
	return tween;
};
tweenx909_ArrayChainX._rotationY = function(tween,rotationY) {
	var t = tween;
	t._setRelativeTo("rotationY",rotationY);
	return tween;
};
tweenx909_ArrayChainX.__rotationY = function(tween,rotationY) {
	var t = tween;
	t._setRelativeTo2("rotationY",rotationY);
	return tween;
};
tweenx909_ArrayChainX.rotationZ = function(tween,rotationZ) {
	var t = tween;
	t._setTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ArrayChainX._rotationZ = function(tween,rotationZ) {
	var t = tween;
	t._setRelativeTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ArrayChainX.__rotationZ = function(tween,rotationZ) {
	var t = tween;
	t._setRelativeTo2("rotationZ",rotationZ);
	return tween;
};
tweenx909_ArrayChainX.a = function(tween,a) {
	var t = tween;
	t._setTo("a",a);
	return tween;
};
tweenx909_ArrayChainX._a = function(tween,a) {
	var t = tween;
	t._setRelativeTo("a",a);
	return tween;
};
tweenx909_ArrayChainX.__a = function(tween,a) {
	var t = tween;
	t._setRelativeTo2("a",a);
	return tween;
};
tweenx909_ArrayChainX.b = function(tween,b) {
	var t = tween;
	t._setTo("b",b);
	return tween;
};
tweenx909_ArrayChainX._b = function(tween,b) {
	var t = tween;
	t._setRelativeTo("b",b);
	return tween;
};
tweenx909_ArrayChainX.__b = function(tween,b) {
	var t = tween;
	t._setRelativeTo2("b",b);
	return tween;
};
tweenx909_ArrayChainX.c = function(tween,c) {
	var t = tween;
	t._setTo("c",c);
	return tween;
};
tweenx909_ArrayChainX._c = function(tween,c) {
	var t = tween;
	t._setRelativeTo("c",c);
	return tween;
};
tweenx909_ArrayChainX.__c = function(tween,c) {
	var t = tween;
	t._setRelativeTo2("c",c);
	return tween;
};
tweenx909_ArrayChainX.d = function(tween,d) {
	var t = tween;
	t._setTo("d",d);
	return tween;
};
tweenx909_ArrayChainX._d = function(tween,d) {
	var t = tween;
	t._setRelativeTo("d",d);
	return tween;
};
tweenx909_ArrayChainX.__d = function(tween,d) {
	var t = tween;
	t._setRelativeTo2("d",d);
	return tween;
};
tweenx909_ArrayChainX.tx = function(tween,tx) {
	var t = tween;
	t._setTo("tx",tx);
	return tween;
};
tweenx909_ArrayChainX._tx = function(tween,tx) {
	var t = tween;
	t._setRelativeTo("tx",tx);
	return tween;
};
tweenx909_ArrayChainX.__tx = function(tween,tx) {
	var t = tween;
	t._setRelativeTo2("tx",tx);
	return tween;
};
tweenx909_ArrayChainX.ty = function(tween,ty) {
	var t = tween;
	t._setTo("ty",ty);
	return tween;
};
tweenx909_ArrayChainX._ty = function(tween,ty) {
	var t = tween;
	t._setRelativeTo("ty",ty);
	return tween;
};
tweenx909_ArrayChainX.__ty = function(tween,ty) {
	var t = tween;
	t._setRelativeTo2("ty",ty);
	return tween;
};
tweenx909_ArrayChainX.top = function(tween,top) {
	var t = tween;
	t._setTo("top",top);
	return tween;
};
tweenx909_ArrayChainX._top = function(tween,top) {
	var t = tween;
	t._setRelativeTo("top",top);
	return tween;
};
tweenx909_ArrayChainX.__top = function(tween,top) {
	var t = tween;
	t._setRelativeTo2("top",top);
	return tween;
};
tweenx909_ArrayChainX.left = function(tween,left) {
	var t = tween;
	t._setTo("left",left);
	return tween;
};
tweenx909_ArrayChainX._left = function(tween,left) {
	var t = tween;
	t._setRelativeTo("left",left);
	return tween;
};
tweenx909_ArrayChainX.__left = function(tween,left) {
	var t = tween;
	t._setRelativeTo2("left",left);
	return tween;
};
tweenx909_ArrayChainX.right = function(tween,right) {
	var t = tween;
	t._setTo("right",right);
	return tween;
};
tweenx909_ArrayChainX._right = function(tween,right) {
	var t = tween;
	t._setRelativeTo("right",right);
	return tween;
};
tweenx909_ArrayChainX.__right = function(tween,right) {
	var t = tween;
	t._setRelativeTo2("right",right);
	return tween;
};
tweenx909_ArrayChainX.bottom = function(tween,bottom) {
	var t = tween;
	t._setTo("bottom",bottom);
	return tween;
};
tweenx909_ArrayChainX._bottom = function(tween,bottom) {
	var t = tween;
	t._setRelativeTo("bottom",bottom);
	return tween;
};
tweenx909_ArrayChainX.__bottom = function(tween,bottom) {
	var t = tween;
	t._setRelativeTo2("bottom",bottom);
	return tween;
};
tweenx909_ArrayChainX.width = function(tween,width) {
	var t = tween;
	t._setTo("width",width);
	return tween;
};
tweenx909_ArrayChainX._width = function(tween,width) {
	var t = tween;
	t._setRelativeTo("width",width);
	return tween;
};
tweenx909_ArrayChainX.__width = function(tween,width) {
	var t = tween;
	t._setRelativeTo2("width",width);
	return tween;
};
tweenx909_ArrayChainX.height = function(tween,height) {
	var t = tween;
	t._setTo("height",height);
	return tween;
};
tweenx909_ArrayChainX._height = function(tween,height) {
	var t = tween;
	t._setRelativeTo("height",height);
	return tween;
};
tweenx909_ArrayChainX.__height = function(tween,height) {
	var t = tween;
	t._setRelativeTo2("height",height);
	return tween;
};
tweenx909_ArrayChainX.alphaOffset = function(tween,alphaOffset) {
	var t = tween;
	t._setTo("alphaOffset",alphaOffset);
	return tween;
};
tweenx909_ArrayChainX._alphaOffset = function(tween,alphaOffset) {
	var t = tween;
	t._setRelativeTo("alphaOffset",alphaOffset);
	return tween;
};
tweenx909_ArrayChainX.__alphaOffset = function(tween,alphaOffset) {
	var t = tween;
	t._setRelativeTo2("alphaOffset",alphaOffset);
	return tween;
};
tweenx909_ArrayChainX.alphaMultiplier = function(tween,alphaMultiplier) {
	var t = tween;
	t._setTo("alphaMultiplier",alphaMultiplier);
	return tween;
};
tweenx909_ArrayChainX._alphaMultiplier = function(tween,alphaMultiplier) {
	var t = tween;
	t._setRelativeTo("alphaMultiplier",alphaMultiplier);
	return tween;
};
tweenx909_ArrayChainX.__alphaMultiplier = function(tween,alphaMultiplier) {
	var t = tween;
	t._setRelativeTo2("alphaMultiplier",alphaMultiplier);
	return tween;
};
tweenx909_ArrayChainX.redOffset = function(tween,redOffset) {
	var t = tween;
	t._setTo("redOffset",redOffset);
	return tween;
};
tweenx909_ArrayChainX._redOffset = function(tween,redOffset) {
	var t = tween;
	t._setRelativeTo("redOffset",redOffset);
	return tween;
};
tweenx909_ArrayChainX.__redOffset = function(tween,redOffset) {
	var t = tween;
	t._setRelativeTo2("redOffset",redOffset);
	return tween;
};
tweenx909_ArrayChainX.redMultiplier = function(tween,redMultiplier) {
	var t = tween;
	t._setTo("redMultiplier",redMultiplier);
	return tween;
};
tweenx909_ArrayChainX._redMultiplier = function(tween,redMultiplier) {
	var t = tween;
	t._setRelativeTo("redMultiplier",redMultiplier);
	return tween;
};
tweenx909_ArrayChainX.__redMultiplier = function(tween,redMultiplier) {
	var t = tween;
	t._setRelativeTo2("redMultiplier",redMultiplier);
	return tween;
};
tweenx909_ArrayChainX.greenOffset = function(tween,greenOffset) {
	var t = tween;
	t._setTo("greenOffset",greenOffset);
	return tween;
};
tweenx909_ArrayChainX._greenOffset = function(tween,greenOffset) {
	var t = tween;
	t._setRelativeTo("greenOffset",greenOffset);
	return tween;
};
tweenx909_ArrayChainX.__greenOffset = function(tween,greenOffset) {
	var t = tween;
	t._setRelativeTo2("greenOffset",greenOffset);
	return tween;
};
tweenx909_ArrayChainX.greenMultiplier = function(tween,greenMultiplier) {
	var t = tween;
	t._setTo("greenMultiplier",greenMultiplier);
	return tween;
};
tweenx909_ArrayChainX._greenMultiplier = function(tween,greenMultiplier) {
	var t = tween;
	t._setRelativeTo("greenMultiplier",greenMultiplier);
	return tween;
};
tweenx909_ArrayChainX.__greenMultiplier = function(tween,greenMultiplier) {
	var t = tween;
	t._setRelativeTo2("greenMultiplier",greenMultiplier);
	return tween;
};
tweenx909_ArrayChainX.blueOffset = function(tween,blueOffset) {
	var t = tween;
	t._setTo("blueOffset",blueOffset);
	return tween;
};
tweenx909_ArrayChainX._blueOffset = function(tween,blueOffset) {
	var t = tween;
	t._setRelativeTo("blueOffset",blueOffset);
	return tween;
};
tweenx909_ArrayChainX.__blueOffset = function(tween,blueOffset) {
	var t = tween;
	t._setRelativeTo2("blueOffset",blueOffset);
	return tween;
};
tweenx909_ArrayChainX.blueMultiplier = function(tween,blueMultiplier) {
	var t = tween;
	t._setTo("blueMultiplier",blueMultiplier);
	return tween;
};
tweenx909_ArrayChainX._blueMultiplier = function(tween,blueMultiplier) {
	var t = tween;
	t._setRelativeTo("blueMultiplier",blueMultiplier);
	return tween;
};
tweenx909_ArrayChainX.__blueMultiplier = function(tween,blueMultiplier) {
	var t = tween;
	t._setRelativeTo2("blueMultiplier",blueMultiplier);
	return tween;
};
tweenx909_ArrayChainX.blurX = function(tween,blurX) {
	var t = tween;
	t._setTo("blurX",blurX);
	return tween;
};
tweenx909_ArrayChainX._blurX = function(tween,blurX) {
	var t = tween;
	t._setRelativeTo("blurX",blurX);
	return tween;
};
tweenx909_ArrayChainX.__blurX = function(tween,blurX) {
	var t = tween;
	t._setRelativeTo2("blurX",blurX);
	return tween;
};
tweenx909_ArrayChainX.blurY = function(tween,blurY) {
	var t = tween;
	t._setTo("blurY",blurY);
	return tween;
};
tweenx909_ArrayChainX._blurY = function(tween,blurY) {
	var t = tween;
	t._setRelativeTo("blurY",blurY);
	return tween;
};
tweenx909_ArrayChainX.__blurY = function(tween,blurY) {
	var t = tween;
	t._setRelativeTo2("blurY",blurY);
	return tween;
};
tweenx909_ArrayChainX.highlightAlpha = function(tween,highlightAlpha) {
	var t = tween;
	t._setTo("highlightAlpha",highlightAlpha);
	return tween;
};
tweenx909_ArrayChainX._highlightAlpha = function(tween,highlightAlpha) {
	var t = tween;
	t._setRelativeTo("highlightAlpha",highlightAlpha);
	return tween;
};
tweenx909_ArrayChainX.__highlightAlpha = function(tween,highlightAlpha) {
	var t = tween;
	t._setRelativeTo2("highlightAlpha",highlightAlpha);
	return tween;
};
tweenx909_ArrayChainX.highlightColor = function(tween,highlightColor) {
	var t = tween;
	t._setTo("highlightColor",highlightColor);
	return tween;
};
tweenx909_ArrayChainX.shadowAlpha = function(tween,shadowAlpha) {
	var t = tween;
	t._setTo("shadowAlpha",shadowAlpha);
	return tween;
};
tweenx909_ArrayChainX._shadowAlpha = function(tween,shadowAlpha) {
	var t = tween;
	t._setRelativeTo("shadowAlpha",shadowAlpha);
	return tween;
};
tweenx909_ArrayChainX.__shadowAlpha = function(tween,shadowAlpha) {
	var t = tween;
	t._setRelativeTo2("shadowAlpha",shadowAlpha);
	return tween;
};
tweenx909_ArrayChainX.shadowColor = function(tween,shadowColor) {
	var t = tween;
	t._setTo("shadowColor",shadowColor);
	return tween;
};
tweenx909_ArrayChainX.strength = function(tween,strength) {
	var t = tween;
	t._setTo("strength",strength);
	return tween;
};
tweenx909_ArrayChainX._strength = function(tween,strength) {
	var t = tween;
	t._setRelativeTo("strength",strength);
	return tween;
};
tweenx909_ArrayChainX.__strength = function(tween,strength) {
	var t = tween;
	t._setRelativeTo2("strength",strength);
	return tween;
};
tweenx909_ArrayChainX.quality = function(tween,quality) {
	var t = tween;
	t._setTo("quality",quality);
	return tween;
};
tweenx909_ArrayChainX._quality = function(tween,quality) {
	var t = tween;
	t._setRelativeTo("quality",quality);
	return tween;
};
tweenx909_ArrayChainX.__quality = function(tween,quality) {
	var t = tween;
	t._setRelativeTo2("quality",quality);
	return tween;
};
tweenx909_ArrayChainX.color = function(tween,color) {
	var t = tween;
	t._setTo("color",color);
	return tween;
};
tweenx909_ArrayChainX.angle = function(tween,angle) {
	var t = tween;
	t._setTo("angle",angle);
	return tween;
};
tweenx909_ArrayChainX._angle = function(tween,angle) {
	var t = tween;
	t._setRelativeTo("angle",angle);
	return tween;
};
tweenx909_ArrayChainX.__angle = function(tween,angle) {
	var t = tween;
	t._setRelativeTo2("angle",angle);
	return tween;
};
tweenx909_ArrayChainX.distance = function(tween,distance) {
	var t = tween;
	t._setTo("distance",distance);
	return tween;
};
tweenx909_ArrayChainX._distance = function(tween,distance) {
	var t = tween;
	t._setRelativeTo("distance",distance);
	return tween;
};
tweenx909_ArrayChainX.__distance = function(tween,distance) {
	var t = tween;
	t._setRelativeTo2("distance",distance);
	return tween;
};
tweenx909_ArrayChainX.bias = function(tween,bias) {
	var t = tween;
	t._setTo("bias",bias);
	return tween;
};
tweenx909_ArrayChainX._bias = function(tween,bias) {
	var t = tween;
	t._setRelativeTo("bias",bias);
	return tween;
};
tweenx909_ArrayChainX.__bias = function(tween,bias) {
	var t = tween;
	t._setRelativeTo2("bias",bias);
	return tween;
};
tweenx909_ArrayChainX.bitmapData = function(tween,bitmapData) {
	var t = tween;
	t._setTo("bitmapData",bitmapData);
	return tween;
};
tweenx909_ArrayChainX.alphas = function(tween,alphas) {
	var t = tween;
	t._setTo("alphas",alphas);
	return tween;
};
tweenx909_ArrayChainX.colors = function(tween,colors) {
	var t = tween;
	t._setTo("colors",colors);
	return tween;
};
tweenx909_ArrayChainX.ratios = function(tween,ratios) {
	var t = tween;
	t._setTo("ratios",ratios);
	return tween;
};
tweenx909_ArrayChainX.visible = function(tween,visible) {
	var t = tween;
	t._setTo("visible",visible);
	return tween;
};
tweenx909_ArrayChainX.knockout = function(tween,knockout) {
	var t = tween;
	t._setTo("knockout",knockout);
	return tween;
};
tweenx909_ArrayChainX.buttonEnabled = function(tween,buttonEnabled) {
	var t = tween;
	t._setTo("buttonEnabled",buttonEnabled);
	return tween;
};
tweenx909_ArrayChainX.buttonChildren = function(tween,buttonChildren) {
	var t = tween;
	t._setTo("buttonChildren",buttonChildren);
	return tween;
};
tweenx909_ArrayChainX.inner = function(tween,inner) {
	var t = tween;
	t._setTo("inner",inner);
	return tween;
};
tweenx909_ArrayChainX.xy = function(tween,x,y) {
	var t = tween;
	t._setTo("x",x);
	t._setTo("y",y);
	return tween;
};
tweenx909_ArrayChainX._xy = function(tween,x,y) {
	var t = tween;
	t._setRelativeTo("x",x);
	t._setRelativeTo("y",y);
	return tween;
};
tweenx909_ArrayChainX.__xy = function(tween,x,y) {
	var t = tween;
	t._setRelativeTo2("x",x);
	t._setRelativeTo2("y",y);
	return tween;
};
tweenx909_ArrayChainX.scaleXY = function(tween,scaleX,scaleY) {
	var t = tween;
	t._setTo("scaleX",scaleX);
	t._setTo("scaleY",scaleY);
	return tween;
};
tweenx909_ArrayChainX._scaleXY = function(tween,scaleX,scaleY) {
	var t = tween;
	t._setRelativeTo("scaleX",scaleX);
	t._setRelativeTo("scaleY",scaleY);
	return tween;
};
tweenx909_ArrayChainX.__scaleXY = function(tween,scaleX,scaleY) {
	var t = tween;
	t._setRelativeTo2("scaleX",scaleX);
	t._setRelativeTo2("scaleY",scaleY);
	return tween;
};
tweenx909_ArrayChainX.rotationXY = function(tween,rotationX,rotationY) {
	var t = tween;
	t._setTo("rotationX",rotationX);
	t._setTo("rotationY",rotationY);
	return tween;
};
tweenx909_ArrayChainX._rotationXY = function(tween,rotationX,rotationY) {
	var t = tween;
	t._setRelativeTo("rotationX",rotationX);
	t._setRelativeTo("rotationY",rotationY);
	return tween;
};
tweenx909_ArrayChainX.__rotationXY = function(tween,rotationX,rotationY) {
	var t = tween;
	t._setRelativeTo2("rotationX",rotationX);
	t._setRelativeTo2("rotationY",rotationY);
	return tween;
};
tweenx909_ArrayChainX.xyz = function(tween,x,y,z) {
	var t = tween;
	t._setTo("x",x);
	t._setTo("y",y);
	t._setTo("z",z);
	return tween;
};
tweenx909_ArrayChainX._xyz = function(tween,x,y,z) {
	var t = tween;
	t._setRelativeTo("x",x);
	t._setRelativeTo("y",y);
	t._setRelativeTo("z",z);
	return tween;
};
tweenx909_ArrayChainX.__xyz = function(tween,x,y,z) {
	var t = tween;
	t._setRelativeTo2("x",x);
	t._setRelativeTo2("y",y);
	t._setRelativeTo2("z",z);
	return tween;
};
tweenx909_ArrayChainX.scaleXYZ = function(tween,scaleX,scaleY,scaleZ) {
	var t = tween;
	t._setTo("scaleX",scaleX);
	t._setTo("scaleY",scaleY);
	t._setTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ArrayChainX._scaleXYZ = function(tween,scaleX,scaleY,scaleZ) {
	var t = tween;
	t._setRelativeTo("scaleX",scaleX);
	t._setRelativeTo("scaleY",scaleY);
	t._setRelativeTo("scaleZ",scaleZ);
	return tween;
};
tweenx909_ArrayChainX.__scaleXYZ = function(tween,scaleX,scaleY,scaleZ) {
	var t = tween;
	t._setRelativeTo2("scaleX",scaleX);
	t._setRelativeTo2("scaleY",scaleY);
	t._setRelativeTo2("scaleZ",scaleZ);
	return tween;
};
tweenx909_ArrayChainX.rotationXYZ = function(tween,rotationX,rotationY,rotationZ) {
	var t = tween;
	t._setTo("rotationX",rotationX);
	t._setTo("rotationY",rotationY);
	t._setTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ArrayChainX._rotationXYZ = function(tween,rotationX,rotationY,rotationZ) {
	var t = tween;
	t._setRelativeTo("rotationX",rotationX);
	t._setRelativeTo("rotationY",rotationY);
	t._setRelativeTo("rotationZ",rotationZ);
	return tween;
};
tweenx909_ArrayChainX.__rotationXYZ = function(tween,rotationX,rotationY,rotationZ) {
	var t = tween;
	t._setRelativeTo2("rotationX",rotationX);
	t._setRelativeTo2("rotationY",rotationY);
	t._setRelativeTo2("rotationZ",rotationZ);
	return tween;
};
var tweenx909_EventX = function() { };
tweenx909_EventX.__name__ = ["tweenx909","EventX"];
var tweenx909_advanced_CommandX = function(command,posInfos) {
	this.command = command;
	this.definedPosInfos = posInfos;
};
tweenx909_advanced_CommandX.__name__ = ["tweenx909","advanced","CommandX"];
tweenx909_advanced_CommandX.prototype = {
	__class__: tweenx909_advanced_CommandX
};
var tweenxcore_Easing = function() { };
tweenxcore_Easing.__name__ = ["tweenxcore","Easing"];
tweenxcore_Easing.linear = function(t) {
	return t;
};
tweenxcore_Easing.sineIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return 1 - Math.cos(t * 1.57079632679489656);
	}
};
tweenxcore_Easing.sineOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return Math.sin(t * 1.57079632679489656);
	}
};
tweenxcore_Easing.sineInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return -0.5 * (Math.cos(3.1415926535897932384626433832795 * t) - 1);
	}
};
tweenxcore_Easing.sineOutIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if(t < 0.5) {
		return 0.5 * Math.sin(t * 2 * 1.57079632679489656);
	} else {
		return -0.5 * Math.cos((t * 2 - 1) * 1.57079632679489656) + 1;
	}
};
tweenxcore_Easing.quadIn = function(t) {
	return t * t;
};
tweenxcore_Easing.quadOut = function(t) {
	return -t * (t - 2);
};
tweenxcore_Easing.quadInOut = function(t) {
	if(t < 0.5) {
		return 2 * t * t;
	} else {
		return -2 * (--t * t) + 1;
	}
};
tweenxcore_Easing.quadOutIn = function(t) {
	if(t < 0.5) {
		t *= 2;
		return -0.5 * t * (t - 2);
	} else {
		t = t * 2 - 1;
		return 0.5 * t * t + 0.5;
	}
};
tweenxcore_Easing.cubicIn = function(t) {
	return t * t * t;
};
tweenxcore_Easing.cubicOut = function(t) {
	return --t * t * t + 1;
};
tweenxcore_Easing.cubicInOut = function(t) {
	t *= 2;
	if(t < 1) {
		return 0.5 * t * t * t;
	} else {
		t -= 2;
		return 0.5 * (t * t * t + 2);
	}
};
tweenxcore_Easing.cubicOutIn = function(t) {
	t = t * 2 - 1;
	return 0.5 * (t * t * t + 1);
};
tweenxcore_Easing.quartIn = function(t) {
	t *= t;
	return t * t;
};
tweenxcore_Easing.quartOut = function(t) {
	t = --t * t;
	return 1 - t * t;
};
tweenxcore_Easing.quartInOut = function(t) {
	t *= 2;
	if(t < 1) {
		t *= t;
		return 0.5 * t * t;
	} else {
		t -= 2;
		t = t * t;
		return -0.5 * (t * t - 2);
	}
};
tweenxcore_Easing.quartOutIn = function(t) {
	if(t < 0.5) {
		t = t * 2 - 1;
		t = t * t;
		return -0.5 * t * t + 0.5;
	} else {
		t = t * 2 - 1;
		t = t * t;
		return 0.5 * t * t + 0.5;
	}
};
tweenxcore_Easing.quintIn = function(t) {
	var tmp = t;
	t *= t;
	return tmp * t * t;
};
tweenxcore_Easing.quintOut = function(t) {
	var tmp = --t;
	t *= t;
	return tmp * t * t + 1;
};
tweenxcore_Easing.quintInOut = function(t) {
	t *= 2;
	if(t < 1) {
		var tmp = 0.5 * t;
		t *= t;
		return tmp * t * t;
	} else {
		t -= 2;
		var tmp1 = 0.5 * t;
		t *= t;
		return tmp1 * t * t + 1;
	}
};
tweenxcore_Easing.quintOutIn = function(t) {
	t = t * 2 - 1;
	var tmp = t;
	t *= t;
	return 0.5 * (tmp * t * t + 1);
};
tweenxcore_Easing.expoIn = function(t) {
	if(t == 0) {
		return 0;
	} else {
		return Math.exp(6.931471805599453 * (t - 1));
	}
};
tweenxcore_Easing.expoOut = function(t) {
	if(t == 1) {
		return 1;
	} else {
		return 1 - Math.exp(-6.93147180559945308 * t);
	}
};
tweenxcore_Easing.expoInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		t *= 2;
		if(t < 1) {
			return 0.5 * Math.exp(6.931471805599453 * (t - 1));
		} else {
			return 0.5 * (2 - Math.exp(-6.93147180559945308 * (t - 1)));
		}
	}
};
tweenxcore_Easing.expoOutIn = function(t) {
	if(t < 0.5) {
		return 0.5 * (1 - Math.exp(-13.8629436111989062 * t));
	} else if(t == 0.5) {
		return 0.5;
	} else {
		return 0.5 * (Math.exp(13.8629436111989062 * (t - 1)) + 1);
	}
};
tweenxcore_Easing.circIn = function(t) {
	if(t < -1 || 1 < t) {
		return 0;
	} else {
		return 1 - Math.sqrt(1 - t * t);
	}
};
tweenxcore_Easing.circOut = function(t) {
	if(t < 0 || 2 < t) {
		return 0;
	} else {
		return Math.sqrt(t * (2 - t));
	}
};
tweenxcore_Easing.circInOut = function(t) {
	if(t < -0.5 || 1.5 < t) {
		return 0.5;
	} else {
		t *= 2;
		if(t < 1) {
			return -0.5 * (Math.sqrt(1 - t * t) - 1);
		} else {
			t -= 2;
			return 0.5 * (Math.sqrt(1 - t * t) + 1);
		}
	}
};
tweenxcore_Easing.circOutIn = function(t) {
	if(t < 0) {
		return 0;
	} else if(1 < t) {
		return 1;
	} else if(t < 0.5) {
		t = t * 2 - 1;
		return 0.5 * Math.sqrt(1 - t * t);
	} else {
		t = t * 2 - 1;
		return -0.5 * (Math.sqrt(1 - t * t) - 1 - 1);
	}
};
tweenxcore_Easing.bounceIn = function(t) {
	t = 1 - t;
	if(t < 0.363636363636363646) {
		return 1 - 7.5625 * t * t;
	} else if(t < 0.727272727272727293) {
		t -= 0.545454545454545414;
		return 1 - (7.5625 * t * t + 0.75);
	} else if(t < 0.909090909090909061) {
		t -= 0.818181818181818232;
		return 1 - (7.5625 * t * t + 0.9375);
	} else {
		t -= 0.954545454545454586;
		return 1 - (7.5625 * t * t + 0.984375);
	}
};
tweenxcore_Easing.bounceOut = function(t) {
	if(t < 0.363636363636363646) {
		return 7.5625 * t * t;
	} else if(t < 0.727272727272727293) {
		t -= 0.545454545454545414;
		return 7.5625 * t * t + 0.75;
	} else if(t < 0.909090909090909061) {
		t -= 0.818181818181818232;
		return 7.5625 * t * t + 0.9375;
	} else {
		t -= 0.954545454545454586;
		return 7.5625 * t * t + 0.984375;
	}
};
tweenxcore_Easing.bounceInOut = function(t) {
	if(t < 0.5) {
		t = 1 - t * 2;
		if(t < 0.363636363636363646) {
			return (1 - 7.5625 * t * t) * 0.5;
		} else if(t < 0.727272727272727293) {
			t -= 0.545454545454545414;
			return (1 - (7.5625 * t * t + 0.75)) * 0.5;
		} else if(t < 0.909090909090909061) {
			t -= 0.818181818181818232;
			return (1 - (7.5625 * t * t + 0.9375)) * 0.5;
		} else {
			t -= 0.954545454545454586;
			return (1 - (7.5625 * t * t + 0.984375)) * 0.5;
		}
	} else {
		t = t * 2 - 1;
		if(t < 0.363636363636363646) {
			return 7.5625 * t * t * 0.5 + 0.5;
		} else if(t < 0.727272727272727293) {
			t -= 0.545454545454545414;
			return (7.5625 * t * t + 0.75) * 0.5 + 0.5;
		} else if(t < 0.909090909090909061) {
			t -= 0.818181818181818232;
			return (7.5625 * t * t + 0.9375) * 0.5 + 0.5;
		} else {
			t -= 0.954545454545454586;
			return (7.5625 * t * t + 0.984375) * 0.5 + 0.5;
		}
	}
};
tweenxcore_Easing.bounceOutIn = function(t) {
	if(t < 0.5) {
		t *= 2;
		if(t < 0.363636363636363646) {
			return 0.5 * (7.5625 * t * t);
		} else if(t < 0.727272727272727293) {
			t -= 0.545454545454545414;
			return 0.5 * (7.5625 * t * t + 0.75);
		} else if(t < 0.909090909090909061) {
			t -= 0.818181818181818232;
			return 0.5 * (7.5625 * t * t + 0.9375);
		} else {
			t -= 0.954545454545454586;
			return 0.5 * (7.5625 * t * t + 0.984375);
		}
	} else {
		t = 1 - (t * 2 - 1);
		if(t < 0.363636363636363646) {
			return 0.5 - 0.5 * (7.5625 * t * t) + 0.5;
		} else if(t < 0.727272727272727293) {
			t -= 0.545454545454545414;
			return 0.5 - 0.5 * (7.5625 * t * t + 0.75) + 0.5;
		} else if(t < 0.909090909090909061) {
			t -= 0.818181818181818232;
			return 0.5 - 0.5 * (7.5625 * t * t + 0.9375) + 0.5;
		} else {
			t -= 0.954545454545454586;
			return 0.5 - 0.5 * (7.5625 * t * t + 0.984375) + 0.5;
		}
	}
};
tweenxcore_Easing.backIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return t * t * (2.70158 * t - 1.70158);
	}
};
tweenxcore_Easing.backOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return --t * t * (2.70158 * t + 1.70158) + 1;
	}
};
tweenxcore_Easing.backInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		t *= 2;
		if(t < 1) {
			return 0.5 * (t * t * (3.5949095 * t - 2.5949095));
		} else {
			t -= 2;
			return 0.5 * (t * t * (3.5949095 * t + 2.5949095) + 2);
		}
	}
};
tweenxcore_Easing.backOutIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else if(t < 0.5) {
		t = t * 2 - 1;
		return 0.5 * (t * t * (2.70158 * t + 1.70158) + 1);
	} else {
		t = t * 2 - 1;
		return 0.5 * t * t * (2.70158 * t - 1.70158) + 0.5;
	}
};
tweenxcore_Easing.elasticIn = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return -(Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - 7.5e-05) * 6.28318530717958623 / 0.0003));
	}
};
tweenxcore_Easing.elasticOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		return Math.exp(-6.93147180559945308 * t) * Math.sin((t * 0.001 - 7.5e-05) * 6.28318530717958623 / 0.0003) + 1;
	}
};
tweenxcore_Easing.elasticInOut = function(t) {
	if(t == 0) {
		return 0;
	} else if(t == 1) {
		return 1;
	} else {
		t *= 2;
		if(t < 1) {
			return -0.5 * (Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - 7.5e-05) * 6.28318530717958623 / 0.0003));
		} else {
			return Math.exp(-6.93147180559945308 * --t) * Math.sin((t * 0.001 - 7.5e-05) * 6.28318530717958623 / 0.0003) * 0.5 + 1;
		}
	}
};
tweenxcore_Easing.elasticOutIn = function(t) {
	if(t < 0.5) {
		t *= 2;
		if(t == 0) {
			return 0;
		} else {
			return 0.5 * Math.exp(-6.93147180559945308 * t) * Math.sin((t * 0.001 - 7.5e-05) * 6.28318530717958623 / 0.0003) + 0.5;
		}
	} else if(t == 0.5) {
		return 0.5;
	} else if(t == 1) {
		return 1;
	} else {
		t = t * 2 - 1;
		return -(0.5 * Math.exp(6.931471805599453 * --t) * Math.sin((t * 0.001 - 7.5e-05) * 6.28318530717958623 / 0.0003)) + 0.5;
	}
};
tweenxcore_Easing.warpOut = function(t) {
	if(t <= 0) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpIn = function(t) {
	if(t < 1) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpInOut = function(t) {
	if(t < 0.5) {
		return 0;
	} else {
		return 1;
	}
};
tweenxcore_Easing.warpOutIn = function(t) {
	if(t <= 0) {
		return 0;
	} else if(t < 1) {
		return 0.5;
	} else {
		return 1;
	}
};
var tweenx909_rule_BoolRuleX = function() { };
tweenx909_rule_BoolRuleX.__name__ = ["tweenx909","rule","BoolRuleX"];
tweenx909_rule_BoolRuleX.calc = function(_from,_to,t1,t2,tween) {
	return 0 < (_from?1:0) * t2 + (_to?1:0) * t1;
};
tweenx909_rule_BoolRuleX.defaultFrom = function(value,_to,tween) {
	return value;
};
var tweenx909_rule_ArrayRuleX = function() { };
tweenx909_rule_ArrayRuleX.__name__ = ["tweenx909","rule","ArrayRuleX"];
tweenx909_rule_ArrayRuleX.calc = function(_from,_to,t1,t2,tween) {
	var fi = $iterator(_from)();
	var arr = [];
	var tmp = $iterator(_to)();
	while(tmp.hasNext()) {
		var t = tmp.next();
		var f = fi.next();
		var tmp1;
		if(typeof(t) == "number") {
			tmp1 = f * t2 + t * t1;
		} else {
			var result = null;
			var ok = false;
			var tmp2 = $iterator(tweenx909_TweenX.get_rules())();
			while(tmp2.hasNext()) {
				var r = tmp2.next();
				if(js_Boot.__instanceof(t,r.inputClass)) {
					ok = true;
					result = r.calc(f,t,t1,t2,tween);
					break;
				}
			}
			if(!ok) {
				var eh = tween;
				var o = t;
				throw new js__$Boot_HaxeError(eh.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
			}
			tmp1 = result;
		}
		arr.push(tmp1);
	}
	return arr;
};
tweenx909_rule_ArrayRuleX._calc = function(_from,_to,t1,t2,tween) {
	if(typeof(_to) == "number") {
		return _from * t2 + _to * t1;
	} else {
		var result = null;
		var ok = false;
		var tmp = $iterator(tweenx909_TweenX.get_rules())();
		while(tmp.hasNext()) {
			var r = tmp.next();
			if(js_Boot.__instanceof(_to,r.inputClass)) {
				ok = true;
				result = r.calc(_from,_to,t1,t2,tween);
				break;
			}
		}
		if(!ok) {
			var eh = tween;
			var o = _to;
			throw new js__$Boot_HaxeError(eh.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
		}
		return result;
	}
};
tweenx909_rule_ArrayRuleX.defaultFrom = function(value,_to,tween) {
	var eh = tween;
	if(value != null) {
		var arr = [];
		var tmp = $iterator(_to)();
		while(tmp.hasNext()) {
			tmp.next();
			arr.push(null);
		}
	} else if(Lambda.count(value) != Lambda.count(_to)) {
		throw new js__$Boot_HaxeError(eh.error("The array length must be same with start."));
	}
	var result = [];
	var it = $iterator(_to)();
	var tmp1 = $iterator(value)();
	while(tmp1.hasNext()) result.push(tweenx909_rule_ArrayRuleX._defaultFrom(tmp1.next(),it.next(),tween));
	return result;
};
tweenx909_rule_ArrayRuleX._defaultFrom = function(value,_to,tween) {
	if(typeof(_to) == "number") {
		return value;
	}
	var tmp = $iterator(tweenx909_TweenX.get_rules())();
	while(tmp.hasNext()) {
		var r = tmp.next();
		if(js_Boot.__instanceof(_to,r.inputClass)) {
			return r.defaultFrom(value,_to,tween);
		}
	}
	var eh = tween;
	var o = _to;
	throw new js__$Boot_HaxeError(eh.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
};
var tweenxcore_structure_Timeline = function() {
	this.dataArray = [];
	this.weightArray = [];
	this.totalWeight = 0;
};
tweenxcore_structure_Timeline.__name__ = ["tweenxcore","structure","Timeline"];
tweenxcore_structure_Timeline.prototype = {
	get_length: function() {
		return this.dataArray.length;
	}
	,add: function(data,weight) {
		if(weight == null) {
			weight = 1.0;
		}
		if(weight <= 0) {
			throw new js__$Boot_HaxeError("weight must be positive number");
		}
		if(this.dataArray.length == 0) {
			this.totalWeight = weight;
		} else {
			this.weightArray.push(this.totalWeight);
			this.totalWeight += weight;
		}
		this.dataArray.push(data);
		return this;
	}
	,search: function(rate,boundaryMode) {
		if(boundaryMode == null) {
			boundaryMode = 1;
		}
		if(this.dataArray.length == 0) {
			throw new js__$Boot_HaxeError("timeline is not initialized");
		}
		var sortedValues = this.weightArray;
		var value = rate * this.totalWeight;
		var min = 0;
		var max = sortedValues.length;
		if(boundaryMode == 0) {
			while(true) {
				var next = ((max - min) / 2 | 0) + min;
				if(sortedValues[next] <= value) {
					min = next + 1;
				} else {
					max = next;
				}
				if(min == max) {
					break;
				}
			}
		} else {
			while(true) {
				var next1 = ((max - min) / 2 | 0) + min;
				if(sortedValues[next1] < value) {
					min = next1 + 1;
				} else {
					max = next1;
				}
				if(min == max) {
					break;
				}
			}
		}
		var searchResult = min;
		return new tweenxcore_structure_TimelineSearchResult(this.dataArray[searchResult],searchResult,searchResult == 0?0:this.weightArray[searchResult - 1] / this.totalWeight,searchResult == this.dataArray.length - 1?1:this.weightArray[searchResult] / this.totalWeight);
	}
	,dataAt: function(index) {
		if(this.dataArray.length == 0) {
			throw new js__$Boot_HaxeError("timeline is not initialized");
		}
		return this.dataArray[index];
	}
	,rangeLeft: function(index) {
		if(index == 0) {
			return 0.0;
		}
		return this.weightArray[index - 1] / this.totalWeight;
	}
	,rangeRight: function(index) {
		if(index == this.dataArray.length) {
			return 1.0;
		}
		return this.weightArray[index] / this.totalWeight;
	}
	,__class__: tweenxcore_structure_Timeline
	,__properties__: {get_length:"get_length"}
};
var tweenx909_rule_TimelineRuleX = function() { };
tweenx909_rule_TimelineRuleX.__name__ = ["tweenx909","rule","TimelineRuleX"];
tweenx909_rule_TimelineRuleX.calc = function(_from,_to,t1,t2,tween) {
	return _to.search(t1).data;
};
tweenx909_rule_TimelineRuleX.defaultFrom = function(value,_to,tween) {
	return null;
};
var tweenxcore_color_IColor = function() { };
tweenxcore_color_IColor.__name__ = ["tweenxcore","color","IColor"];
tweenxcore_color_IColor.prototype = {
	__class__: tweenxcore_color_IColor
};
var tweenxcore_color_RgbColor = function(red,green,blue) {
	this.r = red;
	this.g = green;
	this.b = blue;
};
tweenxcore_color_RgbColor.__name__ = ["tweenxcore","color","RgbColor"];
tweenxcore_color_RgbColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_RgbColor.rgbToInt = function(r,g,b) {
	if(r <= 0.0) {
		r = 0.0;
	} else if(1.0 <= r) {
		r = 1.0;
	} else {
		r = r;
	}
	if(g <= 0.0) {
		g = 0.0;
	} else if(1.0 <= g) {
		g = 1.0;
	} else {
		g = g;
	}
	if(b <= 0.0) {
		b = 0.0;
	} else if(1.0 <= b) {
		b = 1.0;
	} else {
		b = b;
	}
	return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
};
tweenxcore_color_RgbColor.of = function(color) {
	return new tweenxcore_color_RgbColor((color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255);
};
tweenxcore_color_RgbColor.fromHsv = function(h,s,v) {
	h = (h - Math.floor(h)) * 6;
	var hi = Math.floor(h);
	if(s <= 0.0) {
		s = 0.0;
	} else if(1.0 <= s) {
		s = 1.0;
	} else {
		s = s;
	}
	if(v <= 0.0) {
		v = 0.0;
	} else if(1.0 <= v) {
		v = 1.0;
	} else {
		v = v;
	}
	var m = v * (1 - s);
	var f = h - hi;
	var r = 0.0;
	var g = 0.0;
	var b = 0.0;
	switch(hi) {
	case 0:
		r = v;
		g = v * (1 - s * (1 - f));
		b = m;
		break;
	case 1:
		r = v * (1 - s * f);
		g = v;
		b = m;
		break;
	case 2:
		r = m;
		g = v;
		b = v * (1 - s * (1 - f));
		break;
	case 3:
		r = m;
		g = v * (1 - s * f);
		b = v;
		break;
	case 4:
		r = v * (1 - s * (1 - f));
		g = m;
		b = v;
		break;
	case 5:
		r = v;
		g = m;
		b = v * (1 - s * f);
		break;
	}
	return new tweenxcore_color_RgbColor(r,g,b);
};
tweenxcore_color_RgbColor.prototype = {
	getRed: function() {
		return this.r;
	}
	,getGreen: function() {
		return this.g;
	}
	,getBlue: function() {
		return this.b;
	}
	,getHue: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).h;
	}
	,getSaturation: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).s;
	}
	,getBrightness: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b).v;
	}
	,toRgb: function() {
		return new tweenxcore_color_RgbColor(this.r,this.g,this.b);
	}
	,toHsv: function() {
		return tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b);
	}
	,toRgbWithAlpha: function(alpha) {
		return new tweenxcore_color_ArgbColor(alpha,this.r,this.g,this.b);
	}
	,toHsvWithAlpha: function(alpha) {
		var _this = tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b,0);
		return new tweenxcore_color_AhsvColor(alpha,_this.h,_this.s,_this.v);
	}
	,toRgbInt: function() {
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		} else {
			r = r;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		} else {
			g = g;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		} else {
			b = b;
		}
		return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
	}
	,toRgbHexString: function() {
		var r = this.r;
		var g = this.g;
		var b = this.b;
		if(r <= 0.0) {
			r = 0.0;
		} else if(1.0 <= r) {
			r = 1.0;
		} else {
			r = r;
		}
		if(g <= 0.0) {
			g = 0.0;
		} else if(1.0 <= g) {
			g = 1.0;
		} else {
			g = g;
		}
		if(b <= 0.0) {
			b = 0.0;
		} else if(1.0 <= b) {
			b = 1.0;
		} else {
			b = b;
		}
		return StringTools.hex((r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0),6);
	}
	,toRgbCssString: function() {
		return "rgb(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + ")";
	}
	,__class__: tweenxcore_color_RgbColor
};
var tweenxcore_color_ITransparentColor = function() { };
tweenxcore_color_ITransparentColor.__name__ = ["tweenxcore","color","ITransparentColor"];
tweenxcore_color_ITransparentColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_ITransparentColor.prototype = {
	__class__: tweenxcore_color_ITransparentColor
};
var tweenxcore_color_ArgbColor = function(alpha,red,green,blue) {
	this.a = alpha;
	tweenxcore_color_RgbColor.call(this,red,green,blue);
};
tweenxcore_color_ArgbColor.__name__ = ["tweenxcore","color","ArgbColor"];
tweenxcore_color_ArgbColor.__interfaces__ = [tweenxcore_color_ITransparentColor];
tweenxcore_color_ArgbColor.argbToInt = function(a,r,g,b) {
	var tmp = ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24;
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r) {
		r1 = 1.0;
	} else {
		r1 = r;
	}
	if(g <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g) {
		g1 = 1.0;
	} else {
		g1 = g;
	}
	if(b <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b) {
		b1 = 1.0;
	} else {
		b1 = b;
	}
	return tmp | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0));
};
tweenxcore_color_ArgbColor.of = function(color) {
	return new tweenxcore_color_ArgbColor((color >>> 24 & 255) / 255,(color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255);
};
tweenxcore_color_ArgbColor.fromAhsv = function(a,h,s,v,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var _this = tweenxcore_color_RgbColor.fromHsv(h,s,v);
	return new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
};
tweenxcore_color_ArgbColor.__super__ = tweenxcore_color_RgbColor;
tweenxcore_color_ArgbColor.prototype = $extend(tweenxcore_color_RgbColor.prototype,{
	getAlpha: function() {
		return this.a;
	}
	,toArgb: function() {
		return new tweenxcore_color_ArgbColor(this.a,this.r,this.g,this.b);
	}
	,toAhsv: function() {
		var a = this.a;
		var _this = tweenxcore_color_HsvColor.fromRgb(this.r,this.g,this.b,0);
		return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
	}
	,toArgbInt: function() {
		var a = this.a;
		var r = this.r;
		var g = this.g;
		var b = this.b;
		var tmp = ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24;
		var r1 = r;
		var g1 = g;
		var b1 = b;
		if(r <= 0.0) {
			r1 = 0.0;
		} else if(1.0 <= r) {
			r1 = 1.0;
		} else {
			r1 = r;
		}
		if(g <= 0.0) {
			g1 = 0.0;
		} else if(1.0 <= g) {
			g1 = 1.0;
		} else {
			g1 = g;
		}
		if(b <= 0.0) {
			b1 = 0.0;
		} else if(1.0 <= b) {
			b1 = 1.0;
		} else {
			b1 = b;
		}
		return tmp | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0));
	}
	,toArgbHexString: function() {
		var a = this.a;
		var r = this.r;
		var g = this.g;
		var b = this.b;
		var tmp = ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24;
		var r1 = r;
		var g1 = g;
		var b1 = b;
		if(r <= 0.0) {
			r1 = 0.0;
		} else if(1.0 <= r) {
			r1 = 1.0;
		} else {
			r1 = r;
		}
		if(g <= 0.0) {
			g1 = 0.0;
		} else if(1.0 <= g) {
			g1 = 1.0;
		} else {
			g1 = g;
		}
		if(b <= 0.0) {
			b1 = 0.0;
		} else if(1.0 <= b) {
			b1 = 1.0;
		} else {
			b1 = b;
		}
		return StringTools.hex(tmp | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0)),8);
	}
	,toRgbaCssString: function() {
		return "rgba(" + (this.r * 255 | 0) + "," + (this.g * 255 | 0) + "," + (this.b * 255 | 0) + "," + this.a + ")";
	}
	,__class__: tweenxcore_color_ArgbColor
});
var tweenx909_rule_ArgbRuleX = function() { };
tweenx909_rule_ArgbRuleX.__name__ = ["tweenx909","rule","ArgbRuleX"];
tweenx909_rule_ArgbRuleX.calc = function(_from,_to,t1,t2,tween) {
	var a = _from.a * t2 + _to.a * t1;
	var r = _from.r * t2 + _to.r * t1;
	var g = _from.g * t2 + _to.g * t1;
	var b = _from.b * t2 + _to.b * t1;
	var tmp = ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24;
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r) {
		r1 = 1.0;
	} else {
		r1 = r;
	}
	if(g <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g) {
		g1 = 1.0;
	} else {
		g1 = g;
	}
	if(b <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b) {
		b1 = 1.0;
	} else {
		b1 = b;
	}
	return tmp | ((r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0));
};
tweenx909_rule_ArgbRuleX.defaultFrom = function(value,_to,tween) {
	return new tweenxcore_color_ArgbColor((value >>> 24 & 255) / 255,(value >> 16 & 255) / 255,(value >> 8 & 255) / 255,(value & 255) / 255);
};
var tweenxcore_color_HsvColor = function(hue,saturation,value) {
	this.h = hue;
	this.s = saturation;
	this.v = value;
};
tweenxcore_color_HsvColor.__name__ = ["tweenxcore","color","HsvColor"];
tweenxcore_color_HsvColor.__interfaces__ = [tweenxcore_color_IColor];
tweenxcore_color_HsvColor.hsvToRgbInt = function(h,s,v) {
	h = (h - Math.floor(h)) * 6;
	var hi = Math.floor(h);
	if(s <= 0.0) {
		s = 0.0;
	} else if(1.0 <= s) {
		s = 1.0;
	} else {
		s = s;
	}
	if(v <= 0.0) {
		v = 0.0;
	} else if(1.0 <= v) {
		v = 1.0;
	} else {
		v = v;
	}
	var m = v * (1 - s);
	var f = h - hi;
	var r = 0.0;
	var g = 0.0;
	var b = 0.0;
	switch(hi) {
	case 0:
		r = v;
		g = v * (1 - s * (1 - f));
		b = m;
		break;
	case 1:
		r = v * (1 - s * f);
		g = v;
		b = m;
		break;
	case 2:
		r = m;
		g = v;
		b = v * (1 - s * (1 - f));
		break;
	case 3:
		r = m;
		g = v * (1 - s * f);
		b = v;
		break;
	case 4:
		r = v * (1 - s * (1 - f));
		g = m;
		b = v;
		break;
	case 5:
		r = v;
		g = m;
		b = v * (1 - s * f);
		break;
	}
	return (r * 255 | 0) << 16 | (g * 255 | 0) << 8 | (b * 255 | 0);
};
tweenxcore_color_HsvColor.of = function(color,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	return tweenxcore_color_HsvColor.fromRgb((color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255,hueIndex);
};
tweenxcore_color_HsvColor.fromRgb = function(r,g,b,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var max;
	var min;
	var diff;
	var h;
	if(r < g) {
		if(g < b) {
			max = b;
			var tmp = r - g;
			diff = b - r;
			h = (4 + tmp / diff) / 6;
		} else {
			max = g;
			if(r < b) {
				min = r;
			} else {
				min = b;
			}
			var tmp1 = b - r;
			diff = g - min;
			h = (2 + tmp1 / diff) / 6;
		}
	} else if(r < b) {
		max = b;
		var tmp2 = r - g;
		diff = b - g;
		h = (4 + tmp2 / diff) / 6;
	} else {
		max = r;
		if(g < b) {
			min = g;
		} else {
			min = b;
		}
		var tmp3 = g - b;
		diff = r - min;
		h = tmp3 / diff / 6;
	}
	if(h < 0) {
		++h;
	}
	var s = diff / max;
	if(isNaN(h)) {
		h = 0;
	}
	if(isNaN(s)) {
		s = 0;
	}
	return new tweenxcore_color_HsvColor(h + hueIndex,s,max);
};
tweenxcore_color_HsvColor.prototype = {
	getRed: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).r;
	}
	,getGreen: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).g;
	}
	,getBlue: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v).b;
	}
	,getHue: function() {
		return this.h;
	}
	,getSaturation: function() {
		return this.s;
	}
	,getBrightness: function() {
		return this.v;
	}
	,toRgb: function() {
		return tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
	}
	,toHsv: function() {
		return new tweenxcore_color_HsvColor(this.h,this.s,this.v);
	}
	,toHsvWithAlpha: function(alpha) {
		return new tweenxcore_color_AhsvColor(alpha,this.h,this.s,this.v);
	}
	,toRgbWithAlpha: function(alpha) {
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return new tweenxcore_color_ArgbColor(alpha,_this.r,_this.g,_this.b);
	}
	,toRgbInt: function() {
		return tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v);
	}
	,toRgbHexString: function() {
		return StringTools.hex(tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v),6);
	}
	,toRgbCssString: function() {
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return "rgb(" + (_this.r * 255 | 0) + "," + (_this.g * 255 | 0) + "," + (_this.b * 255 | 0) + ")";
	}
	,__class__: tweenxcore_color_HsvColor
};
var tweenxcore_color_AhsvColor = function(alpha,hue,saturation,value) {
	this.a = alpha;
	tweenxcore_color_HsvColor.call(this,hue,saturation,value);
};
tweenxcore_color_AhsvColor.__name__ = ["tweenxcore","color","AhsvColor"];
tweenxcore_color_AhsvColor.__interfaces__ = [tweenxcore_color_ITransparentColor];
tweenxcore_color_AhsvColor.ahsvToArgbInt = function(a,h,s,v) {
	return ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(h,s,v);
};
tweenxcore_color_AhsvColor.of = function(color,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var a = (color >>> 24 & 255) / 255;
	var color1 = color & 16777215;
	var _this = tweenxcore_color_HsvColor.fromRgb((color1 >> 16 & 255) / 255,(color1 >> 8 & 255) / 255,(color1 & 255) / 255,hueIndex);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
tweenxcore_color_AhsvColor.fromArgb = function(a,r,g,b,hueIndex) {
	if(hueIndex == null) {
		hueIndex = 0;
	}
	var _this = tweenxcore_color_HsvColor.fromRgb(r,g,b,hueIndex);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
tweenxcore_color_AhsvColor.__super__ = tweenxcore_color_HsvColor;
tweenxcore_color_AhsvColor.prototype = $extend(tweenxcore_color_HsvColor.prototype,{
	getAlpha: function() {
		return this.a;
	}
	,toArgb: function() {
		var a = this.a;
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		return new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
	}
	,toAhsv: function() {
		return new tweenxcore_color_AhsvColor(this.a,this.h,this.s,this.v);
	}
	,toArgbInt: function() {
		var a = this.a;
		return ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v);
	}
	,toArgbHexString: function() {
		var a = this.a;
		return StringTools.hex(((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(this.h,this.s,this.v),8);
	}
	,toRgbaCssString: function() {
		var a = this.a;
		var _this = tweenxcore_color_RgbColor.fromHsv(this.h,this.s,this.v);
		var _this1 = new tweenxcore_color_ArgbColor(a,_this.r,_this.g,_this.b);
		return "rgba(" + (_this1.r * 255 | 0) + "," + (_this1.g * 255 | 0) + "," + (_this1.b * 255 | 0) + "," + _this1.a + ")";
	}
	,__class__: tweenxcore_color_AhsvColor
});
var tweenx909_rule_AhsvRuleX = function() { };
tweenx909_rule_AhsvRuleX.__name__ = ["tweenx909","rule","AhsvRuleX"];
tweenx909_rule_AhsvRuleX.calc = function(_from,_to,t1,t2,tween) {
	var a = _from.a * t2 + _to.a * t1;
	return ((a <= 0.0?0.0:1.0 <= a?1.0:a) * 255 | 0) << 24 | tweenxcore_color_HsvColor.hsvToRgbInt(_from.h * t2 + _to.h * t1,_from.s * t2 + _to.s * t1,_from.v * t2 + _to.v * t1);
};
tweenx909_rule_AhsvRuleX.defaultFrom = function(value,_to,tween) {
	var a = (value >>> 24 & 255) / 255;
	var color = value & 16777215;
	var _this = tweenxcore_color_HsvColor.fromRgb((color >> 16 & 255) / 255,(color >> 8 & 255) / 255,(color & 255) / 255,0);
	return new tweenxcore_color_AhsvColor(a,_this.h,_this.s,_this.v);
};
var tweenx909_rule_RgbRuleX = function() { };
tweenx909_rule_RgbRuleX.__name__ = ["tweenx909","rule","RgbRuleX"];
tweenx909_rule_RgbRuleX.calc = function(_from,_to,t1,t2,tween) {
	var r = _from.r * t2 + _to.r * t1;
	var g = _from.g * t2 + _to.g * t1;
	var b = _from.b * t2 + _to.b * t1;
	var r1 = r;
	var g1 = g;
	var b1 = b;
	if(r <= 0.0) {
		r1 = 0.0;
	} else if(1.0 <= r) {
		r1 = 1.0;
	} else {
		r1 = r;
	}
	if(g <= 0.0) {
		g1 = 0.0;
	} else if(1.0 <= g) {
		g1 = 1.0;
	} else {
		g1 = g;
	}
	if(b <= 0.0) {
		b1 = 0.0;
	} else if(1.0 <= b) {
		b1 = 1.0;
	} else {
		b1 = b;
	}
	return (r1 * 255 | 0) << 16 | (g1 * 255 | 0) << 8 | (b1 * 255 | 0);
};
tweenx909_rule_RgbRuleX.defaultFrom = function(value,_to,tween) {
	return new tweenxcore_color_RgbColor((value >> 16 & 255) / 255,(value >> 8 & 255) / 255,(value & 255) / 255);
};
var tweenx909_rule_HsvRuleX = function() { };
tweenx909_rule_HsvRuleX.__name__ = ["tweenx909","rule","HsvRuleX"];
tweenx909_rule_HsvRuleX.calc = function(_from,_to,t1,t2,tween) {
	return tweenxcore_color_HsvColor.hsvToRgbInt(_from.h * t2 + _to.h * t1,_from.s * t2 + _to.s * t1,_from.v * t2 + _to.v * t1);
};
tweenx909_rule_HsvRuleX.defaultFrom = function(value,_to,tween) {
	return tweenxcore_color_HsvColor.fromRgb((value >> 16 & 255) / 255,(value >> 8 & 255) / 255,(value & 255) / 255,0);
};
var tweenx909_rule_QuakeX = function(value,scale,ease) {
	this.value = value;
	this.scale = scale;
	if(ease == null) {
		this.ease = tweenxcore_Easing.warpOut;
	} else {
		this.ease = ease;
	}
};
tweenx909_rule_QuakeX.__name__ = ["tweenx909","rule","QuakeX"];
tweenx909_rule_QuakeX.prototype = {
	__class__: tweenx909_rule_QuakeX
};
var tweenx909_rule_QuakeRuleX = function() { };
tweenx909_rule_QuakeRuleX.__name__ = ["tweenx909","rule","QuakeRuleX"];
tweenx909_rule_QuakeRuleX.calc = function(_from,_to,t1,t2,tween) {
	var p = t1 < 0.5?_from.ease(t1 * 2):_to.ease(t2 * 2);
	return _from.value * t2 + _to.value * t1 + p * (Math.random() * 2 - 1) * (_from.scale * t2 + _to.scale * t1);
};
tweenx909_rule_QuakeRuleX.defaultFrom = function(value,_to,tween) {
	return new tweenx909_rule_QuakeX(value,_to.scale,_to.ease);
};
var tweenx909_advanced_UpdateModeX = { __ename__ : true, __constructs__ : ["MANUAL","TIME"] };
tweenx909_advanced_UpdateModeX.MANUAL = ["MANUAL",0];
tweenx909_advanced_UpdateModeX.MANUAL.__enum__ = tweenx909_advanced_UpdateModeX;
tweenx909_advanced_UpdateModeX.TIME = function(frameRate) { var $x = ["TIME",1,frameRate]; $x.__enum__ = tweenx909_advanced_UpdateModeX; return $x; };
var tweenx909_TweenX = function(type,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	this.timeScale = 1;
	this._skip = null;
	this._currentTime = 0;
	tweenx909_advanced_CommandX.call(this,tweenx909_advanced_CommandTypeX.TWEEN(this),posInfos);
	this._type = type;
	this._currentTime = 0;
	if(type[1] == 0) {
		var g = type[2];
		this._easeIsDefault = false;
		this._ease = ease == null?tweenxcore_Easing.linear:ease;
	} else {
		this._ease = (this._easeIsDefault = ease == null)?tweenx909_TweenX.defaultEase:ease;
	}
	this._time = (this._timeIsDefault = time == null)?tweenx909_TweenX.defaultTime:time;
	this._delay = (this._delayIsDefault = delay == null)?tweenx909_TweenX.defaultDelay:delay;
	this._interval = (this._intervalIsDefault = interval == null)?tweenx909_TweenX.defaultInterval:interval;
	this._repeat = (this._repeatIsDefault = repeat == null)?tweenx909_TweenX.defaultRepeat:repeat;
	this._yoyo = (this._yoyoIsDefault = yoyo == null)?tweenx909_TweenX.defaultYoyo:yoyo;
	this._zigzag = (this._zigzagIsDefault = zigzag == null)?tweenx909_TweenX.defaultZigZag:zigzag;
	this._autoPlay = (this._autoPlayIsDefault = autoPlay == null)?tweenx909_TweenX.defaultAutoPlay:autoPlay;
	this._rest = 0;
	this._eventListeners = [];
	this.id = tweenx909_TweenX.idCounter++;
	tweenx909_TweenX._addedTweens.push(this);
	if(!tweenx909_TweenX.managerInited) {
		tweenx909_TweenX.managerInited = true;
		tweenx909_TweenX.stopUpdater();
		var _g = tweenx909_TweenX.updateMode;
		switch(_g[1]) {
		case 0:
			break;
		case 1:
			tweenx909_TweenX.prevTime = new Date().getTime();
			var t = Math.round(1000 / _g[2]);
			if(tweenx909_TweenX._timer != null) {
				tweenx909_TweenX._timer.stop();
			}
			tweenx909_TweenX._timer = new haxe_Timer(t);
			tweenx909_TweenX._timer.run = tweenx909_TweenX.mainLoop;
			break;
		}
	}
};
tweenx909_TweenX.__name__ = ["tweenx909","TweenX"];
tweenx909_TweenX.__properties__ = {set_updateMode:"set_updateMode",get_rules:"get_rules",get_tweens:"get_tweens"}
tweenx909_TweenX.get_tweens = function() {
	return tweenx909_TweenX._tweens;
};
tweenx909_TweenX.get_rules = function() {
	return tweenx909_TweenX._rules;
};
tweenx909_TweenX.dumpDefaults = function() {
	return new tweenx909_advanced_DefaultsX().dump();
};
tweenx909_TweenX.setDefaults = function(defaults) {
	defaults.apply();
};
tweenx909_TweenX.initDefaults = function() {
	new tweenx909_advanced_DefaultsX().apply();
};
tweenx909_TweenX.set_updateMode = function(value) {
	tweenx909_TweenX.updateMode = value;
	tweenx909_TweenX.managerInited = true;
	tweenx909_TweenX.stopUpdater();
	var _g = tweenx909_TweenX.updateMode;
	switch(_g[1]) {
	case 0:
		break;
	case 1:
		tweenx909_TweenX.prevTime = new Date().getTime();
		var t = Math.round(1000 / _g[2]);
		if(tweenx909_TweenX._timer != null) {
			tweenx909_TweenX._timer.stop();
		}
		tweenx909_TweenX._timer = new haxe_Timer(t);
		tweenx909_TweenX._timer.run = tweenx909_TweenX.mainLoop;
		break;
	}
	return value;
};
tweenx909_TweenX.initManager = function() {
	tweenx909_TweenX.managerInited = true;
	tweenx909_TweenX.stopUpdater();
	var _g = tweenx909_TweenX.updateMode;
	switch(_g[1]) {
	case 0:
		break;
	case 1:
		tweenx909_TweenX.prevTime = new Date().getTime();
		var t = Math.round(1000 / _g[2]);
		if(tweenx909_TweenX._timer != null) {
			tweenx909_TweenX._timer.stop();
		}
		tweenx909_TweenX._timer = new haxe_Timer(t);
		tweenx909_TweenX._timer.run = tweenx909_TweenX.mainLoop;
		break;
	}
};
tweenx909_TweenX.mainLoop = function() {
	var _g = tweenx909_TweenX.updateMode;
	switch(_g[1]) {
	case 0:
		throw new js__$Boot_HaxeError("invalid auto update");
		break;
	case 1:
		var f = _g[2];
		tweenx909_TweenX.manualUpdate((new Date().getTime() - tweenx909_TweenX.prevTime) / 1000);
		tweenx909_TweenX.prevTime = new Date().getTime();
		break;
	}
};
tweenx909_TweenX.stopUpdater = function() {
	if(tweenx909_TweenX._timer != null) {
		tweenx909_TweenX._timer.stop();
		tweenx909_TweenX._timer = null;
	}
};
tweenx909_TweenX.manualUpdate = function(time) {
	tweenx909_TweenX.initTweens();
	var l = tweenx909_TweenX._tweens.length;
	var i = 0;
	while(i < l) {
		var t = tweenx909_TweenX._tweens[i++];
		t._update(time * t.timeScale * tweenx909_TweenX.topLevelTimeScale);
		if(!t.playing) {
			tweenx909_TweenX._tweens.splice(--i,1);
			--l;
		}
	}
	tweenx909_TweenX._resetLog();
};
tweenx909_TweenX.initTweens = function() {
	var _g = 0;
	var _g1 = tweenx909_TweenX._addedTweens;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		t._init();
	}
	tweenx909_TweenX._addedTweens.splice(0,tweenx909_TweenX._addedTweens.length);
};
tweenx909_TweenX.clear = function() {
	var _g = 0;
	var _g1 = tweenx909_TweenX._addedTweens;
	while(_g < _g1.length) {
		var t = _g1[_g];
		++_g;
		t._autoPlay = false;
	}
	tweenx909_TweenX.stopAll(tweenx909_TweenX.get_tweens());
};
tweenx909_TweenX.addRule = function(rule) {
	var i = 0;
	var l = tweenx909_TweenX._rules.length;
	while(i < l) if(tweenx909_TweenX._rules[i++].inputClass == rule.inputClass) {
		tweenx909_TweenX._rules.splice(i--,1);
		--l;
	}
	tweenx909_TweenX._rules.push(rule);
};
tweenx909_TweenX.addRules = function(rules) {
	var tmp = $iterator(rules)();
	while(tmp.hasNext()) tweenx909_TweenX.addRule(tmp.next());
};
tweenx909_TweenX.from = function(target,_to,delay,repeat,interval,autoPlay,posInfos) {
	if(_to == null) {
		_to = { };
	}
	if(!tweenx909_TweenX.isIterable(target)) {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.FROM_TO(target,{ },_to),0,tweenxcore_Easing.linear,delay,repeat,false,false,interval,autoPlay,posInfos);
	} else {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.ARRAY(target,[{ }],[_to]),0,tweenxcore_Easing.linear,delay,repeat,false,false,interval,autoPlay,posInfos);
	}
};
tweenx909_TweenX.to = function(target,_to,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	if(_to == null) {
		_to = { };
	}
	if(!tweenx909_TweenX.isIterable(target)) {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.FROM_TO(target,{ },_to),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
	} else {
		return new tweenx909_advanced_StandardTweenX(tweenx909_advanced_TweenTypeX.ARRAY(target,[{ }],[_to]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
	}
};
tweenx909_TweenX.tweenFunc = function(func,_from,_to,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,Lambda.array(_from),Lambda.array(_to)),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc1 = function(func,from1,to1,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1],[to1]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc2 = function(func,from1,from2,to1,to2,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1,from2],[to1,to2]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc3 = function(func,from1,from2,from3,to1,to2,to3,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1,from2,from3],[to1,to2,to3]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.tweenFunc4 = function(func,from1,from2,from3,from4,to1,to2,to3,to4,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.FUNC(func,[from1,from2,from3,from4],[to1,to2,to3,to4]),time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_TweenX.func = function(func,delay,repeat,interval,posInfos) {
	return new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.CALL(func),0,tweenxcore_Easing.linear,delay,repeat,false,false,interval,false,posInfos);
};
tweenx909_TweenX.playAll = function(tweens) {
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var _g = tmp.next().command;
		switch(_g[1]) {
		case 0:
			_g[2].play();
			break;
		case 1:
			break;
		}
	}
};
tweenx909_TweenX.stopAll = function(tweens) {
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var _g = tmp.next().command;
		switch(_g[1]) {
		case 0:
			_g[2].stop();
			break;
		case 1:
			break;
		}
	}
};
tweenx909_TweenX.gotoAll = function(tweens,time,andPlay) {
	if(andPlay == null) {
		andPlay = false;
	}
	if(time == null) {
		time = 0;
	}
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var _g = tmp.next().command;
		switch(_g[1]) {
		case 0:
			_g[2]["goto"](time,andPlay);
			break;
		case 1:
			break;
		}
	}
};
tweenx909_TweenX.updateAll = function(tweens,time) {
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var _g = tmp.next().command;
		switch(_g[1]) {
		case 0:
			var o = _g[2];
			if(!o._inited) {
				o._init();
			}
			o.update(time);
			break;
		case 1:
			break;
		}
	}
};
tweenx909_TweenX.serial = function(tweens,defaults,posInfos) {
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,tweenx909_advanced__$GroupX_GroupTypeX.SERIAL,defaults)),null,null,null,null,null,null,null,null,posInfos);
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var t = tmp.next();
		if(t == null) {
			continue;
		}
		var _g = t.command;
		if(_g[1] == 0) {
			var o = _g[2];
			if(o._inited) {
				throw new js__$Boot_HaxeError(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX.lag = function(tweens,delay,defaults,posInfos) {
	if(delay == null) {
		delay = 0.1;
	}
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,tweenx909_advanced__$GroupX_GroupTypeX.LAG(delay),defaults)),null,null,null,null,null,null,null,null,posInfos);
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var t = tmp.next();
		if(t == null) {
			continue;
		}
		var _g = t.command;
		if(_g[1] == 0) {
			var o = _g[2];
			if(o._inited) {
				throw new js__$Boot_HaxeError(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX.parallel = function(tweens,defaults,posInfos) {
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,tweenx909_advanced__$GroupX_GroupTypeX.LAG(0),defaults)),null,null,null,null,null,null,null,null,posInfos);
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var t = tmp.next();
		if(t == null) {
			continue;
		}
		var _g = t.command;
		if(_g[1] == 0) {
			var o = _g[2];
			if(o._inited) {
				throw new js__$Boot_HaxeError(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX.wait = function(delay,posInfos) {
	if(delay == null) {
		delay = 0.1;
	}
	return new tweenx909_advanced_CommandX(tweenx909_advanced_CommandTypeX.WAIT(delay),posInfos);
};
tweenx909_TweenX._group = function(tweens,type,defaults,posInfos) {
	var parent = new tweenx909_TweenX(tweenx909_advanced_TweenTypeX.GROUP(new tweenx909_advanced_GroupX(tweens,type,defaults)),null,null,null,null,null,null,null,null,posInfos);
	var tmp = $iterator(tweens)();
	while(tmp.hasNext()) {
		var t = tmp.next();
		if(t == null) {
			continue;
		}
		var _g = t.command;
		if(_g[1] == 0) {
			var o = _g[2];
			if(o._inited) {
				throw new js__$Boot_HaxeError(o.error("Can't serialize initialized TweenCommandX"));
			}
			o._autoPlay = false;
			o._parent = parent;
		}
	}
	return parent;
};
tweenx909_TweenX._lock = function(o) {
	if(o._inited) {
		throw new js__$Boot_HaxeError(o.error("Can't serialize initialized TweenCommandX"));
	}
	o._autoPlay = false;
};
tweenx909_TweenX.getTime = function() {
	return new Date().getTime();
};
tweenx909_TweenX.setInterval = function(f,t) {
	if(tweenx909_TweenX._timer != null) {
		tweenx909_TweenX._timer.stop();
	}
	tweenx909_TweenX._timer = new haxe_Timer(t);
	tweenx909_TweenX._timer.run = f;
};
tweenx909_TweenX.fields = function(t) {
	return Reflect.fields(t);
};
tweenx909_TweenX.hashObject = function(o) {
	if(tweenx909_TweenX.dictionary.h[o.__id__] != null) {
		return tweenx909_TweenX.dictionary.h[o.__id__];
	} else {
		tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
		tweenx909_TweenX.dictionary.set(o,tweenx909_TweenX._objCounter);
		return tweenx909_TweenX._objCounter;
	}
};
tweenx909_TweenX._resetLog = function() {
	tweenx909_TweenX._initLog = [];
	tweenx909_TweenX.dictionary = new haxe_ds_ObjectMap();
};
tweenx909_TweenX.field = function(o,key) {
	var tmp;
	if(o == null) {
		return null;
	} else {
		var tmp1;
		if(o.__properties__) {
			tmp = o.__properties__["get_" + key];
			tmp1 = tmp;
		} else {
			tmp1 = false;
		}
		if(tmp1) {
			return o[tmp]();
		} else {
			return o[key];
		}
	}
};
tweenx909_TweenX.setField = function(o,key,value) {
	var tmp;
	var tmp1;
	if(o.__properties__) {
		tmp = o.__properties__["set_" + key];
		tmp1 = tmp;
	} else {
		tmp1 = false;
	}
	if(tmp1) {
		o[tmp](value);
	} else {
		o[key] = value;
	}
};
tweenx909_TweenX.isIterable = function(d) {
	if(d != null) {
		if(!((d instanceof Array) && d.__enum__ == null)) {
			if(Object.prototype.hasOwnProperty.call(d,"iterator") && Reflect.isFunction($iterator(d))) {
				return $iterator(d)() != null;
			} else {
				return false;
			}
		} else {
			return true;
		}
	} else {
		return false;
	}
};
tweenx909_TweenX.eventIndex = function(type) {
	return tweenx909_TweenX.EVENT_ARRAY.indexOf(type);
};
tweenx909_TweenX.__super__ = tweenx909_advanced_CommandX;
tweenx909_TweenX.prototype = $extend(tweenx909_advanced_CommandX.prototype,{
	get_currentTime: function() {
		var t = this.get_totalTime();
		var p = this.backward?t - this._currentTime:this._currentTime;
		if(p < 0) {
			p = 0;
		}
		if(p > t) {
			p = t;
		}
		return p;
	}
	,get_singleTime: function() {
		return this._time + this._interval;
	}
	,get_totalTime: function() {
		return this._delay + this.get_singleTime() * this._repeat - this._interval + this._rest;
	}
	,set_timeScale: function(value) {
		if(this._parent != null) {
			throw new js__$Boot_HaxeError(this.error("Can't change timeScale of serialized object directly"));
		} else {
			return this.timeScale = value;
		}
	}
	,error: function(msg) {
		var p = this.definedPosInfos;
		return msg + "(Tween_" + this.id + " was generated at " + p.className + "/" + p.methodName + "() [" + p.fileName + ":" + p.lineNumber + "])";
	}
	,play: function() {
		if(this._parent != null) {
			throw new js__$Boot_HaxeError(this.error("Can't play serialized object directly"));
		}
		if(this.playing) {
			return this;
		}
		if(!this._inited) {
			this._init();
		}
		this.playing = true;
		tweenx909_TweenX._tweens.push(this);
		var listeners = this._eventListeners[0];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onPlay != null) {
			this._onPlay();
		}
		this.update(1.49011614158922645e-08);
		return this;
	}
	,stop: function() {
		if(this._parent != null) {
			throw new js__$Boot_HaxeError(this.error("Can't stop serialized object directly"));
		}
		this._stop();
		return this;
	}
	,_stop: function() {
		if(!this.playing) {
			return;
		}
		this.playing = false;
		var listeners = this._eventListeners[9];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onStop != null) {
			this._onStop();
		}
	}
	,update: function(time) {
		if(this._parent != null) {
			throw new js__$Boot_HaxeError(this.error("Can't stop serialized object directly"));
		}
		this._update(time * this.timeScale * tweenx909_TweenX.topLevelTimeScale);
		return this;
	}
	,'goto': function(time,andPlay) {
		if(andPlay == null) {
			andPlay = false;
		}
		if(time == null) {
			time = 0;
		}
		if(this._parent != null) {
			throw new js__$Boot_HaxeError(this.error("Can't move serialized object directly"));
		}
		if(!this._inited) {
			this._init();
		}
		var t = time;
		if(time < 0) {
			t = 0;
		} else if(time > this._totalTime) {
			t = this._totalTime;
		}
		this._update(t - this.get_currentTime());
		if(andPlay) {
			this.play();
		}
		return this;
	}
	,_invert: function() {
		this._currentTime = this._totalTime - this._currentTime;
		if(this._repeat % 2 == 0) {
			this._odd = !this._odd;
		}
		this._inverted = !this._inverted;
		var d = this._delay;
		this._delay = this._rest;
		this._rest = d;
	}
	,_init: function() {
		if(this._inited) {
			return;
		}
		this._inited = true;
		if(tweenx909_TweenX._groupDefaults) {
			if(this._easeIsDefault) {
				this._ease = tweenx909_TweenX.defaultEase;
			}
			if(this._timeIsDefault) {
				this._time = tweenx909_TweenX.defaultTime;
			}
			if(this._delayIsDefault) {
				this._delay = tweenx909_TweenX.defaultDelay;
			}
			if(this._intervalIsDefault) {
				this._interval = tweenx909_TweenX.defaultInterval;
			}
			if(this._repeatIsDefault) {
				this._repeat = tweenx909_TweenX.defaultRepeat;
			}
			if(this._yoyoIsDefault) {
				this._yoyo = tweenx909_TweenX.defaultYoyo;
			}
			if(this._zigzagIsDefault) {
				this._zigzag = tweenx909_TweenX.defaultZigZag;
			}
			if(this._autoPlayIsDefault) {
				this._autoPlay = tweenx909_TweenX.defaultAutoPlay;
			}
		}
		if(this._repeat == 0) {
			this._repeat = 2147483646;
		}
		if(this._time < 1.49011614158922645e-08) {
			this._time = 1.49011614158922645e-08;
		}
		var ot = new Date().getTime();
		this._fastMode = true;
		var _g = this._type;
		switch(_g[1]) {
		case 0:
			this.initGroup(_g[2]);
			break;
		case 1:
			var toArr = _g[4];
			var fromArr = _g[3];
			var i = 0;
			var tmp = $iterator(_g[2])();
			while(tmp.hasNext()) {
				var target = tmp.next();
				var _from = fromArr[i];
				var _to = toArr[i];
				this._initFromTo(target,_from,_to);
				if(i == 0) {
					this._toKeys = Reflect.fields(_to);
				}
				++i;
			}
			break;
		case 2:
			var _to1 = _g[4];
			this._initFromTo(_g[2],_g[3],_to1);
			this._toKeys = Reflect.fields(_to1);
			break;
		default:
		}
		this._singleTime = this.get_singleTime();
		this._totalTime = this.get_totalTime();
		if(this._autoPlay) {
			this.play();
		}
	}
	,_initFromTo: function(target,_from,_to) {
		throw new js__$Boot_HaxeError(this.error("must be standard tween."));
	}
	,_update: function(spent) {
		if(!this._inited) {
			this._init();
		}
		if(spent == 0) {
			return;
		}
		if(this.backward) {
			spent = -spent;
		}
		if(spent < 0) {
			this._invert();
			this.backward = !this.backward;
			spent = -spent;
		}
		var _currentTime = this._currentTime;
		var _singleTime = this.get_singleTime();
		var _totalTime = this._totalTime;
		var time = this._time;
		var delay = this._delay;
		var untilRest = _totalTime - this._rest;
		var delaying = _currentTime - delay < 1.49011614158922645e-08;
		var resting = !delaying && 1.49011614158922645e-08 > untilRest - _currentTime;
		var body = _currentTime - delay;
		var repeatNum = Math.floor(body / _singleTime);
		var position = body - repeatNum * _singleTime;
		var intervending = 1.49011614158922645e-08 > time - position;
		_currentTime += spent;
		this._currentTime = _currentTime;
		position += spent;
		body += spent;
		if(_currentTime - delay < 1.49011614158922645e-08) {
			var listeners = this._eventListeners[1];
			if(listeners != null) {
				var _g = 0;
				while(_g < listeners.length) {
					var f = listeners[_g];
					++_g;
					f(this);
				}
			}
			if(this._onDelay != null) {
				this._onDelay();
			}
			return;
		} else if(delaying) {
			this._apply(0,0);
			var listeners1 = this._eventListeners[2];
			if(listeners1 != null) {
				var _g1 = 0;
				while(_g1 < listeners1.length) {
					var f1 = listeners1[_g1];
					++_g1;
					f1(this);
				}
			}
			if(this._onHead != null) {
				this._onHead();
			}
			var listeners2 = this._eventListeners[3];
			if(listeners2 != null) {
				var _g2 = 0;
				while(_g2 < listeners2.length) {
					var f2 = listeners2[_g2];
					++_g2;
					f2(this);
				}
			}
			if(this._onUpdate != null) {
				this._onUpdate();
			}
			delaying = false;
		}
		if(1.49011614158922645e-08 > untilRest - _currentTime) {
			if(!resting) {
				if(intervending) {
					var listeners3 = this._eventListeners[6];
					if(listeners3 != null) {
						var _g3 = 0;
						while(_g3 < listeners3.length) {
							var f3 = listeners3[_g3];
							++_g3;
							f3(this);
						}
					}
					if(this._onRepeat != null) {
						this._onRepeat();
					}
					this._apply(0,repeatNum);
					var listeners4 = this._eventListeners[2];
					if(listeners4 != null) {
						var _g4 = 0;
						while(_g4 < listeners4.length) {
							var f4 = listeners4[_g4];
							++_g4;
							f4(this);
						}
					}
					if(this._onHead != null) {
						this._onHead();
					}
					var listeners5 = this._eventListeners[3];
					if(listeners5 != null) {
						var _g5 = 0;
						while(_g5 < listeners5.length) {
							var f5 = listeners5[_g5];
							++_g5;
							f5(this);
						}
					}
					if(this._onUpdate != null) {
						this._onUpdate();
					}
				}
				this._apply(this._time,this._repeat - 1);
				var listeners6 = this._eventListeners[3];
				if(listeners6 != null) {
					var _g6 = 0;
					while(_g6 < listeners6.length) {
						var f6 = listeners6[_g6];
						++_g6;
						f6(this);
					}
				}
				if(this._onUpdate != null) {
					this._onUpdate();
				}
				var listeners7 = this._eventListeners[4];
				if(listeners7 != null) {
					var _g7 = 0;
					while(_g7 < listeners7.length) {
						var f7 = listeners7[_g7];
						++_g7;
						f7(this);
					}
				}
				if(this._onFoot != null) {
					this._onFoot();
				}
			}
			if(1.49011614158922645e-08 > _totalTime - _currentTime) {
				this._currentTime = this._totalTime;
				var listeners8 = this._eventListeners[8];
				if(listeners8 != null) {
					var _g8 = 0;
					while(_g8 < listeners8.length) {
						var f8 = listeners8[_g8];
						++_g8;
						f8(this);
					}
				}
				if(this._onFinish != null) {
					this._onFinish();
				}
				this._stop();
			} else {
				var listeners9 = this._eventListeners[7];
				if(listeners9 != null) {
					var _g9 = 0;
					while(_g9 < listeners9.length) {
						var f9 = listeners9[_g9];
						++_g9;
						f9(this);
					}
				}
				if(this._onRest != null) {
					this._onRest();
				}
			}
		} else {
			if(1.49011614158922645e-08 > time - position) {
				if(!intervending && repeatNum >= 0) {
					this._apply(this._time,repeatNum);
					var listeners10 = this._eventListeners[3];
					if(listeners10 != null) {
						var _g10 = 0;
						while(_g10 < listeners10.length) {
							var f10 = listeners10[_g10];
							++_g10;
							f10(this);
						}
					}
					if(this._onUpdate != null) {
						this._onUpdate();
					}
					var listeners11 = this._eventListeners[4];
					if(listeners11 != null) {
						var _g11 = 0;
						while(_g11 < listeners11.length) {
							var f11 = listeners11[_g11];
							++_g11;
							f11(this);
						}
					}
					if(this._onFoot != null) {
						this._onFoot();
					}
				}
				if(position < _singleTime) {
					var listeners12 = this._eventListeners[5];
					if(listeners12 != null) {
						var _g12 = 0;
						while(_g12 < listeners12.length) {
							var f12 = listeners12[_g12];
							++_g12;
							f12(this);
						}
					}
					if(this._onInterval != null) {
						this._onInterval();
					}
					return;
				} else {
					if(repeatNum >= 0) {
						var listeners13 = this._eventListeners[6];
						if(listeners13 != null) {
							var _g13 = 0;
							while(_g13 < listeners13.length) {
								var f13 = listeners13[_g13];
								++_g13;
								f13(this);
							}
						}
						if(this._onRepeat != null) {
							this._onRepeat();
						}
						this._apply(0,repeatNum);
						var listeners14 = this._eventListeners[2];
						if(listeners14 != null) {
							var _g14 = 0;
							while(_g14 < listeners14.length) {
								var f14 = listeners14[_g14];
								++_g14;
								f14(this);
							}
						}
						if(this._onHead != null) {
							this._onHead();
						}
						var listeners15 = this._eventListeners[3];
						if(listeners15 != null) {
							var _g15 = 0;
							while(_g15 < listeners15.length) {
								var f15 = listeners15[_g15];
								++_g15;
								f15(this);
							}
						}
						if(this._onUpdate != null) {
							this._onUpdate();
						}
					}
					repeatNum = body / _singleTime | 0;
					position = body - repeatNum * _singleTime;
					if(1.49011614158922645e-08 > time - position) {
						this._apply(this._time,repeatNum);
						var listeners16 = this._eventListeners[3];
						if(listeners16 != null) {
							var _g16 = 0;
							while(_g16 < listeners16.length) {
								var f16 = listeners16[_g16];
								++_g16;
								f16(this);
							}
						}
						if(this._onUpdate != null) {
							this._onUpdate();
						}
						var listeners17 = this._eventListeners[4];
						if(listeners17 != null) {
							var _g17 = 0;
							while(_g17 < listeners17.length) {
								var f17 = listeners17[_g17];
								++_g17;
								f17(this);
							}
						}
						if(this._onFoot != null) {
							this._onFoot();
						}
						var listeners18 = this._eventListeners[5];
						if(listeners18 != null) {
							var _g18 = 0;
							while(_g18 < listeners18.length) {
								var f18 = listeners18[_g18];
								++_g18;
								f18(this);
							}
						}
						if(this._onInterval != null) {
							this._onInterval();
						}
						return;
					}
				}
			} else if(intervending) {
				var listeners19 = this._eventListeners[6];
				if(listeners19 != null) {
					var _g19 = 0;
					while(_g19 < listeners19.length) {
						var f19 = listeners19[_g19];
						++_g19;
						f19(this);
					}
				}
				if(this._onRepeat != null) {
					this._onRepeat();
				}
				this._apply(0,repeatNum);
				var listeners20 = this._eventListeners[2];
				if(listeners20 != null) {
					var _g20 = 0;
					while(_g20 < listeners20.length) {
						var f20 = listeners20[_g20];
						++_g20;
						f20(this);
					}
				}
				if(this._onHead != null) {
					this._onHead();
				}
				var listeners21 = this._eventListeners[3];
				if(listeners21 != null) {
					var _g21 = 0;
					while(_g21 < listeners21.length) {
						var f21 = listeners21[_g21];
						++_g21;
						f21(this);
					}
				}
				if(this._onUpdate != null) {
					this._onUpdate();
				}
			}
			this._apply(position,repeatNum);
			var listeners22 = this._eventListeners[3];
			if(listeners22 != null) {
				var _g22 = 0;
				while(_g22 < listeners22.length) {
					var f22 = listeners22[_g22];
					++_g22;
					f22(this);
				}
			}
			if(this._onUpdate != null) {
				this._onUpdate();
			}
		}
	}
	,_head: function(repeatNum) {
		this._apply(0,repeatNum);
		var listeners = this._eventListeners[2];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onHead != null) {
			this._onHead();
		}
		var listeners1 = this._eventListeners[3];
		if(listeners1 != null) {
			var _g1 = 0;
			while(_g1 < listeners1.length) {
				var f1 = listeners1[_g1];
				++_g1;
				f1(this);
			}
		}
		if(this._onUpdate != null) {
			this._onUpdate();
		}
	}
	,_foot: function(repeatNum) {
		this._apply(this._time,repeatNum);
		var listeners = this._eventListeners[3];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onUpdate != null) {
			this._onUpdate();
		}
		var listeners1 = this._eventListeners[4];
		if(listeners1 != null) {
			var _g1 = 0;
			while(_g1 < listeners1.length) {
				var f1 = listeners1[_g1];
				++_g1;
				f1(this);
			}
		}
		if(this._onFoot != null) {
			this._onFoot();
		}
	}
	,_finish: function() {
		this._currentTime = this._totalTime;
		var listeners = this._eventListeners[8];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
		if(this._onFinish != null) {
			this._onFinish();
		}
		this._stop();
	}
	,_apply: function(p,repeatNum) {
		var back = repeatNum % 2 == 1;
		var t = p / this._time;
		if(this._odd) {
			back = !back;
		}
		if(this._inverted) {
			t = 1 - t;
		}
		if(back) {
			if(this._yoyo) {
				t = 1 - t;
			}
			t = this._ease(t);
			if(this._zigzag) {
				t = 1 - t;
			}
		} else {
			t = this._ease(t);
		}
		var t1 = t;
		var _g = this._type;
		switch(_g[1]) {
		case 0:
			var g = _g[2];
			var ts = g.tweens;
			var spent = (this._time * t1 - g.current) * 1.00000001;
			if(spent < 0) {
				var _g1 = 1 - ts.length;
				while(_g1 < 1) ts[-(_g1++)]._update(spent);
			} else {
				var _g11 = 0;
				var _g2 = ts.length;
				while(_g11 < _g2) ts[_g11++]._update(spent);
			}
			g.current = g.tweens[0].get_currentTime();
			break;
		case 1:
			var tos = _g[4];
			var froms = _g[3];
			var t2 = 1 - t1;
			var i = 0;
			var tmp = $iterator(_g[2])();
			while(tmp.hasNext()) {
				var target = tmp.next();
				var _to = tos[i];
				var _from = froms[i++];
				var _g3 = 0;
				var _g12 = this._toKeys;
				while(_g3 < _g12.length) {
					var key = _g12[_g3];
					++_g3;
					var tmp1;
					var tmp2;
					if(_from == null) {
						tmp2 = null;
					} else {
						var tmp3;
						if(_from.__properties__) {
							tmp1 = _from.__properties__["get_" + key];
							tmp3 = tmp1;
						} else {
							tmp3 = false;
						}
						if(tmp3) {
							tmp2 = _from[tmp1]();
						} else {
							tmp2 = _from[key];
						}
					}
					var _from1 = tmp2;
					var tmp4;
					var tmp5;
					if(_to == null) {
						tmp5 = null;
					} else {
						var tmp6;
						if(_to.__properties__) {
							tmp4 = _to.__properties__["get_" + key];
							tmp6 = tmp4;
						} else {
							tmp6 = false;
						}
						if(tmp6) {
							tmp5 = _to[tmp4]();
						} else {
							tmp5 = _to[key];
						}
					}
					var _to1 = tmp5;
					var value;
					if(typeof(_to1) == "number") {
						var d = _from1 * t2 + _to1 * t1;
						value = d;
					} else {
						var i1 = 0;
						var l = tweenx909_TweenX._rules.length;
						var f;
						var result = null;
						var ok = false;
						while(i1 < l) {
							f = tweenx909_TweenX._rules[i1++];
							if(js_Boot.__instanceof(_to1,f.inputClass)) {
								ok = true;
								result = f.calc(_from1,_to1,t1,t2,this);
								break;
							}
						}
						if(!ok) {
							var o = _to1;
							throw new js__$Boot_HaxeError(this.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
						}
						value = result;
					}
					var tmp7;
					var tmp8;
					if(target.__properties__) {
						tmp7 = target.__properties__["set_" + key];
						tmp8 = tmp7;
					} else {
						tmp8 = false;
					}
					if(tmp8) {
						target[tmp7](value);
					} else {
						target[key] = value;
					}
				}
			}
			break;
		case 2:
			var _to2 = _g[4];
			var _from2 = _g[3];
			var target1 = _g[2];
			var t21 = 1 - t1;
			if(this._fastMode) {
				var _g4 = 0;
				var _g13 = this._toKeys;
				while(_g4 < _g13.length) {
					var key1 = _g13[_g4];
					++_g4;
					var tmp9;
					var tmp10;
					if(_from2 == null) {
						tmp10 = null;
					} else {
						var tmp11;
						if(_from2.__properties__) {
							tmp9 = _from2.__properties__["get_" + key1];
							tmp11 = tmp9;
						} else {
							tmp11 = false;
						}
						if(tmp11) {
							tmp10 = _from2[tmp9]();
						} else {
							tmp10 = _from2[key1];
						}
					}
					var _from3 = tmp10;
					var tmp12;
					var tmp13;
					if(_to2 == null) {
						tmp13 = null;
					} else {
						var tmp14;
						if(_to2.__properties__) {
							tmp12 = _to2.__properties__["get_" + key1];
							tmp14 = tmp12;
						} else {
							tmp14 = false;
						}
						if(tmp14) {
							tmp13 = _to2[tmp12]();
						} else {
							tmp13 = _to2[key1];
						}
					}
					var value1 = _from3 * t21 + tmp13 * t1;
					var tmp15;
					var tmp16;
					if(target1.__properties__) {
						tmp15 = target1.__properties__["set_" + key1];
						tmp16 = tmp15;
					} else {
						tmp16 = false;
					}
					if(tmp16) {
						target1[tmp15](value1);
					} else {
						target1[key1] = value1;
					}
				}
			} else {
				var _g5 = 0;
				var _g14 = this._toKeys;
				while(_g5 < _g14.length) {
					var key2 = _g14[_g5];
					++_g5;
					var tmp17;
					var tmp18;
					if(_from2 == null) {
						tmp18 = null;
					} else {
						var tmp19;
						if(_from2.__properties__) {
							tmp17 = _from2.__properties__["get_" + key2];
							tmp19 = tmp17;
						} else {
							tmp19 = false;
						}
						if(tmp19) {
							tmp18 = _from2[tmp17]();
						} else {
							tmp18 = _from2[key2];
						}
					}
					var _from4 = tmp18;
					var tmp20;
					var tmp21;
					if(_to2 == null) {
						tmp21 = null;
					} else {
						var tmp22;
						if(_to2.__properties__) {
							tmp20 = _to2.__properties__["get_" + key2];
							tmp22 = tmp20;
						} else {
							tmp22 = false;
						}
						if(tmp22) {
							tmp21 = _to2[tmp20]();
						} else {
							tmp21 = _to2[key2];
						}
					}
					var _to3 = tmp21;
					var value2;
					if(typeof(_to3) == "number") {
						var d1 = _from4 * t21 + _to3 * t1;
						value2 = d1;
					} else {
						var i2 = 0;
						var l1 = tweenx909_TweenX._rules.length;
						var f1;
						var result1 = null;
						var ok1 = false;
						while(i2 < l1) {
							f1 = tweenx909_TweenX._rules[i2++];
							if(js_Boot.__instanceof(_to3,f1.inputClass)) {
								ok1 = true;
								result1 = f1.calc(_from4,_to3,t1,t21,this);
								break;
							}
						}
						if(!ok1) {
							var o1 = _to3;
							throw new js__$Boot_HaxeError(this.error("The tween rule for " + Type.getClassName(o1 == null?null:js_Boot.getClass(o1)) + " is not defined"));
						}
						value2 = result1;
					}
					var tmp23;
					var tmp24;
					if(target1.__properties__) {
						tmp23 = target1.__properties__["set_" + key2];
						tmp24 = tmp23;
					} else {
						tmp24 = false;
					}
					if(tmp24) {
						target1[tmp23](value2);
					} else {
						target1[key2] = value2;
					}
				}
			}
			break;
		case 3:
			var _to4 = _g[4];
			var _from5 = _g[3];
			var t22 = 1 - t1;
			var arr = [];
			var _g15 = 0;
			var _g6 = _to4.length;
			while(_g15 < _g6) {
				var i3 = _g15++;
				var _from6 = _from5[i3];
				var _to5 = _to4[i3];
				var tmp25;
				if(typeof(_to5) == "number") {
					var d2 = _from6 * t22 + _to5 * t1;
					tmp25 = d2;
				} else {
					var i4 = 0;
					var l2 = tweenx909_TweenX._rules.length;
					var f2;
					var result2 = null;
					var ok2 = false;
					while(i4 < l2) {
						f2 = tweenx909_TweenX._rules[i4++];
						if(js_Boot.__instanceof(_to5,f2.inputClass)) {
							ok2 = true;
							result2 = f2.calc(_from6,_to5,t1,t22,this);
							break;
						}
					}
					if(!ok2) {
						var o2 = _to5;
						throw new js__$Boot_HaxeError(this.error("The tween rule for " + Type.getClassName(o2 == null?null:js_Boot.getClass(o2)) + " is not defined"));
					}
					tmp25 = result2;
				}
				arr[i3] = tmp25;
			}
			_g[2].apply(null,arr);
			break;
		case 4:
			var f3 = _g[2];
			if(t1 == 1) {
				f3();
			}
			break;
		}
	}
	,_fastCalc: function(_from,_to,t1,t2) {
		return _from * t2 + _to * t1;
	}
	,_calc: function(_from,_to,t1,t2) {
		if(typeof(_to) == "number") {
			var d = _from * t2 + _to * t1;
			return d;
		} else {
			var i = 0;
			var l = tweenx909_TweenX._rules.length;
			var f;
			var result = null;
			var ok = false;
			while(i < l) {
				f = tweenx909_TweenX._rules[i++];
				if(js_Boot.__instanceof(_to,f.inputClass)) {
					ok = true;
					result = f.calc(_from,_to,t1,t2,this);
					break;
				}
			}
			if(!ok) {
				var o = _to;
				throw new js__$Boot_HaxeError(this.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
			}
			return result;
		}
	}
	,time: function(value) {
		if(value < 0) {
			throw new js__$Boot_HaxeError(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._timeIsDefault = false;
		this._time = value;
		return this;
	}
	,ease: function(value) {
		this.checkInited();
		this._easeIsDefault = false;
		this._ease = value;
		return this;
	}
	,delay: function(value) {
		if(value < 0) {
			throw new js__$Boot_HaxeError(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._delayIsDefault = false;
		this._delay = value;
		return this;
	}
	,rest: function(value) {
		if(value < 0) {
			throw new js__$Boot_HaxeError(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._rest = value;
		return this;
	}
	,interval: function(value) {
		if(value < 0) {
			throw new js__$Boot_HaxeError(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._intervalIsDefault = false;
		this._interval = value;
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = 0;
		}
		if(value < 0) {
			throw new js__$Boot_HaxeError(this.error("Can't be negative value"));
		}
		this.checkInited();
		this._repeatIsDefault = false;
		this._repeat = value;
		return this;
	}
	,yoyo: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._yoyoIsDefault = false;
		this._yoyo = value;
		return this;
	}
	,zigzag: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._zigzagIsDefault = false;
		this._zigzag = value;
		return this;
	}
	,autoPlay: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._autoPlayIsDefault = false;
		this._autoPlay = value;
		return this;
	}
	,skip: function(delay) {
		if(delay == null) {
			delay = 0;
		}
		this.checkInited();
		this._skip = delay;
		return this;
	}
	,setTimeScale: function(value) {
		if(value == null) {
			value = 0;
		}
		this.set_timeScale(value);
		return this;
	}
	,onPlay: function(handler) {
		this._onPlay = handler;
		return this;
	}
	,onStop: function(handler) {
		this._onStop = handler;
		return this;
	}
	,onDelay: function(handler) {
		this._onDelay = handler;
		return this;
	}
	,onHead: function(handler) {
		this._onHead = handler;
		return this;
	}
	,onUpdate: function(handler) {
		this._onUpdate = handler;
		return this;
	}
	,onFoot: function(handler) {
		this._onFoot = handler;
		return this;
	}
	,onRest: function(handler) {
		this._onRest = handler;
		return this;
	}
	,onInterval: function(handler) {
		this._onInterval = handler;
		return this;
	}
	,onRepeat: function(handler) {
		this._onRepeat = handler;
		return this;
	}
	,onFinish: function(handler) {
		this._onFinish = handler;
		return this;
	}
	,addEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			var arr = this._eventListeners[i] == null?this._eventListeners[i] = []:this._eventListeners[i];
			if(!Lambda.has(arr,listener)) {
				arr.push(listener);
			}
		}
		return this;
	}
	,removeEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			if(this._eventListeners[i] != null) {
				HxOverrides.remove(this._eventListeners[i],listener);
			}
		}
		return this;
	}
	,_addEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i < 0) {
			return;
		}
		var arr = this._eventListeners[i] == null?this._eventListeners[i] = []:this._eventListeners[i];
		if(!Lambda.has(arr,listener)) {
			arr.push(listener);
		}
	}
	,_removeEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i < 0) {
			return;
		}
		if(this._eventListeners[i] != null) {
			HxOverrides.remove(this._eventListeners[i],listener);
		}
	}
	,_getPosition: function(p,back) {
		var t = p / this._time;
		if(this._odd) {
			back = !back;
		}
		if(this._inverted) {
			t = 1 - t;
		}
		if(back) {
			if(this._yoyo) {
				t = 1 - t;
			}
			t = this._ease(t);
			if(this._zigzag) {
				t = 1 - t;
			}
		} else {
			t = this._ease(t);
		}
		return t;
	}
	,checkInited: function() {
		if(this._inited) {
			throw new js__$Boot_HaxeError(this.error("Can't change params after initialization"));
		}
	}
	,dispatch: function(num) {
		var listeners = this._eventListeners[num];
		if(listeners != null) {
			var _g = 0;
			while(_g < listeners.length) {
				var f = listeners[_g];
				++_g;
				f(this);
			}
		}
	}
	,initGroup: function(g) {
		var df = null;
		var gd = false;
		if(g.defaults != null) {
			df = tweenx909_TweenX.dumpDefaults();
			gd = tweenx909_TweenX._groupDefaults;
			tweenx909_TweenX._groupDefaults = true;
			tweenx909_TweenX.setDefaults(g.defaults);
			tweenx909_TweenX.defaultAutoPlay = false;
		}
		var delay = 0.0;
		var max = 0.0;
		var result = [];
		var _g = g.type;
		switch(_g[1]) {
		case 0:
			var tmp = $iterator(g.source)();
			while(tmp.hasNext()) {
				var t = tmp.next();
				if(t == null) {
					continue;
				}
				var _g1 = t.command;
				switch(_g1[1]) {
				case 0:
					var o = _g1[2];
					result.push(o);
					o._autoPlay = false;
					if(tweenx909_TweenX._groupDefaults && o._delayIsDefault) {
						o._delay = tweenx909_TweenX.defaultDelay;
					}
					o._init();
					o._delay += delay;
					o._totalTime += delay;
					var totalTime = o._totalTime;
					if(o._skip != null) {
						delay += o._skip;
					} else {
						delay = totalTime;
					}
					if(max < totalTime) {
						max = totalTime;
					}
					break;
				case 1:
					delay += _g1[2];
					break;
				}
			}
			break;
		case 1:
			var lag = _g[2];
			var tmp1 = $iterator(g.source)();
			while(tmp1.hasNext()) {
				var t1 = tmp1.next();
				if(t1 == null) {
					continue;
				}
				var _g2 = t1.command;
				switch(_g2[1]) {
				case 0:
					var o1 = _g2[2];
					result.push(o1);
					o1._init();
					o1._delay += delay;
					o1._totalTime += delay;
					var totalTime1 = o1._totalTime;
					delay += o1._skip != null?o1._skip:lag;
					if(max < totalTime1) {
						max = totalTime1;
					}
					break;
				case 1:
					delay += _g2[2];
					break;
				}
			}
			break;
		}
		var _g11 = 0;
		while(_g11 < result.length) {
			var t2 = result[_g11];
			++_g11;
			var diff = max - t2._totalTime;
			t2._rest += diff;
			t2._totalTime += diff;
		}
		this._time = max;
		g.tweens = result;
		g.source = null;
		if(g.defaults != null) {
			tweenx909_TweenX._groupDefaults = gd;
			tweenx909_TweenX.setDefaults(df);
		}
	}
	,__class__: tweenx909_TweenX
	,__properties__: {set_timeScale:"set_timeScale",get_totalTime:"get_totalTime",get_singleTime:"get_singleTime",get_currentTime:"get_currentTime"}
});
var tweenx909_advanced_CommandTypeX = { __ename__ : true, __constructs__ : ["TWEEN","WAIT"] };
tweenx909_advanced_CommandTypeX.TWEEN = function(tween) { var $x = ["TWEEN",0,tween]; $x.__enum__ = tweenx909_advanced_CommandTypeX; return $x; };
tweenx909_advanced_CommandTypeX.WAIT = function(delay) { var $x = ["WAIT",1,delay]; $x.__enum__ = tweenx909_advanced_CommandTypeX; return $x; };
var tweenx909_advanced_DefaultsX = function() {
	this._autoPlay = true;
	this._zigzag = false;
	this._yoyo = false;
	this._repeat = 1;
	this._interval = 0;
	this._delay = 0;
	this._time = 0.3;
	this._ease = tweenx909_TweenX.DEFAULT_EASE;
};
tweenx909_advanced_DefaultsX.__name__ = ["tweenx909","advanced","DefaultsX"];
tweenx909_advanced_DefaultsX.prototype = {
	dump: function() {
		this._time = tweenx909_TweenX.defaultTime;
		this._ease = tweenx909_TweenX.defaultEase;
		this._delay = tweenx909_TweenX.defaultDelay;
		this._interval = tweenx909_TweenX.defaultInterval;
		this._repeat = tweenx909_TweenX.defaultRepeat;
		this._yoyo = tweenx909_TweenX.defaultYoyo;
		this._zigzag = tweenx909_TweenX.defaultZigZag;
		this._autoPlay = tweenx909_TweenX.defaultAutoPlay;
		return this;
	}
	,apply: function() {
		tweenx909_TweenX.defaultTime = this._time;
		tweenx909_TweenX.defaultEase = this._ease;
		tweenx909_TweenX.defaultDelay = this._delay;
		tweenx909_TweenX.defaultInterval = this._interval;
		tweenx909_TweenX.defaultRepeat = this._repeat;
		tweenx909_TweenX.defaultYoyo = this._yoyo;
		tweenx909_TweenX.defaultZigZag = this._zigzag;
		tweenx909_TweenX.defaultAutoPlay = this._autoPlay;
	}
	,clone: function() {
		var child = new tweenx909_advanced_DefaultsX();
		child._time = this._time;
		child._ease = this._ease;
		child._delay = this._delay;
		child._interval = this._interval;
		child._repeat = this._repeat;
		child._yoyo = this._yoyo;
		child._zigzag = this._zigzag;
		child._autoPlay = this._autoPlay;
		return child;
	}
	,time: function(value) {
		this._time = value;
		return this;
	}
	,ease: function(value) {
		this._ease = value;
		return this;
	}
	,delay: function(value) {
		this._delay = value;
		return this;
	}
	,interval: function(value) {
		this._interval = value;
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = 0;
		}
		this._repeat = value;
		return this;
	}
	,yoyo: function(value) {
		if(value == null) {
			value = true;
		}
		this._yoyo = value;
		return this;
	}
	,zigzag: function(value) {
		if(value == null) {
			value = true;
		}
		this._zigzag = value;
		return this;
	}
	,autoPlay: function(value) {
		if(value == null) {
			value = true;
		}
		this._autoPlay = value;
		return this;
	}
	,__class__: tweenx909_advanced_DefaultsX
};
var tweenx909_advanced_GroupX = function(source,type,defaults) {
	this.current = 0;
	this.source = source;
	this.type = type;
	if(defaults != null) {
		this.defaults = defaults.clone();
	}
};
tweenx909_advanced_GroupX.__name__ = ["tweenx909","advanced","GroupX"];
tweenx909_advanced_GroupX.prototype = {
	__class__: tweenx909_advanced_GroupX
};
var tweenx909_advanced__$GroupX_GroupTypeX = { __ename__ : true, __constructs__ : ["SERIAL","LAG"] };
tweenx909_advanced__$GroupX_GroupTypeX.SERIAL = ["SERIAL",0];
tweenx909_advanced__$GroupX_GroupTypeX.SERIAL.__enum__ = tweenx909_advanced__$GroupX_GroupTypeX;
tweenx909_advanced__$GroupX_GroupTypeX.LAG = function(lag) { var $x = ["LAG",1,lag]; $x.__enum__ = tweenx909_advanced__$GroupX_GroupTypeX; return $x; };
var tweenx909_advanced_StandardTweenX = function(type,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos) {
	this._autoFrom = true;
	if(type[1] == 1) {
		var toArr = type[4];
		var fromArr = type[3];
		var _from = fromArr.pop();
		var _to = toArr.pop();
		var tmp = $iterator(type[2])();
		while(tmp.hasNext()) {
			tmp.next();
			toArr.push(tweenx909_advanced_StandardTweenX.clone(_to));
			fromArr.push(tweenx909_advanced_StandardTweenX.clone(_from));
		}
	}
	tweenx909_TweenX.call(this,type,time,ease,delay,repeat,yoyo,zigzag,interval,autoPlay,posInfos);
};
tweenx909_advanced_StandardTweenX.__name__ = ["tweenx909","advanced","StandardTweenX"];
tweenx909_advanced_StandardTweenX.clone = function(obj) {
	var result = { };
	var _g = 0;
	var _g1 = Reflect.fields(obj);
	while(_g < _g1.length) {
		var key = _g1[_g];
		++_g;
		var tmp;
		var tmp1;
		if(obj == null) {
			tmp1 = null;
		} else {
			var tmp2;
			if(obj.__properties__) {
				tmp = obj.__properties__["get_" + key];
				tmp2 = tmp;
			} else {
				tmp2 = false;
			}
			if(tmp2) {
				tmp1 = obj[tmp]();
			} else {
				tmp1 = obj[key];
			}
		}
		var value = tmp1;
		var tmp3;
		var tmp4;
		if(result.__properties__) {
			tmp3 = result.__properties__["set_" + key];
			tmp4 = tmp3;
		} else {
			tmp4 = false;
		}
		if(tmp4) {
			result[tmp3](value);
		} else {
			result[key] = value;
		}
	}
	return result;
};
tweenx909_advanced_StandardTweenX.__super__ = tweenx909_TweenX;
tweenx909_advanced_StandardTweenX.prototype = $extend(tweenx909_TweenX.prototype,{
	checkField: function(target,key) {
		if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
			throw new js__$Boot_HaxeError(this.error(Type.getClassName(target == null?null:js_Boot.getClass(target)) + " does not have field '" + key + "'"));
		}
	}
	,_getTarget: function() {
		return this;
	}
	,_setTo: function(key,value) {
		this.checkInited();
		var _g = this._type;
		switch(_g[1]) {
		case 1:
			var toArr = _g[4];
			var i = 0;
			var tmp = $iterator(_g[2])();
			while(tmp.hasNext()) {
				var t = tmp.next();
				if(!js_Boot.__instanceof(Reflect.field(t,key),Dynamic)) {
					throw new js__$Boot_HaxeError(this.error(Type.getClassName(t == null?null:js_Boot.getClass(t)) + " does not have field '" + key + "'"));
				}
				var _to = toArr[i++];
				Reflect.deleteField(_to,"$$$$" + key);
				var tmp1;
				var tmp2;
				if(_to.__properties__) {
					tmp1 = _to.__properties__["set_" + key];
					tmp2 = tmp1;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					_to[tmp1](value);
				} else {
					_to[key] = value;
				}
			}
			break;
		case 2:
			var _to1 = _g[4];
			var target = _g[2];
			if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
				throw new js__$Boot_HaxeError(this.error(Type.getClassName(target == null?null:js_Boot.getClass(target)) + " does not have field '" + key + "'"));
			}
			Reflect.deleteField(_to1,"$$$$" + key);
			var tmp3;
			var tmp4;
			if(_to1.__properties__) {
				tmp3 = _to1.__properties__["set_" + key];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				_to1[tmp3](value);
			} else {
				_to1[key] = value;
			}
			break;
		default:
		}
	}
	,_setRelativeTo: function(key,value) {
		this.checkInited();
		var _g = this._type;
		switch(_g[1]) {
		case 1:
			var toArr = _g[4];
			var i = 0;
			var tmp = $iterator(_g[2])();
			while(tmp.hasNext()) {
				var t = tmp.next();
				if(!js_Boot.__instanceof(Reflect.field(t,key),Dynamic)) {
					throw new js__$Boot_HaxeError(this.error(Type.getClassName(t == null?null:js_Boot.getClass(t)) + " does not have field '" + key + "'"));
				}
				var _to = toArr[i++];
				Reflect.deleteField(_to,"$$$$" + key);
				var tmp1;
				var tmp2;
				if(t == null) {
					tmp2 = null;
				} else {
					var tmp3;
					if(t.__properties__) {
						tmp1 = t.__properties__["get_" + key];
						tmp3 = tmp1;
					} else {
						tmp3 = false;
					}
					if(tmp3) {
						tmp2 = t[tmp1]();
					} else {
						tmp2 = t[key];
					}
				}
				var value1 = tmp2 + value;
				var tmp4;
				var tmp5;
				if(_to.__properties__) {
					tmp4 = _to.__properties__["set_" + key];
					tmp5 = tmp4;
				} else {
					tmp5 = false;
				}
				if(tmp5) {
					_to[tmp4](value1);
				} else {
					_to[key] = value1;
				}
			}
			break;
		case 2:
			var _to1 = _g[4];
			var target = _g[2];
			if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
				throw new js__$Boot_HaxeError(this.error(Type.getClassName(target == null?null:js_Boot.getClass(target)) + " does not have field '" + key + "'"));
			}
			Reflect.deleteField(_to1,"$$$$" + key);
			var tmp6;
			var tmp7;
			if(target == null) {
				tmp7 = null;
			} else {
				var tmp8;
				if(target.__properties__) {
					tmp6 = target.__properties__["get_" + key];
					tmp8 = tmp6;
				} else {
					tmp8 = false;
				}
				if(tmp8) {
					tmp7 = target[tmp6]();
				} else {
					tmp7 = target[key];
				}
			}
			var value2 = tmp7 + value;
			var tmp9;
			var tmp10;
			if(_to1.__properties__) {
				tmp9 = _to1.__properties__["set_" + key];
				tmp10 = tmp9;
			} else {
				tmp10 = false;
			}
			if(tmp10) {
				_to1[tmp9](value2);
			} else {
				_to1[key] = value2;
			}
			break;
		default:
		}
	}
	,_setRelativeTo2: function(key,value) {
		this.checkInited();
		var _g = this._type;
		switch(_g[1]) {
		case 1:
			var toArr = _g[4];
			var i = 0;
			var tmp = $iterator(_g[2])();
			while(tmp.hasNext()) {
				var t = tmp.next();
				if(!js_Boot.__instanceof(Reflect.field(t,key),Dynamic)) {
					throw new js__$Boot_HaxeError(this.error(Type.getClassName(t == null?null:js_Boot.getClass(t)) + " does not have field '" + key + "'"));
				}
				var _to = toArr[i++];
				Reflect.deleteField(_to,key);
				var key1 = "$$$$" + key;
				var tmp1;
				var tmp2;
				if(_to.__properties__) {
					tmp1 = _to.__properties__["set_" + key1];
					tmp2 = tmp1;
				} else {
					tmp2 = false;
				}
				if(tmp2) {
					_to[tmp1](value);
				} else {
					_to[key1] = value;
				}
			}
			break;
		case 2:
			var _to1 = _g[4];
			var target = _g[2];
			if(!js_Boot.__instanceof(Reflect.field(target,key),Dynamic)) {
				throw new js__$Boot_HaxeError(this.error(Type.getClassName(target == null?null:js_Boot.getClass(target)) + " does not have field '" + key + "'"));
			}
			Reflect.deleteField(_to1,key);
			var key2 = "$$$$" + key;
			var tmp3;
			var tmp4;
			if(_to1.__properties__) {
				tmp3 = _to1.__properties__["set_" + key2];
				tmp4 = tmp3;
			} else {
				tmp4 = false;
			}
			if(tmp4) {
				_to1[tmp3](value);
			} else {
				_to1[key2] = value;
			}
			break;
		default:
		}
	}
	,_initFromTo: function(target,_from,_to) {
		if(this._autoFrom == null) {
			this._autoFrom = tweenx909_TweenX.defaultAutoFrom;
		}
		var data = null;
		var _g = 0;
		var _g1 = Reflect.fields(_to);
		while(_g < _g1.length) {
			var key0 = _g1[_g];
			++_g;
			var tmp = typeof((function($this) {
				var $r;
				var tmp1;
				$r = _to == null?null:_to.__properties__ && (tmp1 = _to.__properties__["get_" + key0])?_to[tmp1]():_to[key0];
				return $r;
			}(this)));
			if(tmp != "number") {
				this._fastMode = false;
			}
			var relative = HxOverrides.substr(key0,0,4) == "$$$$";
			var key = relative?HxOverrides.substr(key0,4,null):key0;
			var fromValue;
			var tmp2;
			var tmp3;
			if(_to == null) {
				tmp3 = null;
			} else {
				var tmp4;
				if(_to.__properties__) {
					tmp2 = _to.__properties__["get_" + key0];
					tmp4 = tmp2;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					tmp3 = _to[tmp2]();
				} else {
					tmp3 = _to[key0];
				}
			}
			var toValue = tmp3;
			if(!Object.prototype.hasOwnProperty.call(_from,key)) {
				if(this._autoFrom) {
					if(data == null) {
						data = { };
						var tmp5;
						if(tweenx909_TweenX.dictionary.h[target.__id__] != null) {
							tmp5 = tweenx909_TweenX.dictionary.h[target.__id__];
						} else {
							tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
							tweenx909_TweenX.dictionary.set(target,tweenx909_TweenX._objCounter);
							tmp5 = tweenx909_TweenX._objCounter;
						}
						var logs = tweenx909_TweenX._initLog[tmp5];
						if(logs != null) {
							var _g2 = 0;
							while(_g2 < logs.length) {
								var log = logs[_g2];
								++_g2;
								if(log.target == target) {
									data = log.data;
								}
							}
						}
					}
					if(Object.prototype.hasOwnProperty.call(data,key)) {
						var tmp6;
						var tmp7;
						if(data == null) {
							tmp7 = null;
						} else {
							var tmp8;
							if(data.__properties__) {
								tmp6 = data.__properties__["get_" + key];
								tmp8 = tmp6;
							} else {
								tmp8 = false;
							}
							if(tmp8) {
								tmp7 = data[tmp6]();
							} else {
								tmp7 = data[key];
							}
						}
						fromValue = this._defaultFrom(tmp7,toValue);
					} else {
						var tmp9;
						var tmp10;
						if(target == null) {
							tmp10 = null;
						} else {
							var tmp11;
							if(target.__properties__) {
								tmp9 = target.__properties__["get_" + key];
								tmp11 = tmp9;
							} else {
								tmp11 = false;
							}
							if(tmp11) {
								tmp10 = target[tmp9]();
							} else {
								tmp10 = target[key];
							}
						}
						fromValue = this._defaultFrom(tmp10,toValue);
					}
				} else {
					var tmp12;
					var tmp13;
					if(target == null) {
						tmp13 = null;
					} else {
						var tmp14;
						if(target.__properties__) {
							tmp12 = target.__properties__["get_" + key];
							tmp14 = tmp12;
						} else {
							tmp14 = false;
						}
						if(tmp14) {
							tmp13 = target[tmp12]();
						} else {
							tmp13 = target[key];
						}
					}
					fromValue = this._defaultFrom(tmp13,toValue);
				}
				var tmp15;
				var tmp16;
				if(_from.__properties__) {
					tmp15 = _from.__properties__["set_" + key];
					tmp16 = tmp15;
				} else {
					tmp16 = false;
				}
				if(tmp16) {
					_from[tmp15](fromValue);
				} else {
					_from[key] = fromValue;
				}
			} else {
				var tmp17;
				var tmp18;
				if(_from == null) {
					tmp18 = null;
				} else {
					var tmp19;
					if(_from.__properties__) {
						tmp17 = _from.__properties__["get_" + key];
						tmp19 = tmp17;
					} else {
						tmp19 = false;
					}
					if(tmp19) {
						tmp18 = _from[tmp17]();
					} else {
						tmp18 = _from[key];
					}
				}
				fromValue = tmp18;
			}
			if(relative) {
				var value = toValue + fromValue;
				var tmp20;
				var tmp21;
				if(_to.__properties__) {
					tmp20 = _to.__properties__["set_" + key];
					tmp21 = tmp20;
				} else {
					tmp21 = false;
				}
				if(tmp21) {
					_to[tmp20](value);
				} else {
					_to[key] = value;
				}
				Reflect.deleteField(_to,key0);
			}
		}
		var data1 = { };
		var fs = Reflect.fields(_from);
		var _g3 = 0;
		while(_g3 < fs.length) {
			var key1 = fs[_g3];
			++_g3;
			if(!Object.prototype.hasOwnProperty.call(_to,key1)) {
				var tmp22;
				var tmp23;
				if(_from == null) {
					tmp23 = null;
				} else {
					var tmp24;
					if(_from.__properties__) {
						tmp22 = _from.__properties__["get_" + key1];
						tmp24 = tmp22;
					} else {
						tmp24 = false;
					}
					if(tmp24) {
						tmp23 = _from[tmp22]();
					} else {
						tmp23 = _from[key1];
					}
				}
				var value1 = tmp23;
				var tmp25;
				var tmp26;
				if(_to.__properties__) {
					tmp25 = _to.__properties__["set_" + key1];
					tmp26 = tmp25;
				} else {
					tmp26 = false;
				}
				if(tmp26) {
					_to[tmp25](value1);
				} else {
					_to[key1] = value1;
				}
			}
			var p = this._time;
			var back = this._repeat % 2 == 0;
			var t = p / this._time;
			if(this._odd) {
				back = !back;
			}
			if(this._inverted) {
				t = 1 - t;
			}
			if(back) {
				if(this._yoyo) {
					t = 1 - t;
				}
				t = this._ease(t);
				if(this._zigzag) {
					t = 1 - t;
				}
			} else {
				t = this._ease(t);
			}
			var t1 = t;
			var tmp27;
			var tmp28;
			if(_from == null) {
				tmp28 = null;
			} else {
				var tmp29;
				if(_from.__properties__) {
					tmp27 = _from.__properties__["get_" + key1];
					tmp29 = tmp27;
				} else {
					tmp29 = false;
				}
				if(tmp29) {
					tmp28 = _from[tmp27]();
				} else {
					tmp28 = _from[key1];
				}
			}
			var _from1 = tmp28;
			var tmp30;
			var tmp31;
			if(_to == null) {
				tmp31 = null;
			} else {
				var tmp32;
				if(_to.__properties__) {
					tmp30 = _to.__properties__["get_" + key1];
					tmp32 = tmp30;
				} else {
					tmp32 = false;
				}
				if(tmp32) {
					tmp31 = _to[tmp30]();
				} else {
					tmp31 = _to[key1];
				}
			}
			var _to1 = tmp31;
			var t2 = 1 - t1;
			var value2;
			if(typeof(_to1) == "number") {
				var d = _from1 * t2 + _to1 * t1;
				value2 = d;
			} else {
				var i = 0;
				var l = tweenx909_TweenX._rules.length;
				var f;
				var result = null;
				var ok = false;
				while(i < l) {
					f = tweenx909_TweenX._rules[i++];
					if(js_Boot.__instanceof(_to1,f.inputClass)) {
						ok = true;
						result = f.calc(_from1,_to1,t1,t2,this);
						break;
					}
				}
				if(!ok) {
					var o = _to1;
					throw new js__$Boot_HaxeError(this.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
				}
				value2 = result;
			}
			var tmp33;
			var tmp34;
			if(data1.__properties__) {
				tmp33 = data1.__properties__["set_" + key1];
				tmp34 = tmp33;
			} else {
				tmp34 = false;
			}
			if(tmp34) {
				data1[tmp33](value2);
			} else {
				data1[key1] = value2;
			}
		}
		var id;
		if(tweenx909_TweenX.dictionary.h[target.__id__] != null) {
			id = tweenx909_TweenX.dictionary.h[target.__id__];
		} else {
			tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
			tweenx909_TweenX.dictionary.set(target,tweenx909_TweenX._objCounter);
			id = tweenx909_TweenX._objCounter;
		}
		if(tweenx909_TweenX._initLog[id] == null) {
			tweenx909_TweenX._initLog[id] = [{ target : target, data : data1}];
		} else {
			var flag = false;
			var _g4 = 0;
			var _g11 = tweenx909_TweenX._initLog[id];
			while(_g4 < _g11.length) {
				var log1 = _g11[_g4];
				++_g4;
				if(log1.target == target) {
					var _g21 = 0;
					var _g31 = Reflect.fields(data1);
					while(_g21 < _g31.length) {
						var key2 = _g31[_g21];
						++_g21;
						var o1 = log1.data;
						var tmp35;
						var tmp36;
						if(data1 == null) {
							tmp36 = null;
						} else {
							var tmp37;
							if(data1.__properties__) {
								tmp35 = data1.__properties__["get_" + key2];
								tmp37 = tmp35;
							} else {
								tmp37 = false;
							}
							if(tmp37) {
								tmp36 = data1[tmp35]();
							} else {
								tmp36 = data1[key2];
							}
						}
						var value3 = tmp36;
						var tmp38;
						var tmp39;
						if(o1.__properties__) {
							tmp38 = o1.__properties__["set_" + key2];
							tmp39 = tmp38;
						} else {
							tmp39 = false;
						}
						if(tmp39) {
							o1[tmp38](value3);
						} else {
							o1[key2] = value3;
						}
					}
					flag = true;
					break;
				}
			}
			if(!flag) {
				tweenx909_TweenX._initLog[id].push({ target : target, data : data1});
			}
		}
	}
	,_initFrom: function(target,_from,_to) {
		var data = null;
		var _g = 0;
		var _g1 = Reflect.fields(_to);
		while(_g < _g1.length) {
			var key0 = _g1[_g];
			++_g;
			var tmp = typeof((function($this) {
				var $r;
				var tmp1;
				$r = _to == null?null:_to.__properties__ && (tmp1 = _to.__properties__["get_" + key0])?_to[tmp1]():_to[key0];
				return $r;
			}(this)));
			if(tmp != "number") {
				this._fastMode = false;
			}
			var relative = HxOverrides.substr(key0,0,4) == "$$$$";
			var key = relative?HxOverrides.substr(key0,4,null):key0;
			var fromValue;
			var tmp2;
			var tmp3;
			if(_to == null) {
				tmp3 = null;
			} else {
				var tmp4;
				if(_to.__properties__) {
					tmp2 = _to.__properties__["get_" + key0];
					tmp4 = tmp2;
				} else {
					tmp4 = false;
				}
				if(tmp4) {
					tmp3 = _to[tmp2]();
				} else {
					tmp3 = _to[key0];
				}
			}
			var toValue = tmp3;
			if(!Object.prototype.hasOwnProperty.call(_from,key)) {
				if(this._autoFrom) {
					if(data == null) {
						data = { };
						var tmp5;
						if(tweenx909_TweenX.dictionary.h[target.__id__] != null) {
							tmp5 = tweenx909_TweenX.dictionary.h[target.__id__];
						} else {
							tweenx909_TweenX._objCounter = 1 + tweenx909_TweenX._objCounter % 33029;
							tweenx909_TweenX.dictionary.set(target,tweenx909_TweenX._objCounter);
							tmp5 = tweenx909_TweenX._objCounter;
						}
						var logs = tweenx909_TweenX._initLog[tmp5];
						if(logs != null) {
							var _g2 = 0;
							while(_g2 < logs.length) {
								var log = logs[_g2];
								++_g2;
								if(log.target == target) {
									data = log.data;
								}
							}
						}
					}
					if(Object.prototype.hasOwnProperty.call(data,key)) {
						var tmp6;
						var tmp7;
						if(data == null) {
							tmp7 = null;
						} else {
							var tmp8;
							if(data.__properties__) {
								tmp6 = data.__properties__["get_" + key];
								tmp8 = tmp6;
							} else {
								tmp8 = false;
							}
							if(tmp8) {
								tmp7 = data[tmp6]();
							} else {
								tmp7 = data[key];
							}
						}
						fromValue = this._defaultFrom(tmp7,toValue);
					} else {
						var tmp9;
						var tmp10;
						if(target == null) {
							tmp10 = null;
						} else {
							var tmp11;
							if(target.__properties__) {
								tmp9 = target.__properties__["get_" + key];
								tmp11 = tmp9;
							} else {
								tmp11 = false;
							}
							if(tmp11) {
								tmp10 = target[tmp9]();
							} else {
								tmp10 = target[key];
							}
						}
						fromValue = this._defaultFrom(tmp10,toValue);
					}
				} else {
					var tmp12;
					var tmp13;
					if(target == null) {
						tmp13 = null;
					} else {
						var tmp14;
						if(target.__properties__) {
							tmp12 = target.__properties__["get_" + key];
							tmp14 = tmp12;
						} else {
							tmp14 = false;
						}
						if(tmp14) {
							tmp13 = target[tmp12]();
						} else {
							tmp13 = target[key];
						}
					}
					fromValue = this._defaultFrom(tmp13,toValue);
				}
				var tmp15;
				var tmp16;
				if(_from.__properties__) {
					tmp15 = _from.__properties__["set_" + key];
					tmp16 = tmp15;
				} else {
					tmp16 = false;
				}
				if(tmp16) {
					_from[tmp15](fromValue);
				} else {
					_from[key] = fromValue;
				}
			} else {
				var tmp17;
				var tmp18;
				if(_from == null) {
					tmp18 = null;
				} else {
					var tmp19;
					if(_from.__properties__) {
						tmp17 = _from.__properties__["get_" + key];
						tmp19 = tmp17;
					} else {
						tmp19 = false;
					}
					if(tmp19) {
						tmp18 = _from[tmp17]();
					} else {
						tmp18 = _from[key];
					}
				}
				fromValue = tmp18;
			}
			if(relative) {
				var value = toValue + fromValue;
				var tmp20;
				var tmp21;
				if(_to.__properties__) {
					tmp20 = _to.__properties__["set_" + key];
					tmp21 = tmp20;
				} else {
					tmp21 = false;
				}
				if(tmp21) {
					_to[tmp20](value);
				} else {
					_to[key] = value;
				}
				Reflect.deleteField(_to,key0);
			}
		}
	}
	,_defaultFrom: function(value,_to) {
		if(typeof(_to) == "number") {
			return value;
		}
		var _g = 0;
		var _g1 = tweenx909_TweenX._rules;
		while(_g < _g1.length) {
			var r = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(_to,r.inputClass)) {
				return r.defaultFrom(value,_to,this);
			}
		}
		var o = _to;
		throw new js__$Boot_HaxeError(this.error("The tween rule for " + Type.getClassName(o == null?null:js_Boot.getClass(o)) + " is not defined"));
	}
	,play: function() {
		tweenx909_TweenX.prototype.play.call(this);
		return this;
	}
	,stop: function() {
		tweenx909_TweenX.prototype.stop.call(this);
		return this;
	}
	,update: function(time) {
		tweenx909_TweenX.prototype.update.call(this,time);
		return this;
	}
	,'goto': function(time,andPlay) {
		if(andPlay == null) {
			andPlay = false;
		}
		if(time == null) {
			time = 0;
		}
		tweenx909_TweenX.prototype["goto"].call(this,time,andPlay);
		return this;
	}
	,onDelay: function(handler) {
		tweenx909_TweenX.prototype.onDelay.call(this,handler);
		return this;
	}
	,onFinish: function(handler) {
		tweenx909_TweenX.prototype.onFinish.call(this,handler);
		return this;
	}
	,onFoot: function(handler) {
		tweenx909_TweenX.prototype.onFoot.call(this,handler);
		return this;
	}
	,onHead: function(handler) {
		tweenx909_TweenX.prototype.onHead.call(this,handler);
		return this;
	}
	,onInterval: function(handler) {
		tweenx909_TweenX.prototype.onInterval.call(this,handler);
		return this;
	}
	,onStop: function(handler) {
		tweenx909_TweenX.prototype.onStop.call(this,handler);
		return this;
	}
	,onPlay: function(handler) {
		tweenx909_TweenX.prototype.onPlay.call(this,handler);
		return this;
	}
	,onRepeat: function(handler) {
		tweenx909_TweenX.prototype.onRepeat.call(this,handler);
		return this;
	}
	,onRest: function(handler) {
		tweenx909_TweenX.prototype.onRest.call(this,handler);
		return this;
	}
	,onUpdate: function(handler) {
		tweenx909_TweenX.prototype.onUpdate.call(this,handler);
		return this;
	}
	,addEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			var arr = this._eventListeners[i] == null?this._eventListeners[i] = []:this._eventListeners[i];
			if(!Lambda.has(arr,listener)) {
				arr.push(listener);
			}
		}
		return this;
	}
	,removeEventListener: function(type,listener) {
		var i = tweenx909_TweenX.eventIndex(type);
		if(i >= 0) {
			if(this._eventListeners[i] != null) {
				HxOverrides.remove(this._eventListeners[i],listener);
			}
		}
		return this;
	}
	,time: function(value) {
		tweenx909_TweenX.prototype.time.call(this,value);
		return this;
	}
	,ease: function(value) {
		tweenx909_TweenX.prototype.ease.call(this,value);
		return this;
	}
	,delay: function(value) {
		tweenx909_TweenX.prototype.delay.call(this,value);
		return this;
	}
	,rest: function(value) {
		tweenx909_TweenX.prototype.rest.call(this,value);
		return this;
	}
	,interval: function(value) {
		tweenx909_TweenX.prototype.interval.call(this,value);
		return this;
	}
	,repeat: function(value) {
		if(value == null) {
			value = 1;
		}
		tweenx909_TweenX.prototype.repeat.call(this,value);
		return this;
	}
	,yoyo: function(value) {
		if(value == null) {
			value = true;
		}
		tweenx909_TweenX.prototype.yoyo.call(this,value);
		return this;
	}
	,zigzag: function(value) {
		if(value == null) {
			value = true;
		}
		tweenx909_TweenX.prototype.zigzag.call(this,value);
		return this;
	}
	,autoPlay: function(value) {
		if(value == null) {
			value = true;
		}
		tweenx909_TweenX.prototype.autoPlay.call(this,value);
		return this;
	}
	,setTimeScale: function(value) {
		if(value == null) {
			value = 0;
		}
		tweenx909_TweenX.prototype.setTimeScale.call(this,value);
		return this;
	}
	,skip: function(delay) {
		if(delay == null) {
			delay = 0;
		}
		tweenx909_TweenX.prototype.skip.call(this);
		return this;
	}
	,autoFrom: function(value) {
		if(value == null) {
			value = true;
		}
		this.checkInited();
		this._autoFrom = value;
		return this;
	}
	,__class__: tweenx909_advanced_StandardTweenX
});
var tweenx909_advanced_TweenTypeX = { __ename__ : true, __constructs__ : ["GROUP","ARRAY","FROM_TO","FUNC","CALL"] };
tweenx909_advanced_TweenTypeX.GROUP = function(group) { var $x = ["GROUP",0,group]; $x.__enum__ = tweenx909_advanced_TweenTypeX; return $x; };
tweenx909_advanced_TweenTypeX.ARRAY = function(targets,_from,_to) { var $x = ["ARRAY",1,targets,_from,_to]; $x.__enum__ = tweenx909_advanced_TweenTypeX; return $x; };
tweenx909_advanced_TweenTypeX.FROM_TO = function(target,_from,_to) { var $x = ["FROM_TO",2,target,_from,_to]; $x.__enum__ = tweenx909_advanced_TweenTypeX; return $x; };
tweenx909_advanced_TweenTypeX.FUNC = function(func,_from,_to) { var $x = ["FUNC",3,func,_from,_to]; $x.__enum__ = tweenx909_advanced_TweenTypeX; return $x; };
tweenx909_advanced_TweenTypeX.CALL = function(func) { var $x = ["CALL",4,func]; $x.__enum__ = tweenx909_advanced_TweenTypeX; return $x; };
var tweenxcore_FloatTools = function() { };
tweenxcore_FloatTools.__name__ = ["tweenxcore","FloatTools"];
tweenxcore_FloatTools.revert = function(rate) {
	return 1 - rate;
};
tweenxcore_FloatTools.clamp = function(value,min,max) {
	if(max == null) {
		max = 1.0;
	}
	if(min == null) {
		min = 0.0;
	}
	if(value <= min) {
		return min;
	} else if(max <= value) {
		return max;
	} else {
		return value;
	}
};
tweenxcore_FloatTools.lerp = function(rate,from,to) {
	return from * (1 - rate) + to * rate;
};
tweenxcore_FloatTools.inverseLerp = function(value,from,to) {
	return (value - from) / (to - from);
};
tweenxcore_FloatTools.repeat = function(value,from,to) {
	if(to == null) {
		to = 1.0;
	}
	if(from == null) {
		from = 0.0;
	}
	var p = (value - from) / (to - from);
	return p - Math.floor(p);
};
tweenxcore_FloatTools.shake = function(rate,center,randomFunc) {
	if(center == null) {
		center = 0.0;
	}
	if(randomFunc == null) {
		randomFunc = Math.random;
	}
	var rate1 = randomFunc();
	return center + (-rate * (1 - rate1) + rate * rate1);
};
tweenxcore_FloatTools.spread = function(rate,scale) {
	return -scale * (1 - rate) + scale * rate;
};
tweenxcore_FloatTools.sinByRate = function(rate) {
	return Math.sin(rate * 2 * Math.PI);
};
tweenxcore_FloatTools.cosByRate = function(rate) {
	return Math.cos(rate * 2 * Math.PI);
};
tweenxcore_FloatTools.yoyo = function(rate,easing) {
	return easing((rate < 0.5?rate:1 - rate) * 2);
};
tweenxcore_FloatTools.zigzag = function(rate,easing) {
	if(rate < 0.5) {
		return easing(rate * 2);
	} else {
		return 1 - easing((rate - 0.5) * 2);
	}
};
tweenxcore_FloatTools.mixEasing = function(rate,easing1,easing2,easing2Strength) {
	if(easing2Strength == null) {
		easing2Strength = 0.5;
	}
	return easing1(rate) * (1 - easing2Strength) + easing2(rate) * easing2Strength;
};
tweenxcore_FloatTools.crossfadeEasing = function(rate,easing1,easing2,easing2StrengthEasing,easing2StrengthStart,easing2StrengthEnd) {
	if(easing2StrengthEnd == null) {
		easing2StrengthEnd = 1;
	}
	if(easing2StrengthStart == null) {
		easing2StrengthStart = 0;
	}
	var rate1 = easing2StrengthEasing(rate);
	var rate2 = easing2StrengthStart * (1 - rate1) + easing2StrengthEnd * rate1;
	return easing1(rate) * (1 - rate2) + easing2(rate) * rate2;
};
tweenxcore_FloatTools.connectEasing = function(time,easing1,easing2,switchTime,switchValue) {
	if(switchValue == null) {
		switchValue = 0.5;
	}
	if(switchTime == null) {
		switchTime = 0.5;
	}
	if(time < switchTime) {
		var rate = easing1(time / switchTime);
		return 0 * (1 - rate) + switchValue * rate;
	} else {
		var rate1 = easing2((time - switchTime) / (1 - switchTime));
		return switchValue * (1 - rate1) + rate1;
	}
};
tweenxcore_FloatTools.oneTwoEasing = function(time,easingOne,easingTwo,switchTime) {
	if(switchTime == null) {
		switchTime = 0.5;
	}
	if(time < switchTime) {
		return easingOne(time / switchTime);
	} else {
		return easingTwo((time - switchTime) / (1 - switchTime));
	}
};
tweenxcore_FloatTools.binarySearch = function(sortedValues,value,boundaryMode) {
	if(boundaryMode == null) {
		boundaryMode = 0;
	}
	var min = 0;
	var max = sortedValues.length;
	if(boundaryMode == 0) {
		while(true) {
			var next = ((max - min) / 2 | 0) + min;
			if(sortedValues[next] <= value) {
				min = next + 1;
			} else {
				max = next;
			}
			if(min == max) {
				break;
			}
		}
	} else {
		while(true) {
			var next1 = ((max - min) / 2 | 0) + min;
			if(sortedValues[next1] < value) {
				min = next1 + 1;
			} else {
				max = next1;
			}
			if(min == max) {
				break;
			}
		}
	}
	return min;
};
tweenxcore_FloatTools.polyline = function(rate,values) {
	if(values.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else {
		var max = values.length - 1;
		var scaledRate = rate * max;
		var max1 = max - 1;
		var index = Math.floor(scaledRate <= 0?0:max1 <= scaledRate?max1:scaledRate);
		var innerRate = scaledRate - index;
		return values[index] * (1 - innerRate) + values[index + 1] * innerRate;
	}
};
tweenxcore_FloatTools.bezier2 = function(rate,from,control,to) {
	return (from * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + to * rate) * rate;
};
tweenxcore_FloatTools.bezier3 = function(rate,from,control1,control2,to) {
	var control = control1 * (1 - rate) + control2 * rate;
	return ((from * (1 - rate) + control1 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control2 * (1 - rate) + to * rate) * rate) * rate;
};
tweenxcore_FloatTools.bezier = function(rate,values) {
	if(values.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else if(values.length == 2) {
		return values[0] * (1 - rate) + values[1] * rate;
	} else if(values.length == 3) {
		var control = values[1];
		return (values[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + values[2] * rate) * rate;
	} else {
		return tweenxcore_FloatTools._bezier(rate,values);
	}
};
tweenxcore_FloatTools._bezier = function(rate,values) {
	if(values.length == 4) {
		var control1 = values[1];
		var control2 = values[2];
		var control = control1 * (1 - rate) + control2 * rate;
		return ((values[0] * (1 - rate) + control1 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control2 * (1 - rate) + values[3] * rate) * rate) * rate;
	}
	var _g = [];
	var _g2 = 0;
	var _g1 = values.length - 1;
	while(_g2 < _g1) {
		var i = _g2++;
		_g.push(values[i] * (1 - rate) + values[i + 1] * rate);
	}
	return tweenxcore_FloatTools._bezier(rate,_g);
};
tweenxcore_FloatTools.uniformQuadraticBSpline = function(rate,values) {
	if(values.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else if(values.length == 2) {
		return values[0] * (1 - rate) + values[1] * rate;
	} else {
		var max = values.length - 2;
		var scaledRate = rate * max;
		var max1 = max - 1;
		var index = Math.floor(scaledRate <= 0?0:max1 <= scaledRate?max1:scaledRate);
		var innerRate = scaledRate - index;
		var p0 = values[index];
		var p1 = values[index + 1];
		return innerRate * innerRate * (p0 / 2 - p1 + values[index + 2] / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
};
tweenxcore_FloatTools.frameToSecond = function(frame,fps) {
	return frame / fps;
};
tweenxcore_FloatTools.secondToFrame = function(second,fps) {
	return second * fps;
};
tweenxcore_FloatTools.degreeToRate = function(degree) {
	return degree / 360;
};
tweenxcore_FloatTools.rateToDegree = function(rate) {
	return rate * 360;
};
tweenxcore_FloatTools.radianToRate = function(radian) {
	return radian / (2 * Math.PI);
};
tweenxcore_FloatTools.rateToRadian = function(rate) {
	return rate * 2 * Math.PI;
};
tweenxcore_FloatTools.millisecondToBeat = function(millisecond,bpm) {
	return millisecond * bpm / 60000;
};
tweenxcore_FloatTools.beatToMillisecond = function(beat,bpm) {
	return beat * 60000 / bpm;
};
var tweenxcore_PointTools = function() { };
tweenxcore_PointTools.__name__ = ["tweenxcore","PointTools"];
tweenxcore_PointTools.polyline = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var tmp = $iterator(points)();
	while(tmp.hasNext()) {
		var p = tmp.next();
		xs.push(p.x);
		ys.push(p.y);
	}
	var tmp1;
	if(xs.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else {
		var max = xs.length - 1;
		var scaledRate = rate * max;
		var max1 = max - 1;
		var index = Math.floor(scaledRate <= 0?0:max1 <= scaledRate?max1:scaledRate);
		var innerRate = scaledRate - index;
		tmp1 = xs[index] * (1 - innerRate) + xs[index + 1] * innerRate;
	}
	outputPoint.x = tmp1;
	var tmp2;
	if(ys.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else {
		var max2 = ys.length - 1;
		var scaledRate1 = rate * max2;
		var max3 = max2 - 1;
		var index1 = Math.floor(scaledRate1 <= 0?0:max3 <= scaledRate1?max3:scaledRate1);
		var innerRate1 = scaledRate1 - index1;
		tmp2 = ys[index1] * (1 - innerRate1) + ys[index1 + 1] * innerRate1;
	}
	outputPoint.y = tmp2;
};
tweenxcore_PointTools.bezier2 = function(outputPoint,rate,from,control,to) {
	var from1 = from.x;
	var control1 = control.x;
	outputPoint.x = (from1 * (1 - rate) + control1 * rate) * (1 - rate) + (control1 * (1 - rate) + from.x * rate) * rate;
	var from2 = from.y;
	var control2 = control.y;
	outputPoint.y = (from2 * (1 - rate) + control2 * rate) * (1 - rate) + (control2 * (1 - rate) + from.y * rate) * rate;
};
tweenxcore_PointTools.bezier3 = function(outputPoint,rate,from,control1,control2,to) {
	var from1 = from.x;
	var control11 = control1.x;
	var control21 = control2.x;
	var to1 = from.x;
	var control = control11 * (1 - rate) + control21 * rate;
	outputPoint.x = ((from1 * (1 - rate) + control11 * rate) * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + (control21 * (1 - rate) + to1 * rate) * rate) * rate;
	var from2 = from.y;
	var control12 = control1.y;
	var control22 = control2.y;
	var to2 = from.y;
	var control3 = control12 * (1 - rate) + control22 * rate;
	outputPoint.y = ((from2 * (1 - rate) + control12 * rate) * (1 - rate) + control3 * rate) * (1 - rate) + (control3 * (1 - rate) + (control22 * (1 - rate) + to2 * rate) * rate) * rate;
};
tweenxcore_PointTools.bezier = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var tmp = $iterator(points)();
	while(tmp.hasNext()) {
		var p = tmp.next();
		xs.push(p.x);
		ys.push(p.y);
	}
	var tmp1;
	if(xs.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else if(xs.length == 2) {
		tmp1 = xs[0] * (1 - rate) + xs[1] * rate;
	} else if(xs.length == 3) {
		var control = xs[1];
		tmp1 = (xs[0] * (1 - rate) + control * rate) * (1 - rate) + (control * (1 - rate) + xs[2] * rate) * rate;
	} else {
		tmp1 = tweenxcore_FloatTools._bezier(rate,xs);
	}
	outputPoint.x = tmp1;
	var tmp2;
	if(ys.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else if(ys.length == 2) {
		tmp2 = ys[0] * (1 - rate) + ys[1] * rate;
	} else if(ys.length == 3) {
		var control1 = ys[1];
		tmp2 = (ys[0] * (1 - rate) + control1 * rate) * (1 - rate) + (control1 * (1 - rate) + ys[2] * rate) * rate;
	} else {
		tmp2 = tweenxcore_FloatTools._bezier(rate,ys);
	}
	outputPoint.y = tmp2;
};
tweenxcore_PointTools.uniformQuadraticBSpline = function(outputPoint,rate,points) {
	var xs = [];
	var ys = [];
	var tmp = $iterator(points)();
	while(tmp.hasNext()) {
		var p = tmp.next();
		xs.push(p.x);
		ys.push(p.y);
	}
	var tmp1;
	if(xs.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else if(xs.length == 2) {
		tmp1 = xs[0] * (1 - rate) + xs[1] * rate;
	} else {
		var max = xs.length - 2;
		var scaledRate = rate * max;
		var max1 = max - 1;
		var index = Math.floor(scaledRate <= 0?0:max1 <= scaledRate?max1:scaledRate);
		var innerRate = scaledRate - index;
		var p0 = xs[index];
		var p1 = xs[index + 1];
		tmp1 = innerRate * innerRate * (p0 / 2 - p1 + xs[index + 2] / 2) + innerRate * (-p0 + p1) + p0 / 2 + p1 / 2;
	}
	outputPoint.x = tmp1;
	var tmp2;
	if(ys.length < 2) {
		throw new js__$Boot_HaxeError("points length must be more than 2");
	} else if(ys.length == 2) {
		tmp2 = ys[0] * (1 - rate) + ys[1] * rate;
	} else {
		var max2 = ys.length - 2;
		var scaledRate1 = rate * max2;
		var max3 = max2 - 1;
		var index1 = Math.floor(scaledRate1 <= 0?0:max3 <= scaledRate1?max3:scaledRate1);
		var innerRate1 = scaledRate1 - index1;
		var p01 = ys[index1];
		var p11 = ys[index1 + 1];
		tmp2 = innerRate1 * innerRate1 * (p01 / 2 - p11 + ys[index1 + 2] / 2) + innerRate1 * (-p01 + p11) + p01 / 2 + p11 / 2;
	}
	outputPoint.y = tmp2;
};
var tweenxcore_MatrixTools = function() { };
tweenxcore_MatrixTools.__name__ = ["tweenxcore","MatrixTools"];
tweenxcore_MatrixTools.createSimilarityTransform = function(outputMatrix,fromX,fromY,toX,toY) {
	var dx = toX - fromX;
	var dy = toY - fromY;
	var rot = Math.atan2(dy,dx);
	var d = Math.sqrt(dx * dx + dy * dy);
	outputMatrix.a = d * Math.cos(rot);
	outputMatrix.b = d * Math.sin(rot);
	outputMatrix.c = -d * Math.sin(rot);
	outputMatrix.d = d * Math.cos(rot);
	outputMatrix.tx = fromX;
	outputMatrix.ty = fromY;
};
var tweenxcore_structure_TimelineSearchResult = function(data,index,rangeLeft,rangeRight) {
	this.data = data;
	this.index = index;
	this.rangeLeft = rangeLeft;
	this.rangeRight = rangeRight;
};
tweenxcore_structure_TimelineSearchResult.__name__ = ["tweenxcore","structure","TimelineSearchResult"];
tweenxcore_structure_TimelineSearchResult.prototype = {
	innerRate: function(rate) {
		var from = this.rangeLeft;
		return (rate - from) / (this.rangeRight - from);
	}
	,__class__: tweenxcore_structure_TimelineSearchResult
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = ["String"];
Array.__name__ = ["Array"];
Date.prototype.__class__ = Date;
Date.__name__ = ["Date"];
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
if(Math.imul != null) {
	haxe__$Int32_Int32_$Impl_$.mul = Math.imul;
}
de_polygonal_Printf._initialized = false;
de_polygonal_ds_HashKey._counter = 0;
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = { }.toString;
tweenx909_EventX.PLAY = "play";
tweenx909_EventX.DELAY = "delay";
tweenx909_EventX.HEAD = "head";
tweenx909_EventX.UPDATE = "update";
tweenx909_EventX.FOOT = "foot";
tweenx909_EventX.INTERVAL = "interval";
tweenx909_EventX.REPEAT = "repeat";
tweenx909_EventX.REST = "rest";
tweenx909_EventX.FINISH = "finish";
tweenx909_EventX.STOP = "stop";
tweenxcore_Easing.PI = 3.1415926535897932384626433832795;
tweenxcore_Easing.PI_H = 1.57079632679489656;
tweenxcore_Easing.LN_2 = 0.6931471805599453;
tweenxcore_Easing.LN_2_10 = 6.931471805599453;
tweenxcore_Easing.overshoot = 1.70158;
tweenxcore_Easing.amplitude = 1;
tweenxcore_Easing.period = 0.0003;
tweenx909_rule_BoolRuleX.inputClass = Bool;
tweenx909_rule_ArrayRuleX.inputClass = Array;
tweenx909_rule_TimelineRuleX.inputClass = tweenxcore_structure_Timeline;
tweenx909_rule_ArgbRuleX.inputClass = tweenxcore_color_ArgbColor;
tweenx909_rule_AhsvRuleX.inputClass = tweenxcore_color_AhsvColor;
tweenx909_rule_RgbRuleX.inputClass = tweenxcore_color_RgbColor;
tweenx909_rule_HsvRuleX.inputClass = tweenxcore_color_HsvColor;
tweenx909_rule_QuakeRuleX.inputClass = tweenx909_rule_QuakeX;
tweenx909_TweenX._tweens = [];
tweenx909_TweenX._addedTweens = [];
tweenx909_TweenX.managerInited = false;
tweenx909_TweenX.DEFAULT_EASE = tweenxcore_Easing.linear;
tweenx909_TweenX.DEFAULT_TIME = 0.3;
tweenx909_TweenX.DEFAULT_DELAY = 0;
tweenx909_TweenX.DEFAULT_REPEAT = 1;
tweenx909_TweenX.DEFAULT_INTERVAL = 0;
tweenx909_TweenX.DEFAULT_YOYO = false;
tweenx909_TweenX.DEFAULT_ZIGZAG = false;
tweenx909_TweenX.DEFAULT_AUTO_PLAY = true;
tweenx909_TweenX.DEFAULT_AUTO_FROM = true;
tweenx909_TweenX.defaultEase = tweenx909_TweenX.DEFAULT_EASE;
tweenx909_TweenX.defaultTime = 0.3;
tweenx909_TweenX.defaultDelay = 0;
tweenx909_TweenX.defaultInterval = 0;
tweenx909_TweenX.defaultRepeat = 1;
tweenx909_TweenX.defaultYoyo = false;
tweenx909_TweenX.defaultZigZag = false;
tweenx909_TweenX.defaultAutoPlay = true;
tweenx909_TweenX.defaultAutoFrom = true;
tweenx909_TweenX._rules = [tweenx909_rule_BoolRuleX,tweenx909_rule_ArrayRuleX,tweenx909_rule_TimelineRuleX,tweenx909_rule_ArgbRuleX,tweenx909_rule_AhsvRuleX,tweenx909_rule_RgbRuleX,tweenx909_rule_HsvRuleX,tweenx909_rule_QuakeRuleX];
tweenx909_TweenX.topLevelTimeScale = 1;
tweenx909_TweenX._groupDefaults = false;
tweenx909_TweenX.updateMode = tweenx909_advanced_UpdateModeX.TIME(60);
tweenx909_TweenX._initLog = [];
tweenx909_TweenX.dictionary = new haxe_ds_ObjectMap();
tweenx909_TweenX._objCounter = 0;
tweenx909_TweenX._MIN = 1.49011614158922645e-08;
tweenx909_TweenX.EVENT_ARRAY = ["play","delay","head","update","foot","interval","repeat","rest","finish","stop"];
tweenx909_TweenX._PLAY = 0;
tweenx909_TweenX._DELAY = 1;
tweenx909_TweenX._HEAD = 2;
tweenx909_TweenX._UPDATE = 3;
tweenx909_TweenX._FOOT = 4;
tweenx909_TweenX._INTERVAL = 5;
tweenx909_TweenX._REPEAT = 6;
tweenx909_TweenX._REST = 7;
tweenx909_TweenX._FINISH = 8;
tweenx909_TweenX._STOP = 9;
tweenx909_TweenX.idCounter = 0;
murmur_Medaille.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
